{
  "paragraphs": [
    {
      "text": "%md\n\n# Platform set-up following Spark restart \n\n(or to set up the platform environment in any new Spark context).\n\nProbably will be needed as part of the curated set of example notebooks if we advise Spark restarts as a pre-requisite to using the system.\n\nNotes and useful links:\n- SQL syntax: https://spark.apache.org/docs/3.0.0/sql-ref.html (undocumented at 2.4.7, so have to use more recent documentation - CAUTION do not navigate to other aspects of the API from here!) ",
      "user": "anonymous",
      "dateUpdated": "2022-03-17 15:02:34.004",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003ePlatform set-up following Spark restart\u003c/h1\u003e\n\u003cp\u003e(or to set up the platform environment in any new Spark context).\u003c/p\u003e\n\u003cp\u003eProbably will be needed as part of the curated set of example notebooks if we advise Spark restarts as a pre-requisite to using the system.\u003c/p\u003e\n\u003cp\u003eNotes and useful links:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSQL syntax: \u003ca href\u003d\"https://spark.apache.org/docs/3.0.0/sql-ref.html\"\u003ehttps://spark.apache.org/docs/3.0.0/sql-ref.html\u003c/a\u003e (undocumented at 2.4.7, so have to use more recent documentation - CAUTION do not navigate to other aspects of the API from here!)\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_274444046",
      "id": "20210504-130917_57061499",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-03-17 15:02:34.007",
      "dateFinished": "2022-03-17 15:02:34.017",
      "status": "FINISHED"
    },
    {
      "title": "Catalogue structure definitions",
      "text": "%pyspark\n\n# schemas defined from WFAU MS SQL schema files, excluding the spatial indexing attributes (which are not included in the original CSVs distributed by the respective Data Centres of course)\n\nfrom pyspark.sql.types import *\n\ngaia_source_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True),\n    StructField(\u0027designation\u0027, StringType(), True),\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027random_index\u0027, LongType(), True),\n    StructField(\u0027ref_epoch\u0027, FloatType(), True),\n    StructField(\u0027ra\u0027, DoubleType(), True),\n    StructField(\u0027ra_error\u0027, DoubleType(), True),\n    StructField(\u0027dec\u0027, DoubleType(), True),\n    StructField(\u0027dec_error\u0027, DoubleType(), True),\n    StructField(\u0027parallax\u0027, DoubleType(), True),\n    StructField(\u0027parallax_error\u0027, DoubleType(), True),\n    StructField(\u0027parallax_over_error\u0027, FloatType(), True),\n    StructField(\u0027pm\u0027, FloatType(), True),\n    StructField(\u0027pmra\u0027, DoubleType(), True),\n    StructField(\u0027pmra_error\u0027, FloatType(), True),\n    StructField(\u0027pmdec\u0027, DoubleType(), True),\n    StructField(\u0027pmdec_error\u0027, FloatType(), True),\n    StructField(\u0027ra_dec_corr\u0027, FloatType(), True),\n    StructField(\u0027ra_parallax_corr\u0027, FloatType(), True),\n    StructField(\u0027ra_pmra_corr\u0027, FloatType(), True),\n    StructField(\u0027ra_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_parallax_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_pmra_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027parallax_pmra_corr\u0027, FloatType(), True),\n    StructField(\u0027parallax_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027pmra_pmdec_corr\u0027, FloatType(), True),\n    StructField(\u0027astrometric_n_obs_al\u0027, ShortType(), True),\n    StructField(\u0027astrometric_n_obs_ac\u0027, ShortType(), True),\n    StructField(\u0027astrometric_n_good_obs_al\u0027, ShortType(), True),\n    StructField(\u0027astrometric_n_bad_obs_al\u0027, ShortType(), True),\n    StructField(\u0027astrometric_gof_al\u0027, FloatType(), True),\n    StructField(\u0027astrometric_chi2_al\u0027, FloatType(), True),\n    StructField(\u0027astrometric_excess_noise\u0027, FloatType(), True),\n    StructField(\u0027astrometric_excess_noise_sig\u0027, FloatType(), True),\n    StructField(\u0027astrometric_params_solved\u0027, ShortType(), True),\n    StructField(\u0027astrometric_primary_flag\u0027, BooleanType(), True),\n    StructField(\u0027nu_eff_used_in_astrometry\u0027, FloatType(), True),\n    StructField(\u0027pseudocolour\u0027, FloatType(), True),\n    StructField(\u0027pseudocolour_error\u0027, FloatType(), True),\n    StructField(\u0027ra_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027dec_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027parallax_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027pmra_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027pmdec_pseudocolour_corr\u0027, FloatType(), True),\n    StructField(\u0027astrometric_matched_transits\u0027, ShortType(), True),\n    StructField(\u0027visibility_periods_used\u0027, ShortType(), True),\n    StructField(\u0027astrometric_sigma5d_max\u0027, FloatType(), True),\n    StructField(\u0027matched_transits\u0027, ShortType(), True),\n    StructField(\u0027new_matched_transits\u0027, ShortType(), True),\n    StructField(\u0027matched_transits_removed\u0027, ShortType(), True),\n    StructField(\u0027ipd_gof_harmonic_amplitude\u0027, FloatType(), True),\n    StructField(\u0027ipd_gof_harmonic_phase\u0027, FloatType(), True),\n    StructField(\u0027ipd_frac_multi_peak\u0027, ShortType(), True),\n    StructField(\u0027ipd_frac_odd_win\u0027, ShortType(), True),\n    StructField(\u0027ruwe\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k1\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k2\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k3\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_strength_k4\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k1\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k2\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k3\u0027, FloatType(), True),\n    StructField(\u0027scan_direction_mean_k4\u0027, FloatType(), True),\n    StructField(\u0027duplicated_source\u0027, BooleanType(), True),\n    StructField(\u0027phot_g_n_obs\u0027, ShortType(), True),\n    StructField(\u0027phot_g_mean_flux\u0027, DoubleType(), True),\n    StructField(\u0027phot_g_mean_flux_error\u0027, FloatType(), True),\n    StructField(\u0027phot_g_mean_flux_over_error\u0027, FloatType(), True),\n    StructField(\u0027phot_g_mean_mag\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_n_obs\u0027, ShortType(), True),\n    StructField(\u0027phot_bp_mean_flux\u0027, DoubleType(), True),\n    StructField(\u0027phot_bp_mean_flux_error\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_mean_flux_over_error\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_mean_mag\u0027, FloatType(), True),\n    StructField(\u0027phot_rp_n_obs\u0027, ShortType(), True),\n    StructField(\u0027phot_rp_mean_flux\u0027, DoubleType(), True),\n    StructField(\u0027phot_rp_mean_flux_error\u0027, FloatType(), True),\n    StructField(\u0027phot_rp_mean_flux_over_error\u0027, FloatType(), True),\n    StructField(\u0027phot_rp_mean_mag\u0027, FloatType(), True),\n    StructField(\u0027phot_bp_n_contaminated_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_bp_n_blended_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_rp_n_contaminated_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_rp_n_blended_transits\u0027, ShortType(), True),\n    StructField(\u0027phot_proc_mode\u0027, ShortType(), True),\n    StructField(\u0027phot_bp_rp_excess_factor\u0027, FloatType(), True),\n    StructField(\u0027bp_rp\u0027, FloatType(), True),\n    StructField(\u0027bp_g\u0027, FloatType(), True),\n    StructField(\u0027g_rp\u0027, FloatType(), True),\n    StructField(\u0027dr2_radial_velocity\u0027, FloatType(), True),\n    StructField(\u0027dr2_radial_velocity_error\u0027, FloatType(), True),\n    StructField(\u0027dr2_rv_nb_transits\u0027, ShortType(), True),\n    StructField(\u0027dr2_rv_template_teff\u0027, FloatType(), True),\n    StructField(\u0027dr2_rv_template_logg\u0027, FloatType(), True),\n    StructField(\u0027dr2_rv_template_fe_h\u0027, FloatType(), True),\n    StructField(\u0027l\u0027, DoubleType(), True),\n    StructField(\u0027b\u0027, DoubleType(), True),\n    StructField(\u0027ecl_lon\u0027, DoubleType(), True),\n    StructField(\u0027ecl_lat\u0027, DoubleType(), True),\n])\n\ntwomass_psc_schema \u003d StructType([\n    StructField(\u0027ra\u0027, DoubleType(), True),\n    StructField(\u0027dec\u0027, DoubleType(), True),\n    StructField(\u0027err_maj\u0027, FloatType(), True),\n    StructField(\u0027err_min\u0027, FloatType(), True),\n    StructField(\u0027err_ang\u0027, ShortType(), True),\n    StructField(\u0027designation\u0027, StringType(), True),\n    StructField(\u0027j_m\u0027, FloatType(), True),\n    StructField(\u0027j_cmsig\u0027, FloatType(), True),\n    StructField(\u0027j_msigcom\u0027, FloatType(), True),\n    StructField(\u0027j_snr\u0027, FloatType(), True),\n    StructField(\u0027h_m\u0027, FloatType(), True),\n    StructField(\u0027h_cmsig\u0027, FloatType(), True),\n    StructField(\u0027h_msigcom\u0027, FloatType(), True),\n    StructField(\u0027h_snr\u0027, FloatType(), True),\n    StructField(\u0027k_m\u0027, FloatType(), True),\n    StructField(\u0027k_cmsig\u0027, FloatType(), True),\n    StructField(\u0027k_msigcom\u0027, FloatType(), True),\n    StructField(\u0027k_snr\u0027, FloatType(), True),\n    StructField(\u0027ph_qual\u0027, StringType(), True),\n    StructField(\u0027rd_flg\u0027, StringType(), True),\n    StructField(\u0027bl_flg\u0027, StringType(), True),\n    StructField(\u0027cc_flg\u0027, StringType(), True),\n    StructField(\u0027ndet\u0027, StringType(), True),\n    StructField(\u0027prox\u0027, FloatType(), True),\n    StructField(\u0027pxpa\u0027, ShortType(), True),\n    StructField(\u0027pxcntr\u0027, IntegerType(), True),\n    StructField(\u0027gal_contam\u0027, ShortType(), True),\n    StructField(\u0027mp_flg\u0027, ShortType(), True),\n    StructField(\u0027pts_key\u0027, IntegerType(), True),\n    StructField(\u0027hemis\u0027, StringType(), True),\n    StructField(\u0027date\u0027, DateType(), True),\n    StructField(\u0027scan\u0027, ShortType(), True),\n    StructField(\u0027glon\u0027, FloatType(), True),\n    StructField(\u0027glat\u0027, FloatType(), True),\n    StructField(\u0027x_scan\u0027, FloatType(), True),\n    StructField(\u0027jdate\u0027, DoubleType(), True),\n    StructField(\u0027j_psfchi\u0027, FloatType(), True),\n    StructField(\u0027h_psfchi\u0027, FloatType(), True),\n    StructField(\u0027k_psfchi\u0027, FloatType(), True),\n    StructField(\u0027j_m_stdap\u0027, FloatType(), True),\n    StructField(\u0027j_msig_stdap\u0027, FloatType(), True),\n    StructField(\u0027h_m_stdap\u0027, FloatType(), True),\n    StructField(\u0027h_msig_stdap\u0027, FloatType(), True),\n    StructField(\u0027k_m_stdap\u0027, FloatType(), True),\n    StructField(\u0027k_msig_stdap\u0027, FloatType(), True),\n    StructField(\u0027dist_edge_ns\u0027, IntegerType(), True),\n    StructField(\u0027dist_edge_ew\u0027, IntegerType(), True),\n    StructField(\u0027dist_edge_flg\u0027, StringType(), True),\n    StructField(\u0027dup_src\u0027, ShortType(), True),\n    StructField(\u0027use_src\u0027, ShortType(), True),\n    StructField(\u0027a\u0027, StringType(), True),\n    StructField(\u0027dist_opt\u0027, FloatType(), True),\n    StructField(\u0027phi_opt\u0027, ShortType(), True),\n    StructField(\u0027b_m_opt\u0027, FloatType(), True),\n    StructField(\u0027vr_m_opt\u0027, FloatType(), True),\n    StructField(\u0027nopt_mchs\u0027, ShortType(), True),\n    StructField(\u0027ext_key\u0027, IntegerType(), True),\n    StructField(\u0027scan_key\u0027, IntegerType(), True),\n    StructField(\u0027coadd_key\u0027, IntegerType(), True),\n    StructField(\u0027coadd\u0027, ShortType(), True),\n])\n\nallwise_sc_schema \u003d StructType([\n    StructField(\u0027designation\u0027, StringType(), True),\n    StructField(\u0027ra\u0027, DoubleType(), True),\n    StructField(\u0027dec\u0027, DoubleType(), True),\n    StructField(\u0027sigra\u0027, DoubleType(), True),\n    StructField(\u0027sigdec\u0027, DoubleType(), True),\n    StructField(\u0027sigradec\u0027, DoubleType(), True),\n    StructField(\u0027glon\u0027, DoubleType(), True),\n    StructField(\u0027glat\u0027, DoubleType(), True),\n    StructField(\u0027elon\u0027, DoubleType(), True),\n    StructField(\u0027elat\u0027, DoubleType(), True),\n    StructField(\u0027wx\u0027, DoubleType(), True),\n    StructField(\u0027wy\u0027, DoubleType(), True),\n    StructField(\u0027cntr\u0027, LongType(), True),\n    StructField(\u0027src_id\u0027, StringType(), True),\n    StructField(\u0027coadd_id\u0027, StringType(), True),\n    StructField(\u0027src\u0027, IntegerType(), True),\n    StructField(\u0027w1mpro\u0027, DoubleType(), True),\n    StructField(\u0027w1sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w1snr\u0027, DoubleType(), True),\n    StructField(\u0027w1rchi2\u0027, FloatType(), True),\n    StructField(\u0027w2mpro\u0027, DoubleType(), True),\n    StructField(\u0027w2sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w2snr\u0027, DoubleType(), True),\n    StructField(\u0027w2rchi2\u0027, FloatType(), True),\n    StructField(\u0027w3mpro\u0027, DoubleType(), True),\n    StructField(\u0027w3sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w3snr\u0027, DoubleType(), True),\n    StructField(\u0027w3rchi2\u0027, FloatType(), True),\n    StructField(\u0027w4mpro\u0027, DoubleType(), True),\n    StructField(\u0027w4sigmpro\u0027, DoubleType(), True),\n    StructField(\u0027w4snr\u0027, DoubleType(), True),\n    StructField(\u0027w4rchi2\u0027, FloatType(), True),\n    StructField(\u0027rchi2\u0027, FloatType(), True),\n    StructField(\u0027nb\u0027, IntegerType(), True),\n    StructField(\u0027na\u0027, IntegerType(), True),\n    StructField(\u0027w1sat\u0027, DoubleType(), True),\n    StructField(\u0027w2sat\u0027, DoubleType(), True),\n    StructField(\u0027w3sat\u0027, DoubleType(), True),\n    StructField(\u0027w4sat\u0027, DoubleType(), True),\n    StructField(\u0027satnum\u0027, StringType(), True),\n    StructField(\u0027ra_pm\u0027, DoubleType(), True),\n    StructField(\u0027dec_pm\u0027, DoubleType(), True),\n    StructField(\u0027sigra_pm\u0027, DoubleType(), True),\n    StructField(\u0027sigdec_pm\u0027, DoubleType(), True),\n    StructField(\u0027sigradec_pm\u0027, DoubleType(), True),\n    StructField(\u0027pmra\u0027, IntegerType(), True),\n    StructField(\u0027sigpmra\u0027, IntegerType(), True),\n    StructField(\u0027pmdec\u0027, IntegerType(), True),\n    StructField(\u0027sigpmdec\u0027, IntegerType(), True),\n    StructField(\u0027w1rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027w2rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027w3rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027w4rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027rchi2_pm\u0027, FloatType(), True),\n    StructField(\u0027pmcode\u0027, StringType(), True),\n    StructField(\u0027cc_flags\u0027, StringType(), True),\n    StructField(\u0027rel\u0027, StringType(), True),\n    StructField(\u0027ext_flg\u0027, IntegerType(), True),\n    StructField(\u0027var_flg\u0027, StringType(), True),\n    StructField(\u0027ph_qual\u0027, StringType(), True),\n    StructField(\u0027det_bit\u0027, IntegerType(), True),\n    StructField(\u0027moon_lev\u0027, StringType(), True),\n    StructField(\u0027w1nm\u0027, IntegerType(), True),\n    StructField(\u0027w1m\u0027, IntegerType(), True),\n    StructField(\u0027w2nm\u0027, IntegerType(), True),\n    StructField(\u0027w2m\u0027, IntegerType(), True),\n    StructField(\u0027w3nm\u0027, IntegerType(), True),\n    StructField(\u0027w3m\u0027, IntegerType(), True),\n    StructField(\u0027w4nm\u0027, IntegerType(), True),\n    StructField(\u0027w4m\u0027, IntegerType(), True),\n    StructField(\u0027w1cov\u0027, DoubleType(), True),\n    StructField(\u0027w2cov\u0027, DoubleType(), True),\n    StructField(\u0027w3cov\u0027, DoubleType(), True),\n    StructField(\u0027w4cov\u0027, DoubleType(), True),\n    StructField(\u0027w1cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w1cc_map_str\u0027, StringType(), True),\n    StructField(\u0027w2cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w2cc_map_str\u0027, StringType(), True),\n    StructField(\u0027w3cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w3cc_map_str\u0027, StringType(), True),\n    StructField(\u0027w4cc_map\u0027, IntegerType(), True),\n    StructField(\u0027w4cc_map_str\u0027, StringType(), True),\n    StructField(\u0027best_use_cntr\u0027, LongType(), True),\n    StructField(\u0027ngrp\u0027, ShortType(), True),\n    StructField(\u0027w1flux\u0027, FloatType(), True),\n    StructField(\u0027w1sigflux\u0027, FloatType(), True),\n    StructField(\u0027w1sky\u0027, DoubleType(), True),\n    StructField(\u0027w1sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w1conf\u0027, DoubleType(), True),\n    StructField(\u0027w2flux\u0027, FloatType(), True),\n    StructField(\u0027w2sigflux\u0027, FloatType(), True),\n    StructField(\u0027w2sky\u0027, DoubleType(), True),\n    StructField(\u0027w2sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w2conf\u0027, DoubleType(), True),\n    StructField(\u0027w3flux\u0027, FloatType(), True),\n    StructField(\u0027w3sigflux\u0027, FloatType(), True),\n    StructField(\u0027w3sky\u0027, DoubleType(), True),\n    StructField(\u0027w3sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w3conf\u0027, DoubleType(), True),\n    StructField(\u0027w4flux\u0027, FloatType(), True),\n    StructField(\u0027w4sigflux\u0027, FloatType(), True),\n    StructField(\u0027w4sky\u0027, DoubleType(), True),\n    StructField(\u0027w4sigsk\u0027, DoubleType(), True),\n    StructField(\u0027w4conf\u0027, DoubleType(), True),\n    StructField(\u0027w1mag\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm\u0027, DoubleType(), True),\n    StructField(\u0027w1flg\u0027, IntegerType(), True),\n    StructField(\u0027w1mcor\u0027, DoubleType(), True),\n    StructField(\u0027w2mag\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm\u0027, DoubleType(), True),\n    StructField(\u0027w2flg\u0027, IntegerType(), True),\n    StructField(\u0027w2mcor\u0027, DoubleType(), True),\n    StructField(\u0027w3mag\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm\u0027, DoubleType(), True),\n    StructField(\u0027w3flg\u0027, IntegerType(), True),\n    StructField(\u0027w3mcor\u0027, DoubleType(), True),\n    StructField(\u0027w4mag\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm\u0027, DoubleType(), True),\n    StructField(\u0027w4flg\u0027, IntegerType(), True),\n    StructField(\u0027w4mcor\u0027, DoubleType(), True),\n    StructField(\u0027w1mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_1\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_1\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_1\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_2\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_2\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_2\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_3\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_3\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_3\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_4\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_4\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_4\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_5\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_5\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_5\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_6\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_6\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_6\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_7\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_7\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_7\u0027, IntegerType(), True),\n    StructField(\u0027w1mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w1sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w1flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w2mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w2sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w2flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w3mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w3sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w3flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w4mag_8\u0027, DoubleType(), True),\n    StructField(\u0027w4sigm_8\u0027, DoubleType(), True),\n    StructField(\u0027w4flg_8\u0027, IntegerType(), True),\n    StructField(\u0027w1magp\u0027, DoubleType(), True),\n    StructField(\u0027w1sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w1sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w1k\u0027, DoubleType(), True),\n    StructField(\u0027w1ndf\u0027, IntegerType(), True),\n    StructField(\u0027w1mlq\u0027, DoubleType(), True),\n    StructField(\u0027w1mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w1mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w1mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027w2magp\u0027, DoubleType(), True),\n    StructField(\u0027w2sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w2sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w2k\u0027, DoubleType(), True),\n    StructField(\u0027w2ndf\u0027, IntegerType(), True),\n    StructField(\u0027w2mlq\u0027, DoubleType(), True),\n    StructField(\u0027w2mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w2mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w2mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027w3magp\u0027, DoubleType(), True),\n    StructField(\u0027w3sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w3sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w3k\u0027, DoubleType(), True),\n    StructField(\u0027w3ndf\u0027, IntegerType(), True),\n    StructField(\u0027w3mlq\u0027, DoubleType(), True),\n    StructField(\u0027w3mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w3mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w3mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027w4magp\u0027, DoubleType(), True),\n    StructField(\u0027w4sigp1\u0027, DoubleType(), True),\n    StructField(\u0027w4sigp2\u0027, DoubleType(), True),\n    StructField(\u0027w4k\u0027, DoubleType(), True),\n    StructField(\u0027w4ndf\u0027, IntegerType(), True),\n    StructField(\u0027w4mlq\u0027, DoubleType(), True),\n    StructField(\u0027w4mjdmin\u0027, DoubleType(), True),\n    StructField(\u0027w4mjdmax\u0027, DoubleType(), True),\n    StructField(\u0027w4mjdmean\u0027, DoubleType(), True),\n    StructField(\u0027rho12\u0027, IntegerType(), True),\n    StructField(\u0027rho23\u0027, IntegerType(), True),\n    StructField(\u0027rho34\u0027, IntegerType(), True),\n    StructField(\u0027q12\u0027, IntegerType(), True),\n    StructField(\u0027q23\u0027, IntegerType(), True),\n    StructField(\u0027q34\u0027, IntegerType(), True),\n    StructField(\u0027xscprox\u0027, DoubleType(), True),\n    StructField(\u0027w1rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w1ba\u0027, DoubleType(), True),\n    StructField(\u0027w1pa\u0027, DoubleType(), True),\n    StructField(\u0027w1gmag\u0027, DoubleType(), True),\n    StructField(\u0027w1gerr\u0027, DoubleType(), True),\n    StructField(\u0027w1gflg\u0027, IntegerType(), True),\n    StructField(\u0027w2rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w2ba\u0027, DoubleType(), True),\n    StructField(\u0027w2pa\u0027, DoubleType(), True),\n    StructField(\u0027w2gmag\u0027, DoubleType(), True),\n    StructField(\u0027w2gerr\u0027, DoubleType(), True),\n    StructField(\u0027w2gflg\u0027, IntegerType(), True),\n    StructField(\u0027w3rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w3ba\u0027, DoubleType(), True),\n    StructField(\u0027w3pa\u0027, DoubleType(), True),\n    StructField(\u0027w3gmag\u0027, DoubleType(), True),\n    StructField(\u0027w3gerr\u0027, DoubleType(), True),\n    StructField(\u0027w3gflg\u0027, IntegerType(), True),\n    StructField(\u0027w4rsemi\u0027, DoubleType(), True),\n    StructField(\u0027w4ba\u0027, DoubleType(), True),\n    StructField(\u0027w4pa\u0027, DoubleType(), True),\n    StructField(\u0027w4gmag\u0027, DoubleType(), True),\n    StructField(\u0027w4gerr\u0027, DoubleType(), True),\n    StructField(\u0027w4gflg\u0027, IntegerType(), True),\n    StructField(\u0027tmass_key\u0027, IntegerType(), True),\n    StructField(\u0027r_2mass\u0027, DoubleType(), True),\n    StructField(\u0027pa_2mass\u0027, DoubleType(), True),\n    StructField(\u0027n_2mass\u0027, IntegerType(), True),\n    StructField(\u0027j_m_2mass\u0027, DoubleType(), True),\n    StructField(\u0027j_msig_2mass\u0027, DoubleType(), True),\n    StructField(\u0027h_m_2mass\u0027, DoubleType(), True),\n    StructField(\u0027h_msig_2mass\u0027, DoubleType(), True),\n    StructField(\u0027k_m_2mass\u0027, DoubleType(), True),\n    StructField(\u0027k_msig_2mass\u0027, DoubleType(), True),\n    StructField(\u0027x\u0027, DoubleType(), True),\n    StructField(\u0027y\u0027, DoubleType(), True),\n    StructField(\u0027z\u0027, DoubleType(), True),\n    StructField(\u0027spt_ind\u0027, IntegerType(), True),\n    StructField(\u0027htm20\u0027, LongType(), True),\n    StructField(\u0027spare\u0027, BooleanType(), True)\n])\n# N.B. that last column is the easiest way to work around the IPAC files having a trailing \"|\" at the end of each record which is interpereted as another column... d\u0027oh\n\npanstarrs_dr1_otmo_schema \u003d StructType([\n    StructField(\u0027obj_id\u0027, LongType(), True),\n    StructField(\u0027projection_id\u0027, ShortType(), True),\n    StructField(\u0027sky_cell_id\u0027, ShortType(), True),\n    StructField(\u0027obj_info_flag\u0027, IntegerType(), True),\n    StructField(\u0027quality_flag\u0027, ShortType(), True),\n    StructField(\u0027ra_mean\u0027, DoubleType(), True),\n    StructField(\u0027dec_mean\u0027, DoubleType(), True),\n    StructField(\u0027ra_mean_err\u0027, FloatType(), True),\n    StructField(\u0027dec_mean_err\u0027, FloatType(), True),\n    StructField(\u0027epoch_mean\u0027, DoubleType(), True),\n    StructField(\u0027n_stack_detections\u0027, ShortType(), True),\n    StructField(\u0027n_detections\u0027, ShortType(), True),\n    StructField(\u0027ng\u0027, ShortType(), True),\n    StructField(\u0027nr\u0027, ShortType(), True),\n    StructField(\u0027ni\u0027, ShortType(), True),\n    StructField(\u0027nz\u0027, ShortType(), True),\n    StructField(\u0027ny\u0027, ShortType(), True),\n    StructField(\u0027g_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027g_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027g_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027g_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027g_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027g_flags\u0027, IntegerType(), True),\n    StructField(\u0027r_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027r_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027r_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027r_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027r_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027r_flags\u0027, IntegerType(), True),\n    StructField(\u0027i_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027i_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027i_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027i_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027i_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027i_flags\u0027, IntegerType(), True),\n    StructField(\u0027z_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027z_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027z_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027z_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027z_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027z_flags\u0027, IntegerType(), True),\n    StructField(\u0027y_qf_perfect\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_err\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_std\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_npt\u0027, ShortType(), True),\n    StructField(\u0027y_mean_psf_mag_min\u0027, FloatType(), True),\n    StructField(\u0027y_mean_psf_mag_max\u0027, FloatType(), True),\n    StructField(\u0027y_mean_kron_mag\u0027, FloatType(), True),\n    StructField(\u0027y_mean_kron_mag_err\u0027, FloatType(), True),\n    StructField(\u0027y_flags\u0027, IntegerType(), True),\n])\n\n\n# crossmatch table schemas:\n\n# PS1\npanstarrs1_best_neighbour_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027clean_panstarrs1_oid\u0027, LongType(), True),\n    StructField(\u0027original_ext_source_id\u0027, LongType(), True),\n    StructField(\u0027angular_distance\u0027, FloatType(), True),\n    StructField(\u0027number_of_neighbours\u0027, ByteType(), True),\n    StructField(\u0027number_of_mates\u0027, ByteType(), True),\n    StructField(\u0027xm_flag\u0027, ShortType(), True),\n])\n\n# ALLWISE:\nallwise_best_neighbour_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027original_ext_source_id\u0027, StringType(), True),\n    StructField(\u0027angular_distance\u0027, FloatType(), True),\n    StructField(\u0027xm_flag\u0027, ShortType(), True),\n    StructField(\u0027allwise_oid\u0027, IntegerType(), True),\n    StructField(\u0027number_of_neighbours\u0027, ByteType(), True),\n    StructField(\u0027number_of_mates\u0027, ByteType(), True),\n])\n\n# 2MASS:\ntmasspscxsc_best_neighbour_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), True),\n    StructField(\u0027original_ext_source_id\u0027, StringType(), True),\n    StructField(\u0027angular_distance\u0027, FloatType(), True),\n    StructField(\u0027xm_flag\u0027, ShortType(), True),\n    StructField(\u0027clean_tmass_psc_xsc_oid\u0027, IntegerType(), True),\n    StructField(\u0027number_of_neighbours\u0027, ByteType(), True),\n    StructField(\u0027number_of_mates\u0027, ByteType(), True),\n])\n\n\n# sanity checks:\n#print (gaia_source_schema)\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-17 15:02:34.107",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_488748050",
      "id": "20210504-131126_1544574772",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-03-17 15:02:34.110",
      "dateFinished": "2022-03-17 15:03:00.134",
      "status": "FINISHED"
    },
    {
      "title": "Utility function definitions",
      "text": "%pyspark\n\n# useful definitions\n\n# number of buckets for our platform\nNUM_BUCKETS \u003d 2048\n\n# and to re-establish the resource in a new (or reset) spark context:\ndef reattachParquetFileResourceToSparkContext(table_name, file_path, *schema_structures):\n    \"\"\"\n    Creates a Spark (in-memory) meta-record for the table resource specified for querying \n    through the PySpark SQL API.\n    \n    Assumes that the table contains the Gaia source_id attribute and that the files have \n    been previously partitioned, bucketed and sorted on this field in parquet format\n    - see function saveToBinnedParquet().  If the table name specified already exists in the\n    catalogue IT WILL BE REMOVED (but the underlying data, assumed external, will remain).\n    \n    Parameters\n    ----------\n    table_name : str\n        The table name to be used as the identifier in SQL queries etc.\n    file_path : str\n        The full disk file system path name to the folder containing the parquet file set. \n    schema_structures : StructType\n        One or more schema structures expressed as a StructType object containing a list of\n        StructField(field_name : str, type : data_type : DataType(), nullable : boolean)\n    \"\"\"\n\n    # put in the columns and their data types ...\n    table_create_statement \u003d \"CREATE TABLE `\" + table_name + \"` (\"\n    for schema_structure in schema_structures:\n        for field in schema_structure:\n            table_create_statement +\u003d \"`\" + field.name + \"` \" + field.dataType.simpleString() + \",\"\n    # ... zapping that extraneous comma at the end\n    table_create_statement \u003d table_create_statement[:-1]\n        \n    # append the organisational details \n    table_create_statement +\u003d \") USING parquet OPTIONS (path \u0027\" + file_path + \"\u0027) \"\n    table_create_statement +\u003d \"CLUSTERED BY (source_id) SORTED BY (source_id) INTO %d\"%(NUM_BUCKETS) + \" BUCKETS\"\n    \n    # sanity check\n    print(table_create_statement)\n    \n    # scrub any existing record - N.B. tables defined in this way are EXTERNAL, so this statement will not scrub\n    # the underlying file data set. Also if the table doesn\u0027t exist, this will silently do nothing (no exception\n    # will be thrown).\n    spark.sql(\"DROP TABLE IF EXISTS \" + table_name)\n    \n    # create the table resource\n    spark.sql(table_create_statement)\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-17 15:03:00.161",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_1402792006",
      "id": "20210504-131319_1186301617",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-03-17 15:03:00.163",
      "dateFinished": "2022-03-17 15:03:00.170",
      "status": "FINISHED"
    },
    {
      "title": "Set up the catalogues on the platform",
      "text": "%pyspark\n\n# database name to create\ndatabase \u003d \"gaiaedr3\"\n\n# root data store path: TODO change this to the official one when established.\ndata_store \u003d \"file:////data/gaia/GEDR3/\" # \"file:////user/nch/PARQUET/REPARTITIONED/\"\n\n# create the database and switch the current SQL database context to it (from default)\nspark.sql(\"create database \" + database)\nspark.sql(\"use \" + database)\n\n# create the tables against their corresponding file sets and schema\nreattachParquetFileResourceToSparkContext(\"gaia_source\", data_store + \"GEDR3_GAIASOURCE\", gaia_source_schema)\nreattachParquetFileResourceToSparkContext(\"gaia_source_tmasspsc_best_neighbours\", data_store + \"GEDR3_2MASSPSC_BEST_NEIGHBOURS\", tmasspscxsc_best_neighbour_schema, twomass_psc_schema)\nreattachParquetFileResourceToSparkContext(\"gaia_source_allwise_best_neighbours\", data_store + \"GEDR3_ALLWISE_BEST_NEIGHBOURS\", allwise_best_neighbour_schema, twomass_psc_schema)\nreattachParquetFileResourceToSparkContext(\"gaia_source_ps1_best_neighbours\", data_store + \"GEDR3_PS1_BEST_NEIGHBOURS\", panstarrs1_best_neighbour_schema, panstarrs_dr1_otmo_schema)\n\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-07-07 12:14:06.873",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "CREATE TABLE `gaia_source` (`solution_id` bigint,`designation` string,`source_id` bigint,`random_index` bigint,`ref_epoch` float,`ra` double,`ra_error` double,`dec` double,`dec_error` double,`parallax` double,`parallax_error` double,`parallax_over_error` float,`pm` float,`pmra` double,`pmra_error` float,`pmdec` double,`pmdec_error` float,`ra_dec_corr` float,`ra_parallax_corr` float,`ra_pmra_corr` float,`ra_pmdec_corr` float,`dec_parallax_corr` float,`dec_pmra_corr` float,`dec_pmdec_corr` float,`parallax_pmra_corr` float,`parallax_pmdec_corr` float,`pmra_pmdec_corr` float,`astrometric_n_obs_al` smallint,`astrometric_n_obs_ac` smallint,`astrometric_n_good_obs_al` smallint,`astrometric_n_bad_obs_al` smallint,`astrometric_gof_al` float,`astrometric_chi2_al` float,`astrometric_excess_noise` float,`astrometric_excess_noise_sig` float,`astrometric_params_solved` smallint,`astrometric_primary_flag` boolean,`nu_eff_used_in_astrometry` float,`pseudocolour` float,`pseudocolour_error` float,`ra_pseudocolour_corr` float,`dec_pseudocolour_corr` float,`parallax_pseudocolour_corr` float,`pmra_pseudocolour_corr` float,`pmdec_pseudocolour_corr` float,`astrometric_matched_transits` smallint,`visibility_periods_used` smallint,`astrometric_sigma5d_max` float,`matched_transits` smallint,`new_matched_transits` smallint,`matched_transits_removed` smallint,`ipd_gof_harmonic_amplitude` float,`ipd_gof_harmonic_phase` float,`ipd_frac_multi_peak` smallint,`ipd_frac_odd_win` smallint,`ruwe` float,`scan_direction_strength_k1` float,`scan_direction_strength_k2` float,`scan_direction_strength_k3` float,`scan_direction_strength_k4` float,`scan_direction_mean_k1` float,`scan_direction_mean_k2` float,`scan_direction_mean_k3` float,`scan_direction_mean_k4` float,`duplicated_source` boolean,`phot_g_n_obs` smallint,`phot_g_mean_flux` double,`phot_g_mean_flux_error` float,`phot_g_mean_flux_over_error` float,`phot_g_mean_mag` float,`phot_bp_n_obs` smallint,`phot_bp_mean_flux` double,`phot_bp_mean_flux_error` float,`phot_bp_mean_flux_over_error` float,`phot_bp_mean_mag` float,`phot_rp_n_obs` smallint,`phot_rp_mean_flux` double,`phot_rp_mean_flux_error` float,`phot_rp_mean_flux_over_error` float,`phot_rp_mean_mag` float,`phot_bp_n_contaminated_transits` smallint,`phot_bp_n_blended_transits` smallint,`phot_rp_n_contaminated_transits` smallint,`phot_rp_n_blended_transits` smallint,`phot_proc_mode` smallint,`phot_bp_rp_excess_factor` float,`bp_rp` float,`bp_g` float,`g_rp` float,`dr2_radial_velocity` float,`dr2_radial_velocity_error` float,`dr2_rv_nb_transits` smallint,`dr2_rv_template_teff` float,`dr2_rv_template_logg` float,`dr2_rv_template_fe_h` float,`l` double,`b` double,`ecl_lon` double,`ecl_lat` double) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_GAIASOURCE\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\nCREATE TABLE `gaia_source_tmasspsc_best_neighbours` (`source_id` bigint,`original_ext_source_id` string,`angular_distance` float,`xm_flag` smallint,`clean_tmass_psc_xsc_oid` int,`number_of_neighbours` tinyint,`number_of_mates` tinyint,`ra` double,`dec` double,`err_maj` float,`err_min` float,`err_ang` smallint,`designation` string,`j_m` float,`j_cmsig` float,`j_msigcom` float,`j_snr` float,`h_m` float,`h_cmsig` float,`h_msigcom` float,`h_snr` float,`k_m` float,`k_cmsig` float,`k_msigcom` float,`k_snr` float,`ph_qual` string,`rd_flg` string,`bl_flg` string,`cc_flg` string,`ndet` string,`prox` float,`pxpa` smallint,`pxcntr` int,`gal_contam` smallint,`mp_flg` smallint,`pts_key` int,`hemis` string,`date` date,`scan` smallint,`glon` float,`glat` float,`x_scan` float,`jdate` double,`j_psfchi` float,`h_psfchi` float,`k_psfchi` float,`j_m_stdap` float,`j_msig_stdap` float,`h_m_stdap` float,`h_msig_stdap` float,`k_m_stdap` float,`k_msig_stdap` float,`dist_edge_ns` int,`dist_edge_ew` int,`dist_edge_flg` string,`dup_src` smallint,`use_src` smallint,`a` string,`dist_opt` float,`phi_opt` smallint,`b_m_opt` float,`vr_m_opt` float,`nopt_mchs` smallint,`ext_key` int,`scan_key` int,`coadd_key` int,`coadd` smallint) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_2MASSPSC_BEST_NEIGHBOURS\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\nCREATE TABLE `gaia_source_allwise_best_neighbours` (`source_id` bigint,`original_ext_source_id` string,`angular_distance` float,`xm_flag` smallint,`allwise_oid` int,`number_of_neighbours` tinyint,`number_of_mates` tinyint,`ra` double,`dec` double,`err_maj` float,`err_min` float,`err_ang` smallint,`designation` string,`j_m` float,`j_cmsig` float,`j_msigcom` float,`j_snr` float,`h_m` float,`h_cmsig` float,`h_msigcom` float,`h_snr` float,`k_m` float,`k_cmsig` float,`k_msigcom` float,`k_snr` float,`ph_qual` string,`rd_flg` string,`bl_flg` string,`cc_flg` string,`ndet` string,`prox` float,`pxpa` smallint,`pxcntr` int,`gal_contam` smallint,`mp_flg` smallint,`pts_key` int,`hemis` string,`date` date,`scan` smallint,`glon` float,`glat` float,`x_scan` float,`jdate` double,`j_psfchi` float,`h_psfchi` float,`k_psfchi` float,`j_m_stdap` float,`j_msig_stdap` float,`h_m_stdap` float,`h_msig_stdap` float,`k_m_stdap` float,`k_msig_stdap` float,`dist_edge_ns` int,`dist_edge_ew` int,`dist_edge_flg` string,`dup_src` smallint,`use_src` smallint,`a` string,`dist_opt` float,`phi_opt` smallint,`b_m_opt` float,`vr_m_opt` float,`nopt_mchs` smallint,`ext_key` int,`scan_key` int,`coadd_key` int,`coadd` smallint) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_ALLWISE_BEST_NEIGHBOURS\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\nCREATE TABLE `gaia_source_ps1_best_neighbours` (`source_id` bigint,`clean_panstarrs1_oid` bigint,`original_ext_source_id` bigint,`angular_distance` float,`number_of_neighbours` tinyint,`number_of_mates` tinyint,`xm_flag` smallint,`obj_id` bigint,`projection_id` smallint,`sky_cell_id` smallint,`obj_info_flag` int,`quality_flag` smallint,`ra_mean` double,`dec_mean` double,`ra_mean_err` float,`dec_mean_err` float,`epoch_mean` double,`n_stack_detections` smallint,`n_detections` smallint,`ng` smallint,`nr` smallint,`ni` smallint,`nz` smallint,`ny` smallint,`g_qf_perfect` float,`g_mean_psf_mag` float,`g_mean_psf_mag_err` float,`g_mean_psf_mag_std` float,`g_mean_psf_mag_npt` smallint,`g_mean_psf_mag_min` float,`g_mean_psf_mag_max` float,`g_mean_kron_mag` float,`g_mean_kron_mag_err` float,`g_flags` int,`r_qf_perfect` float,`r_mean_psf_mag` float,`r_mean_psf_mag_err` float,`r_mean_psf_mag_std` float,`r_mean_psf_mag_npt` smallint,`r_mean_psf_mag_min` float,`r_mean_psf_mag_max` float,`r_mean_kron_mag` float,`r_mean_kron_mag_err` float,`r_flags` int,`i_qf_perfect` float,`i_mean_psf_mag` float,`i_mean_psf_mag_err` float,`i_mean_psf_mag_std` float,`i_mean_psf_mag_npt` smallint,`i_mean_psf_mag_min` float,`i_mean_psf_mag_max` float,`i_mean_kron_mag` float,`i_mean_kron_mag_err` float,`i_flags` int,`z_qf_perfect` float,`z_mean_psf_mag` float,`z_mean_psf_mag_err` float,`z_mean_psf_mag_std` float,`z_mean_psf_mag_npt` smallint,`z_mean_psf_mag_min` float,`z_mean_psf_mag_max` float,`z_mean_kron_mag` float,`z_mean_kron_mag_err` float,`z_flags` int,`y_qf_perfect` float,`y_mean_psf_mag` float,`y_mean_psf_mag_err` float,`y_mean_psf_mag_std` float,`y_mean_psf_mag_npt` smallint,`y_mean_psf_mag_min` float,`y_mean_psf_mag_max` float,`y_mean_kron_mag` float,`y_mean_kron_mag_err` float,`y_flags` int) USING parquet OPTIONS (path \u0027file:////data/gaia/GEDR3/GEDR3_PS1_BEST_NEIGHBOURS\u0027) CLUSTERED BY (source_id) SORTED BY (source_id) INTO 2048 BUCKETS\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_87122232",
      "id": "20210504-131439_625331903",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-03-17 15:03:00.265",
      "dateFinished": "2022-03-17 15:03:02.998",
      "status": "FINISHED"
    },
    {
      "title": "Show details of databases and tables",
      "text": "%pyspark\n\n# show the database(s) now available within the context\nspark.sql(\"show databases\").show()\n\n# show the contents of the catalogue store that has been set up\nspark.catalog.listTables()\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 12:27:13.954",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": false,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------+\n|namespace|\n+---------+\n|  default|\n|  gaiadr3|\n| gaiaedr3|\n+---------+\n\n[Table(name\u003d\u0027astrophysical_parameters\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027astrophysical_parameters_supp\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027epoch_photometry\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027gaia_source\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027rvs_mean_spectrum\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027xp_continuous_mean_spectrum\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027xp_sampled_mean_spectrum\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027xp_summary\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d4"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d5"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d6"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d7"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d8"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d9"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d10"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d11"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_902124213",
      "id": "20210504-132955_1641890430",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-07-07 12:27:13.960",
      "dateFinished": "2022-07-07 12:27:14.236",
      "status": "FINISHED"
    },
    {
      "title": "Check location on disk for main catalogue table from metastore",
      "text": "%pyspark\n\nspark.sql(\u0027DESCRIBE EXTENDED gaia_source\u0027).show(300, truncate \u003d False)\n",
      "user": "anonymous",
      "dateUpdated": "2022-03-17 15:03:07.283",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------------------------+----------------------------------------+-------+\n|col_name                       |data_type                               |comment|\n+-------------------------------+----------------------------------------+-------+\n|solution_id                    |bigint                                  |null   |\n|designation                    |string                                  |null   |\n|source_id                      |bigint                                  |null   |\n|random_index                   |bigint                                  |null   |\n|ref_epoch                      |float                                   |null   |\n|ra                             |double                                  |null   |\n|ra_error                       |double                                  |null   |\n|dec                            |double                                  |null   |\n|dec_error                      |double                                  |null   |\n|parallax                       |double                                  |null   |\n|parallax_error                 |double                                  |null   |\n|parallax_over_error            |float                                   |null   |\n|pm                             |float                                   |null   |\n|pmra                           |double                                  |null   |\n|pmra_error                     |float                                   |null   |\n|pmdec                          |double                                  |null   |\n|pmdec_error                    |float                                   |null   |\n|ra_dec_corr                    |float                                   |null   |\n|ra_parallax_corr               |float                                   |null   |\n|ra_pmra_corr                   |float                                   |null   |\n|ra_pmdec_corr                  |float                                   |null   |\n|dec_parallax_corr              |float                                   |null   |\n|dec_pmra_corr                  |float                                   |null   |\n|dec_pmdec_corr                 |float                                   |null   |\n|parallax_pmra_corr             |float                                   |null   |\n|parallax_pmdec_corr            |float                                   |null   |\n|pmra_pmdec_corr                |float                                   |null   |\n|astrometric_n_obs_al           |smallint                                |null   |\n|astrometric_n_obs_ac           |smallint                                |null   |\n|astrometric_n_good_obs_al      |smallint                                |null   |\n|astrometric_n_bad_obs_al       |smallint                                |null   |\n|astrometric_gof_al             |float                                   |null   |\n|astrometric_chi2_al            |float                                   |null   |\n|astrometric_excess_noise       |float                                   |null   |\n|astrometric_excess_noise_sig   |float                                   |null   |\n|astrometric_params_solved      |smallint                                |null   |\n|astrometric_primary_flag       |boolean                                 |null   |\n|nu_eff_used_in_astrometry      |float                                   |null   |\n|pseudocolour                   |float                                   |null   |\n|pseudocolour_error             |float                                   |null   |\n|ra_pseudocolour_corr           |float                                   |null   |\n|dec_pseudocolour_corr          |float                                   |null   |\n|parallax_pseudocolour_corr     |float                                   |null   |\n|pmra_pseudocolour_corr         |float                                   |null   |\n|pmdec_pseudocolour_corr        |float                                   |null   |\n|astrometric_matched_transits   |smallint                                |null   |\n|visibility_periods_used        |smallint                                |null   |\n|astrometric_sigma5d_max        |float                                   |null   |\n|matched_transits               |smallint                                |null   |\n|new_matched_transits           |smallint                                |null   |\n|matched_transits_removed       |smallint                                |null   |\n|ipd_gof_harmonic_amplitude     |float                                   |null   |\n|ipd_gof_harmonic_phase         |float                                   |null   |\n|ipd_frac_multi_peak            |smallint                                |null   |\n|ipd_frac_odd_win               |smallint                                |null   |\n|ruwe                           |float                                   |null   |\n|scan_direction_strength_k1     |float                                   |null   |\n|scan_direction_strength_k2     |float                                   |null   |\n|scan_direction_strength_k3     |float                                   |null   |\n|scan_direction_strength_k4     |float                                   |null   |\n|scan_direction_mean_k1         |float                                   |null   |\n|scan_direction_mean_k2         |float                                   |null   |\n|scan_direction_mean_k3         |float                                   |null   |\n|scan_direction_mean_k4         |float                                   |null   |\n|duplicated_source              |boolean                                 |null   |\n|phot_g_n_obs                   |smallint                                |null   |\n|phot_g_mean_flux               |double                                  |null   |\n|phot_g_mean_flux_error         |float                                   |null   |\n|phot_g_mean_flux_over_error    |float                                   |null   |\n|phot_g_mean_mag                |float                                   |null   |\n|phot_bp_n_obs                  |smallint                                |null   |\n|phot_bp_mean_flux              |double                                  |null   |\n|phot_bp_mean_flux_error        |float                                   |null   |\n|phot_bp_mean_flux_over_error   |float                                   |null   |\n|phot_bp_mean_mag               |float                                   |null   |\n|phot_rp_n_obs                  |smallint                                |null   |\n|phot_rp_mean_flux              |double                                  |null   |\n|phot_rp_mean_flux_error        |float                                   |null   |\n|phot_rp_mean_flux_over_error   |float                                   |null   |\n|phot_rp_mean_mag               |float                                   |null   |\n|phot_bp_n_contaminated_transits|smallint                                |null   |\n|phot_bp_n_blended_transits     |smallint                                |null   |\n|phot_rp_n_contaminated_transits|smallint                                |null   |\n|phot_rp_n_blended_transits     |smallint                                |null   |\n|phot_proc_mode                 |smallint                                |null   |\n|phot_bp_rp_excess_factor       |float                                   |null   |\n|bp_rp                          |float                                   |null   |\n|bp_g                           |float                                   |null   |\n|g_rp                           |float                                   |null   |\n|dr2_radial_velocity            |float                                   |null   |\n|dr2_radial_velocity_error      |float                                   |null   |\n|dr2_rv_nb_transits             |smallint                                |null   |\n|dr2_rv_template_teff           |float                                   |null   |\n|dr2_rv_template_logg           |float                                   |null   |\n|dr2_rv_template_fe_h           |float                                   |null   |\n|l                              |double                                  |null   |\n|b                              |double                                  |null   |\n|ecl_lon                        |double                                  |null   |\n|ecl_lat                        |double                                  |null   |\n|                               |                                        |       |\n|# Detailed Table Information   |                                        |       |\n|Database                       |gaiaedr3                                |       |\n|Table                          |gaia_source                             |       |\n|Created Time                   |Thu Mar 17 15:03:02 UTC 2022            |       |\n|Last Access                    |UNKNOWN                                 |       |\n|Created By                     |Spark 3.1.2                             |       |\n|Type                           |EXTERNAL                                |       |\n|Provider                       |parquet                                 |       |\n|Num Buckets                    |2048                                    |       |\n|Bucket Columns                 |[`source_id`]                           |       |\n|Sort Columns                   |[`source_id`]                           |       |\n|Location                       |file:///data/gaia/GEDR3/GEDR3_GAIASOURCE|       |\n+-------------------------------+----------------------------------------+-------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_895566231",
      "id": "20210504-141425_1480464936",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-03-17 15:03:07.285",
      "dateFinished": "2022-03-17 15:03:07.435",
      "status": "FINISHED"
    },
    {
      "title": "TEST SETUP LIBRARY: SCHEMA",
      "text": "%pyspark\n\nfrom pyspark.sql.types import *\n\nvari_time_series_statistics_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027num_selected_g_fov\u0027, ShortType(), True), # Total number of G FOV transits selected for variability analysis\n    StructField(\u0027mean_obs_time_g_fov\u0027, DoubleType(), True), # Mean observation time for G FoV transits\n    StructField(\u0027time_duration_g_fov\u0027, FloatType(), True), # Time duration of the time series for G FoV transits\n    StructField(\u0027min_mag_g_fov\u0027, FloatType(), True), # Minimum G FoV magnitude\n    StructField(\u0027max_mag_g_fov\u0027, FloatType(), True), # Maximum G FoV magnitude\n    StructField(\u0027mean_mag_g_fov\u0027, FloatType(), True), # Mean G FoV magnitude\n    StructField(\u0027median_mag_g_fov\u0027, FloatType(), True), # Median G FoV magnitude\n    StructField(\u0027range_mag_g_fov\u0027, FloatType(), True), # Difference between the highest and lowest G FoV magnitudes\n    StructField(\u0027trimmed_range_mag_g_fov\u0027, FloatType(), True), # Trimmed difference between the highest and lowest G FoV magnitudes\n    StructField(\u0027std_dev_mag_g_fov\u0027, FloatType(), True), # Square root of the unweighted G FoV magnitude variance\n    StructField(\u0027skewness_mag_g_fov\u0027, FloatType(), True), # Standardized unweighted G FoV magnitude skewness\n    StructField(\u0027kurtosis_mag_g_fov\u0027, FloatType(), True), # Standardized unweighted G FoV magnitude kurtosis\n    StructField(\u0027mad_mag_g_fov\u0027, FloatType(), True), # Median Absolute Deviation (MAD) for G FoV transits\n    StructField(\u0027abbe_mag_g_fov\u0027, FloatType(), True), # Abbe value for G FoV transits\n    StructField(\u0027iqr_mag_g_fov\u0027, FloatType(), True), # Interquartile range for G FoV transits\n    StructField(\u0027stetson_mag_g_fov\u0027, FloatType(), True), # Stetson G FoV variability index\n    StructField(\u0027std_dev_over_rms_err_mag_g_fov\u0027, FloatType(), True), # Signal-to-Noise G FoV estimate\n    StructField(\u0027outlier_median_g_fov\u0027, FloatType(), True), # Greatest absolute deviation from the G FoV median normalized by the error\n    StructField(\u0027num_selected_bp\u0027, ShortType(), True), # Total number of BP observations selected for variability analysis\n    StructField(\u0027mean_obs_time_bp\u0027, DoubleType(), True), # Mean observation time for BP observations\n    StructField(\u0027time_duration_bp\u0027, FloatType(), True), # Time duration of the BP time series\n    StructField(\u0027min_mag_bp\u0027, FloatType(), True), # Minimum BP magnitude\n    StructField(\u0027max_mag_bp\u0027, FloatType(), True), # Maximum BP magnitude\n    StructField(\u0027mean_mag_bp\u0027, FloatType(), True), # Mean BP magnitude\n    StructField(\u0027median_mag_bp\u0027, FloatType(), True), # Median BP magnitude\n    StructField(\u0027range_mag_bp\u0027, FloatType(), True), # Difference between the highest and lowest BP magnitudes\n    StructField(\u0027trimmed_range_mag_bp\u0027, FloatType(), True), # Trimmed difference between the highest and lowest BP magnitudes\n    StructField(\u0027std_dev_mag_bp\u0027, FloatType(), True), # Square root of the unweighted BP magnitude variance\n    StructField(\u0027skewness_mag_bp\u0027, FloatType(), True), # Standardized unweighted BP magnitude skewness\n    StructField(\u0027kurtosis_mag_bp\u0027, FloatType(), True), # Standardized unweighted BP magnitude kurtosis\n    StructField(\u0027mad_mag_bp\u0027, FloatType(), True), # Median Absolute Deviation (MAD) for BP observations\n    StructField(\u0027abbe_mag_bp\u0027, FloatType(), True), # Abbe value for BP observations\n    StructField(\u0027iqr_mag_bp\u0027, FloatType(), True), # Interquartile BP magnitude range\n    StructField(\u0027stetson_mag_bp\u0027, FloatType(), True), # Stetson BP variability index\n    StructField(\u0027std_dev_over_rms_err_mag_bp\u0027, FloatType(), True), # Signal-to-Noise BP estimate\n    StructField(\u0027outlier_median_bp\u0027, FloatType(), True), # Greatest absolute deviation from the BP median normalized by the error\n    StructField(\u0027num_selected_rp\u0027, ShortType(), True), # Total number of RP observations selected for variability analysis\n    StructField(\u0027mean_obs_time_rp\u0027, DoubleType(), True), # Mean observation time for RP observations\n    StructField(\u0027time_duration_rp\u0027, FloatType(), True), # Time duration of the RP time series\n    StructField(\u0027min_mag_rp\u0027, FloatType(), True), # Minimum RP magnitude\n    StructField(\u0027max_mag_rp\u0027, FloatType(), True), # Maximum RP magnitude\n    StructField(\u0027mean_mag_rp\u0027, FloatType(), True), # Mean RP magnitude\n    StructField(\u0027median_mag_rp\u0027, FloatType(), True), # Median RP magnitude\n    StructField(\u0027range_mag_rp\u0027, FloatType(), True), # Difference between the highest and lowest RP magnitudes\n    StructField(\u0027trimmed_range_mag_rp\u0027, FloatType(), True), # Trimmed difference between the highest and lowest RP magnitudes\n    StructField(\u0027std_dev_mag_rp\u0027, FloatType(), True), # Square root of the unweighted RP magnitude variance\n    StructField(\u0027skewness_mag_rp\u0027, FloatType(), True), # Standardized unweighted RP magnitude skewness\n    StructField(\u0027kurtosis_mag_rp\u0027, FloatType(), True), # Standardized unweighted RP magnitude kurtosis\n    StructField(\u0027mad_mag_rp\u0027, FloatType(), True), # Median Absolute Deviation (MAD) for RP observations\n    StructField(\u0027abbe_mag_rp\u0027, FloatType(), True), # Abbe value for RP observations\n    StructField(\u0027iqr_mag_rp\u0027, FloatType(), True), # Interquartile RP magnitude range\n    StructField(\u0027stetson_mag_rp\u0027, FloatType(), True), # Stetson RP variability index\n    StructField(\u0027std_dev_over_rms_err_mag_rp\u0027, FloatType(), True), # Signal-to-Noise RP estimate\n    StructField(\u0027outlier_median_rp\u0027, FloatType(), True), # Greatest absolute deviation from the RP median normalized by the error\n])\nalerts_mixedin_sourceids_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027alert_source_id\u0027, LongType(), False), # Primary sourceId associated to the alert\n    StructField(\u0027mixed_in_source_id\u0027, LongType(), False), # Additional sourceId, if any, associated to the alert\n])\nastrophysical_parameters_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source Identifier\n    StructField(\u0027classprob_dsc_combmod_quasar\u0027, FloatType(), True), # Probability from DSC-Combmod of being a quasar (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_galaxy\u0027, FloatType(), True), # Probability from DSC-Combmod of being a galaxy (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_star\u0027, FloatType(), True), # Probability from DSC-Combmod of being a single star (but not a white dwarf) (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_whitedwarf\u0027, FloatType(), True), # Probability from DSC-Combmod of being a white dwarf (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_binarystar\u0027, FloatType(), True), # Probability from DSC-Combmod of being a binary star (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_specmod_quasar\u0027, FloatType(), True), # Probability from DSC-Specmod of being a quasar (data used: BP/RP spectrum)\n    StructField(\u0027classprob_dsc_specmod_galaxy\u0027, FloatType(), True), # Probability from DSC-Specmod of being a galaxy (data used: BP/RP spectrum)\n    StructField(\u0027classprob_dsc_specmod_star\u0027, FloatType(), True), # Probability from DSC-Specmod of being a single star (but not a white dwarf) (data used: BP/RP spectrum)\n    StructField(\u0027classprob_dsc_specmod_whitedwarf\u0027, FloatType(), True), # Probability from DSC-Specmod of being a white dwarf (data used: BP/RP spectrum)\n    StructField(\u0027classprob_dsc_specmod_binarystar\u0027, FloatType(), True), # Probability from DSC-Specmod of being a binary star (data used: BP/RP spectrum)\n    StructField(\u0027classprob_dsc_allosmod_quasar\u0027, FloatType(), True), # Probability from DSC-Allosmod of being a quasar (data used: photometry, astrometry)\n    StructField(\u0027classprob_dsc_allosmod_galaxy\u0027, FloatType(), True), # Probability from DSC-Allosmod of being a galaxy (data used: photometry, astrometry)\n    StructField(\u0027classprob_dsc_allosmod_star\u0027, FloatType(), True), # Probability from DSC-Allosmod of being a star (data used: photometry, astrometry)\n    StructField(\u0027teff_gspphot\u0027, FloatType(), True), # Effective temperature from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027teff_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027teff_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logg_gspphot\u0027, FloatType(), True), # Surface gravity from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logg_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logg_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mh_gspphot\u0027, FloatType(), True), # Iron abundance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mh_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mh_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027distance_gspphot\u0027, FloatType(), True), # Distance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027distance_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027distance_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027azero_gspphot\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027azero_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027azero_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ag_gspphot\u0027, FloatType(), True), # Extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ag_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ag_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027abp_gspphot\u0027, FloatType(), True), # Extinction in $G_{\\rm BP}$ band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027abp_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{\\rm BP}$ band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027abp_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{\\rm BP}$ band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027arp_gspphot\u0027, FloatType(), True), # Extinction in $G_{\\rm RP}$ band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027arp_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{\\rm RP}$ band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027arp_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{\\rm RP}$ band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot\u0027, FloatType(), True), # Reddening $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of reddening  $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of reddening  $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mg_gspphot\u0027, FloatType(), True), # Absolute magnitude $M_{\\rm G}$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mg_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of absolute magnitude $M_{\\rm G}$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mg_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of absolute magnitude $M_{\\rm G}$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027radius_gspphot\u0027, FloatType(), True), # Radius from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027radius_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of radius from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027radius_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of radius from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logposterior_gspphot\u0027, FloatType(), True), # Goodness-of-fit score (mean log-posterior of MCMC) of GSP-Phot Aeneas MCMC best library\n    StructField(\u0027mcmcaccept_gspphot\u0027, FloatType(), True), # MCMC acceptance rate of GSP-Phot Aeneas MCMC best library\n    StructField(\u0027libname_gspphot\u0027, StringType(), True), # Name of library that achieves the highest mean log-posterior in MCMC samples and was used to derive GSP-Phot parameters in this table\n    StructField(\u0027teff_gspspec\u0027, FloatType(), True), # Effective temperature from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations \n    StructField(\u0027teff_gspspec_lower\u0027, FloatType(), True), # 16th percentile of effective temperature from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027teff_gspspec_upper\u0027, FloatType(), True), # 84th percentile of effective temperature from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027logg_gspspec\u0027, FloatType(), True), # Logarithm of the stellar surface gravity from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027logg_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the logarithm of the stellar surface gravity from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027logg_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the logarithm of the stellar surface gravity from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027mh_gspspec\u0027, FloatType(), True), # Global metallicity [M/H] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027mh_gspspec_lower\u0027, FloatType(), True), # 16th percentile of global metallicity [M/H] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027mh_gspspec_upper\u0027, FloatType(), True), # 84th percentile of global metallicity [M/H] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027alphafe_gspspec\u0027, FloatType(), True), # Abundance of alpha-elements [alpha/Fe] with respect to iron from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027alphafe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of alpha-elements [alpha/Fe] with respect to iron from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027alphafe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of alpha-elements [alpha/Fe] with respect to iron from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027fem_gspspec\u0027, FloatType(), True), # Abundance of neutral iron [Fe/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt femGspspecNlines}\n    StructField(\u0027fem_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of neutral iron [Fe/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027fem_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of neutral iron [Fe/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027fem_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Fe/M] abundance estimation\n    StructField(\u0027fem_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Fe/M] abundance using N lines of the element, given in {\\tt femGspspecNlines}\n    StructField(\u0027sife_gspspec\u0027, FloatType(), True), # Abundance of Silicon [Si/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt sifeGspspecNlines}\n    StructField(\u0027sife_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of silicon [Si/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations \n    StructField(\u0027sife_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of silicon [Si/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027sife_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Si/Fe] abundance estimation\n    StructField(\u0027sife_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Si/Fe] abundance using N lines of the element, given in {\\tt sifeGspspecNlines}\n    StructField(\u0027cafe_gspspec\u0027, FloatType(), True), # Abundance of Calcium [Ca/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt cafeGspspecNlines}\n    StructField(\u0027cafe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Calcium [Ca/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027cafe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Calcium [Ca/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027cafe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Ca/Fe] abundance estimation\n    StructField(\u0027cafe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Ca/Fe] abundance using N lines of the element, given in {\\tt cafeGspspecNlines}\n    StructField(\u0027tife_gspspec\u0027, FloatType(), True), # Abundance of Titanium [Ti/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt tifeGspspecNlines}  \n    StructField(\u0027tife_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Titanium [Ti/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027tife_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Titanium [Ti/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027tife_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Ti/Fe] abundance estimation\n    StructField(\u0027tife_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Ti/Fe] abundance using N lines of the element, given in {\\tt tifeGspspecNlines}\n    StructField(\u0027mgfe_gspspec\u0027, FloatType(), True), # Abundance of Magnesium [Mg/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt mgfeGspspecNlines}\n    StructField(\u0027mgfe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Magnesium [Mg/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027mgfe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Magnesium [Mg/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations \n    StructField(\u0027mgfe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Mg/Fe] abundance estimation\n    StructField(\u0027mgfe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Mg/Fe] abundance using N lines of the element, given in {\\tt mgfeGspspecNlines}\n    StructField(\u0027ndfe_gspspec\u0027, FloatType(), True), # Abundance of neodymium [Nd/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt ndfeGspspecNlines}\n    StructField(\u0027ndfe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of neodymium [Nd/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027ndfe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of neodymium [Nd/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027ndfe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Nd/Fe] abundance estimation\n    StructField(\u0027ndfe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Nd/Fe] abundance using N lines of the element, given in {\\tt ndfeGspspecNlines}\n    StructField(\u0027feiim_gspspec\u0027, FloatType(), True), # Abundance of ionised iron [FeII/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt feiimGspspecNlines}\n    StructField(\u0027feiim_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of ionised iron [FeII/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027feiim_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of ionised iron [FeII/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027feiim_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [FeII/M] abundance estimation\n    StructField(\u0027feiim_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [FeII/M] abundance using N lines of the element, given in {\\tt feiimGspspecNlines}\n    StructField(\u0027sfe_gspspec\u0027, FloatType(), True), # Abundance of Sulphur [S/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt sfeGspspecNlines}\n    StructField(\u0027sfe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Sulphur [S/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027sfe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Sulphur [S/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027sfe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [S/Fe] abundance estimation\n    StructField(\u0027sfe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [S/Fe] abundance using N lines of the element, given in {\\tt sfeGspspecNlines}\n    StructField(\u0027zrfe_gspspec\u0027, FloatType(), True), # Abundance of Zirconium [Zr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt zrfeGspspecNlines}\n    StructField(\u0027zrfe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Zirconium [Zr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027zrfe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Zirconium [Zr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027zrfe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Zr/Fe] abundance estimation\n    StructField(\u0027zrfe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Zr/Fe] abundance using N lines of the element, given in {\\tt zrfeGspspecNlines}\n    StructField(\u0027nfe_gspspec\u0027, FloatType(), True), # Abundance of Nitrogen [N/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt nfeGspspecNlines}\n    StructField(\u0027nfe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Nitrogen [N/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027nfe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Nitrogen [N/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027nfe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [N/Fe] abundance estimation\n    StructField(\u0027nfe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [N/Fe] abundance using N lines of the element, given in {\\tt nfeGspspecNlines}\n    StructField(\u0027crfe_gspspec\u0027, FloatType(), True), # Abundance of Chromium [Cr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt crfeGspspecNlines}\n    StructField(\u0027crfe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Chromium [Cr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027crfe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Chromium [Cr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027crfe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Cr/Fe] abundance estimation\n    StructField(\u0027crfe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Cr/Fe] abundance using N lines of the element, given in {\\tt crfeGspspecNlines}\n    StructField(\u0027cefe_gspspec\u0027, FloatType(), True), # Abundance of Cerium [Ce/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt cefeGspspecNlines}\n    StructField(\u0027cefe_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Cerium [Ce/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027cefe_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Cerium [Ce/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027cefe_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Ce/Fe] abundance estimation\n    StructField(\u0027cefe_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Ce/Fe] abundance using N lines of the element, given in {\\tt cefeGspspecNlines}\n    StructField(\u0027nife_gspspec\u0027, FloatType(), True), # Abundance of Nickel [Ni/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\\tt nifeGspspecNlines}\n    StructField(\u0027nife_gspspec_lower\u0027, FloatType(), True), # 16th percentile of the abundance of Nickel [Ni/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027nife_gspspec_upper\u0027, FloatType(), True), # 84th percentile of the abundance of Nickel [Ni/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations\n    StructField(\u0027nife_gspspec_nlines\u0027, IntegerType(), True), # Number of lines used for [Ni/Fe] abundance estimation\n    StructField(\u0027nife_gspspec_linescatter\u0027, FloatType(), True), # Uncertainty estimation of [Ni/Fe] abundance using N lines of the element, given in {\\tt nifeGspspecNlines}\n    StructField(\u0027cn0ew_gspspec\u0027, FloatType(), True), # Equivalent witdh of cyanogen absorption line, derived from RVS spectra\n    StructField(\u0027cn0ew_gspspec_uncertainty\u0027, FloatType(), True), # Uncertainty of equivalent witdh of cyanogen absorption line, derived from RVS spectra\n    StructField(\u0027cn0_gspspec_centralline\u0027, FloatType(), True), # Central wavelength of cyanogen line, derived from RVS spectra using DIB algorithm\n    StructField(\u0027cn0_gspspec_width\u0027, FloatType(), True), # Width of cyoanogen line, derived from RVS spectra using DIB algorithm\n    StructField(\u0027dib_gspspec_lambda\u0027, FloatType(), True), # DIB central wavelength from GSP-Spec MatisseGauguin using RVS spectra \n    StructField(\u0027dib_gspspec_lambda_uncertainty\u0027, FloatType(), True), # Uncertainty on DIB central wavelength from GSP-Spec MatisseGauguin using RVS spectra\n    StructField(\u0027dibew_gspspec\u0027, FloatType(), True), # Equivalent width of the DIB from GSP-Spec MatisseGauguin using RVS spectra\n    StructField(\u0027dibew_gspspec_uncertainty\u0027, FloatType(), True), # Global uncertainty on DIB equivalent width value using DIB algorithm \n    StructField(\u0027dibewnoise_gspspec_uncertainty\u0027, FloatType(), True), # Uncertainty on DIB equivalent width value occuring from noise part \n    StructField(\u0027dibp0_gspspec\u0027, FloatType(), True), # Depth ($p_0$ parameter) of the DIB derived from a Gaussian model fit\n    StructField(\u0027dibp2_gspspec\u0027, FloatType(), True), # Width ($p_2$ parameter) of the DIB derived from a Gaussian model fit\n    StructField(\u0027dibp2_gspspec_uncertainty\u0027, FloatType(), True), # Uncertainty on the {\\tt dibp2Gspspec} parameter \n    StructField(\u0027dibqf_gspspec\u0027, IntegerType(), True), # Quality flag of the DIB computation\n    StructField(\u0027flags_gspspec\u0027, StringType(), True), # Catalogue flags for GSP-Spec MatisseGauguin \n    StructField(\u0027logchisq_gspspec\u0027, FloatType(), True), # Logarithm of the goodness-of-fit for the GSP-Spec MatisseGauguin parameters\n    StructField(\u0027ew_espels_halpha\u0027, FloatType(), True), # Halpha pseudo-equivalent width from ESP-ELS\n    StructField(\u0027ew_espels_halpha_uncertainty\u0027, FloatType(), True), # Uncertainty of the Halpha pseudo-equivalent width from ESP-ELS\n    StructField(\u0027ew_espels_halpha_flag\u0027, StringType(), True), # Quality flag of the Halpha pseudo-equivalent width from ESP-ELS\n    StructField(\u0027ew_espels_halpha_model\u0027, FloatType(), True), # Halpha pseudo-equivalent width from ESP-ELS measured on the synthetic spectrum\n    StructField(\u0027classlabel_espels\u0027, StringType(), True), # Adopted ELS class label from ESP-ELS\n    StructField(\u0027classlabel_espels_flag\u0027, StringType(), True), # Quality flag of the adopted ELS class label from ESP-ELS\n    StructField(\u0027classprob_espels_wcstar\u0027, FloatType(), True), # Probability from ESP-ELS of being a Wolf-Rayet star of type WC\n    StructField(\u0027classprob_espels_wnstar\u0027, FloatType(), True), # Probability from ESP-ELS of being a Wolf-Rayet star of type WN\n    StructField(\u0027classprob_espels_bestar\u0027, FloatType(), True), # Probability from ESP-ELS of being a Be Star\n    StructField(\u0027classprob_espels_ttauristar\u0027, FloatType(), True), # Probability from ESP-ELS of being a T Tauri Star\n    StructField(\u0027classprob_espels_herbigstar\u0027, FloatType(), True), # Probability from ESP-ELS of being a Herbig Ae/Be Star\n    StructField(\u0027classprob_espels_dmestar\u0027, FloatType(), True), # Probability from ESP-ELS of being an active M dwarf Star\n    StructField(\u0027classprob_espels_pne\u0027, FloatType(), True), # Probability from ESP-ELS of being a planetary nebula\n    StructField(\u0027azero_esphs\u0027, FloatType(), True), # Monochromatic interstellar extinction, A$_\\mathrm{0}$, from ESP-HS\n    StructField(\u0027azero_esphs_uncertainty\u0027, FloatType(), True), # Uncertainty at a 68% confidence level on A$_\\mathrm{0}$ from ESP-HS\n    StructField(\u0027ag_esphs\u0027, FloatType(), True), # Intersterstellar extinction in G band from ESP-HS\n    StructField(\u0027ag_esphs_uncertainty\u0027, FloatType(), True), # Uncertainty on $A_{\\rm G}$ from ESP-HS\n    StructField(\u0027ebpminrp_esphs\u0027, FloatType(), True), # Reddening $E(G_{\\rm BP} - G_{\\rm RP})$ from ESP-HS\n    StructField(\u0027ebpminrp_esphs_uncertainty\u0027, FloatType(), True), # Uncertainty on $E(G_{\\rm BP} - G_{\\rm RP})$ from ESP-HS\n    StructField(\u0027teff_esphs\u0027, FloatType(), True), # Effective temperature from ESP-HS\n    StructField(\u0027teff_esphs_uncertainty\u0027, FloatType(), True), # Uncertainty at a 68% confidence level on the effective temperature from ESP-HS\n    StructField(\u0027logg_esphs\u0027, FloatType(), True), # Surface gravity from ESP-HS\n    StructField(\u0027logg_esphs_uncertainty\u0027, FloatType(), True), # Uncertainty at a 68% confidence level on the surface gravity from ESP-HS\n    StructField(\u0027vsini_esphs\u0027, FloatType(), True), # Projected rotational velocity from ESP-HS\n    StructField(\u0027vsini_esphs_uncertainty\u0027, FloatType(), True), # Uncertainty on the projected rotational velocity from ESP-HS\n    StructField(\u0027flags_esphs\u0027, StringType(), True), # Quality flag of the ESP-HS parametrisation\n    StructField(\u0027spectraltype_esphs\u0027, StringType(), True), # Spectral type from ESP-ELS\n    StructField(\u0027activityindex_espcs\u0027, FloatType(), True), # Chromospheric activity index from ESP-CS, measured on the calcium triplet using RVS spectra\n    StructField(\u0027activityindex_espcs_uncertainty\u0027, FloatType(), True), # Uncertainty in the chromospheric activity index from ESP-CS\n    StructField(\u0027activityindex_espcs_input\u0027, StringType(), True), # Source of input stellar parameters for the computation of the activity index by ESP-CS\n    StructField(\u0027teff_espucd\u0027, FloatType(), True), # Effective temperature estimate from ESP-UCD based on the RP spectrum\n    StructField(\u0027teff_espucd_uncertainty\u0027, FloatType(), True), # Uncertainty of the effective temperature estimate produced by ESP-UCD \n    StructField(\u0027flags_espucd\u0027, StringType(), True), # Quality flags of the ESP-UCD parameter estimates\n    StructField(\u0027radius_flame\u0027, FloatType(), True), # Radius of the star from FLAME using {\\tt teffGspphot} and {\\tt lumFlame}\n    StructField(\u0027radius_flame_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt radiusFlame}\n    StructField(\u0027radius_flame_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt radiusFlame}\n    StructField(\u0027lum_flame\u0027, FloatType(), True), # Luminosity of the star from FLAME using G band magnitude, extinction ({\\tt agGspphot}),  parallax or distance, and a bolometric correction {\\tt bcFlame}\n    StructField(\u0027lum_flame_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt lumFlame}\n    StructField(\u0027lum_flame_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt lumFlame}\n    StructField(\u0027mass_flame\u0027, FloatType(), True), # Mass of the star from FLAME using stellar models, {\\tt lumFlame}, and {\\tt teffGspphot}\n    StructField(\u0027mass_flame_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt massFlame}\n    StructField(\u0027mass_flame_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt massFlame}\n    StructField(\u0027age_flame\u0027, FloatType(), True), # Age of the star from FLAME using stellar models, see {\\tt massFlame} for details\n    StructField(\u0027age_flame_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt ageFlame}\n    StructField(\u0027age_flame_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt ageFlame} \n    StructField(\u0027flags_flame\u0027, StringType(), True), # Flags indicating quality and processing information from FLAME\n    StructField(\u0027evolstage_flame\u0027, IntegerType(), True), # Evolutionary stage of the star from FLAME using stellar models, see {\\tt massFlame} for details\n    StructField(\u0027gravredshift_flame\u0027, FloatType(), True), # Gravitational redshift from FLAME using {\\tt radiusFlame} and {\\tt loggGspphot}\n    StructField(\u0027gravredshift_flame_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt gravredshiftFlame}\n    StructField(\u0027gravredshift_flame_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt gravredshiftFlame}\n    StructField(\u0027bc_flame\u0027, FloatType(), True), # Bolometric correction used to derive {\\tt lumFlame}\n    StructField(\u0027mh_msc\u0027, FloatType(), True), # Metallicity of the source treated as a binary system from MSC using BP/RP spectra and parallax\n    StructField(\u0027mh_msc_upper\u0027, FloatType(), True), # Upper confidence level (84%) of the metallicity from MSC using BP/RP spectra and parallax\n    StructField(\u0027mh_msc_lower\u0027, FloatType(), True), # Lower confidence level (16%) of the metallicity from MSC using BP/RP spectra and parallax\n    StructField(\u0027azero_msc\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm of the source treated as a binary system from MSC using BP/RP spectra and parallax\n    StructField(\u0027azero_msc_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from MSC using BP/RP spectra and parallax\n    StructField(\u0027azero_msc_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from MSC using BP/RP spectra and parallax\n    StructField(\u0027distance_msc\u0027, FloatType(), True), # Distance from MSC using BP/RP spectra and parallax\n    StructField(\u0027distance_msc_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from MSC using BP/RP spectra and parallax\n    StructField(\u0027distance_msc_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from MSC using BP/RP spectra and parallax\n    StructField(\u0027teff_msc1\u0027, FloatType(), True), # Effective temperature of the primary from MSC using BP/RP spectra and parallax\n    StructField(\u0027teff_msc1_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature of the primary from MSC using BP/RP spectra and parallax\n    StructField(\u0027teff_msc1_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature of the primary from MSC using BP/RP spectra and parallax\n    StructField(\u0027teff_msc2\u0027, FloatType(), True), # Effective temperature of the secondary from MSC using BP/RP spectra and parallax\n    StructField(\u0027teff_msc2_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature of the secondary from MSC using BP/RP spectra and parallax\n    StructField(\u0027teff_msc2_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature of the secondary from MSC using BP/RP spectra and parallax\n    StructField(\u0027logg_msc1\u0027, FloatType(), True), # Surface gravity of the primary from MSC using BP/RP spectra and parallax\n    StructField(\u0027logg_msc1_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity of the primary from MSC using BP/RP spectra and parallax\n    StructField(\u0027logg_msc1_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity of the primary from MSC using BP/RP spectra and parallax\n    StructField(\u0027logg_msc2\u0027, FloatType(), True), # Surface gravity of the secondary from MSC using BP/RP spectra and parallax\n    StructField(\u0027logg_msc2_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity of the secondary from MSC using BP/RP spectra and parallax\n    StructField(\u0027logg_msc2_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity of the secondary from MSC using BP/RP spectra and parallax\n    StructField(\u0027ag_msc\u0027, FloatType(), True), # Extinction in G band of the source treated as a binary system from MSC using BP/RP spectra and parallax\n    StructField(\u0027ag_msc_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from MSC using BP/RP spectra and parallax\n    StructField(\u0027ag_msc_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from MSC using BP/RP spectra and parallax\n    StructField(\u0027logposterior_msc\u0027, FloatType(), True), # Goodness-of-fit score (normalised log-posterior) of MSC MCMC\n    StructField(\u0027mcmcaccept_msc\u0027, FloatType(), True), # Mean MCMC acceptance rate of MSC MCMC\n    StructField(\u0027mcmcdrift_msc\u0027, FloatType(), True), # Mean drift of the MSC MCMC chain in units of parameter standard deviation\n    StructField(\u0027flags_msc\u0027, StringType(), True), # Flag indicating quality information from MSC\n    StructField(\u0027neuron_oa_id\u0027, LongType(), True), # Identifier of the OA SOM map neuron that represents the source\n    StructField(\u0027neuron_oa_dist\u0027, FloatType(), True), # Distance between the source XP spectra and the OA neuron XP prototype that represents the source\n    StructField(\u0027neuron_oa_dist_percentile_rank\u0027, IntegerType(), True), # Percentile rank according to the distance distribution of the OA neuron that represents the source\n    StructField(\u0027flags_oa\u0027, StringType(), True), # Flags indicating quality and processing information from OA\n])\nastrophysical_parameters_supp_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source Identifier\n    StructField(\u0027libname_best_gspphot\u0027, StringType(), True), # Name of library that achieves the highest mean log-posterior in MCMC samples from GSP-Phot Aeneas\n    StructField(\u0027teff_gspphot_marcs\u0027, FloatType(), True), # Effective temperature from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027teff_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027teff_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027logg_gspphot_marcs\u0027, FloatType(), True), # Surface gravity from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027logg_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027logg_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027mh_gspphot_marcs\u0027, FloatType(), True), # Iron abundance from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027mh_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027mh_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027distance_gspphot_marcs\u0027, FloatType(), True), # Distance from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027distance_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027distance_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027azero_gspphot_marcs\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027azero_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027azero_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027ag_gspphot_marcs\u0027, FloatType(), True), # Extinction in G band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027ag_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027ag_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027abp_gspphot_marcs\u0027, FloatType(), True), # Extinction in $G_{BP}$ band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027abp_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027abp_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027arp_gspphot_marcs\u0027, FloatType(), True), # Extinction in $G_{RP}$ band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027arp_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027arp_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_marcs\u0027, FloatType(), True), # Reddening $E(BP-RP)$ from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of reddening  $E(BP-RP)$ from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of reddening  $E(BP-RP)$ from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027mg_gspphot_marcs\u0027, FloatType(), True), # Absolute magnitude $M_G$ from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027mg_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027mg_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027radius_gspphot_marcs\u0027, FloatType(), True), # Radius from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027radius_gspphot_marcs_lower\u0027, FloatType(), True), # Lower confidence level (16%) of radius from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027radius_gspphot_marcs_upper\u0027, FloatType(), True), # Upper confidence level (84%) of radius from GSP-Phot Aeneas for MARCS library using BP/RP spectra\n    StructField(\u0027logposterior_gspphot_marcs\u0027, FloatType(), True), # Goodness-of-fit score (mean log-posterior of MCMC) of GSP-Phot Aeneas MCMC for MARCS library\n    StructField(\u0027mcmcaccept_gspphot_marcs\u0027, FloatType(), True), # MCMC acceptance rate of GSP-Phot Aeneas MCMC for MARCS library\n    StructField(\u0027teff_gspphot_phoenix\u0027, FloatType(), True), # Effective temperature from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027teff_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027teff_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027logg_gspphot_phoenix\u0027, FloatType(), True), # Surface gravity from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027logg_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027logg_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027mh_gspphot_phoenix\u0027, FloatType(), True), # Iron abundance from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027mh_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027mh_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027distance_gspphot_phoenix\u0027, FloatType(), True), # Distance from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027distance_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027distance_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027azero_gspphot_phoenix\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027azero_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027azero_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027ag_gspphot_phoenix\u0027, FloatType(), True), # Extinction in G band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027ag_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027ag_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027abp_gspphot_phoenix\u0027, FloatType(), True), # Extinction in $G_{BP}$ band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027abp_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027abp_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027arp_gspphot_phoenix\u0027, FloatType(), True), # Extinction in $G_{RP}$ band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027arp_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027arp_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_phoenix\u0027, FloatType(), True), # Reddening $E(BP-RP)$ from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of reddening  $E(BP-RP)$ from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of reddening  $E(BP-RP)$ from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027mg_gspphot_phoenix\u0027, FloatType(), True), # Absolute magnitude $M_G$ from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027mg_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027mg_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027radius_gspphot_phoenix\u0027, FloatType(), True), # Radius from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027radius_gspphot_phoenix_lower\u0027, FloatType(), True), # Lower confidence level (16%) of radius from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027radius_gspphot_phoenix_upper\u0027, FloatType(), True), # Upper confidence level (84%) of radius from GSP-Phot Aeneas for PHOENIX library using BP/RP spectra\n    StructField(\u0027logposterior_gspphot_phoenix\u0027, FloatType(), True), # Goodness-of-fit score (mean log-posterior of MCMC) of GSP-Phot Aeneas MCMC for PHOENIX library\n    StructField(\u0027mcmcaccept_gspphot_phoenix\u0027, FloatType(), True), # MCMC acceptance rate of GSP-Phot Aeneas MCMC for PHOENIX library\n    StructField(\u0027teff_gspphot_ob\u0027, FloatType(), True), # Effective temperature from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027teff_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027teff_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027logg_gspphot_ob\u0027, FloatType(), True), # Surface gravity from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027logg_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027logg_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027mh_gspphot_ob\u0027, FloatType(), True), # Iron abundance from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027mh_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027mh_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027distance_gspphot_ob\u0027, FloatType(), True), # Distance from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027distance_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027distance_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027azero_gspphot_ob\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027azero_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027azero_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027ag_gspphot_ob\u0027, FloatType(), True), # Extinction in G band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027ag_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027ag_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027abp_gspphot_ob\u0027, FloatType(), True), # Extinction in $G_{BP}$ band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027abp_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027abp_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027arp_gspphot_ob\u0027, FloatType(), True), # Extinction in $G_{RP}$ band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027arp_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027arp_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_ob\u0027, FloatType(), True), # Reddening E(BP-RP) from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of reddening  E(BP-RP) from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of reddening  E(BP-RP) from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027mg_gspphot_ob\u0027, FloatType(), True), # Absolute magnitude $M_G$ from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027mg_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027mg_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027radius_gspphot_ob\u0027, FloatType(), True), # Radius from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027radius_gspphot_ob_lower\u0027, FloatType(), True), # Lower confidence level (16%) of radius from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027radius_gspphot_ob_upper\u0027, FloatType(), True), # Upper confidence level (84%) of radius from GSP-Phot Aeneas for OB library using BP/RP spectra\n    StructField(\u0027logposterior_gspphot_ob\u0027, FloatType(), True), # Goodness-of-fit score (mean log-posterior of MCMC) of GSP-Phot Aeneas MCMC for OB library\n    StructField(\u0027mcmcaccept_gspphot_ob\u0027, FloatType(), True), # MCMC acceptance rate of GSP-Phot Aeneas MCMC for OB library\n    StructField(\u0027teff_gspphot_a\u0027, FloatType(), True), # Effective temperature from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027teff_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027teff_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027logg_gspphot_a\u0027, FloatType(), True), # Surface gravity from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027logg_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027logg_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027mh_gspphot_a\u0027, FloatType(), True), # Iron abundance from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027mh_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027mh_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027distance_gspphot_a\u0027, FloatType(), True), # Distance from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027distance_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027distance_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027azero_gspphot_a\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027azero_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027azero_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027ag_gspphot_a\u0027, FloatType(), True), # Extinction in G band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027ag_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027ag_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027abp_gspphot_a\u0027, FloatType(), True), # Extinction in $G_{BP}$ band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027abp_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027abp_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{BP}$ band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027arp_gspphot_a\u0027, FloatType(), True), # Extinction in $G_{RP}$ band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027arp_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027arp_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in $G_{RP}$ band from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_a\u0027, FloatType(), True), # Reddening $E(BP-RP)$ from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of reddening  $E(BP-RP)$ from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of reddening  $E(BP-RP)$ from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027mg_gspphot_a\u0027, FloatType(), True), # Absolute magnitude $M_G$ from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027mg_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027mg_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of absolute magnitude $M_G$ from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027radius_gspphot_a\u0027, FloatType(), True), # Radius from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027radius_gspphot_a_lower\u0027, FloatType(), True), # Lower confidence level (16%) of radius from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027radius_gspphot_a_upper\u0027, FloatType(), True), # Upper confidence level (84%) of radius from GSP-Phot Aeneas for A library using BP/RP spectra\n    StructField(\u0027logposterior_gspphot_a\u0027, FloatType(), True), # Goodness-of-fit score (mean log-posterior of MCMC) of GSP-Phot Aeneas MCMC for A library\n    StructField(\u0027mcmcaccept_gspphot_a\u0027, FloatType(), True), # MCMC acceptance rate of GSP-Phot Aeneas MCMC for A library\n    StructField(\u0027teff_gspspec_ann\u0027, FloatType(), True), # Effective temperature from GSP-Spec ANN using RVS spectra and Monte Carlo realisations \n    StructField(\u0027teff_gspspec_ann_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027teff_gspspec_ann_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027logg_gspspec_ann\u0027, FloatType(), True), # Surface gravity from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027logg_gspspec_ann_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Spec ANN using RVS spectra and Monte Carlo realisations \n    StructField(\u0027logg_gspspec_ann_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Spec ANN using RVS spectra and Monte Carlo realisations \n    StructField(\u0027mh_gspspec_ann\u0027, FloatType(), True), # Global metallicity from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027mh_gspspec_ann_lower\u0027, FloatType(), True), # Lower confidence level (16%) of global metallicity from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027mh_gspspec_ann_upper\u0027, FloatType(), True), # Upper confidence level (84%) of global metallicity  from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027alphafe_gspspec_ann\u0027, FloatType(), True), # Abundance of alpha-elements with respect to iron from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027alphafe_gspspec_ann_lower\u0027, FloatType(), True), # Lower confidence level (16%) of alpha-elements with respect to iron from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027alphafe_gspspec_ann_upper\u0027, FloatType(), True), # Upper confidence level (84%) of alpha-elements with respect to iron from GSP-Spec ANN using RVS spectra and Monte Carlo realisations\n    StructField(\u0027logchisq_gspspec_ann\u0027, FloatType(), True), # Logarithm of the goodness-of-fit for the GSP-Spec ANN parameters\n    StructField(\u0027flags_gspspec_ann\u0027, StringType(), True), # Catalogue flags for GSP-Spec ANN\n    StructField(\u0027radius_flame_spec\u0027, FloatType(), True), # Radius of the star from FLAME using {\\tt teffGspspec} and {\\tt lumFlameSpec}\n    StructField(\u0027radius_flame_spec_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt radiusFlameSpec}\n    StructField(\u0027radius_flame_spec_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt radiusFlameSpec}\n    StructField(\u0027lum_flame_spec\u0027, FloatType(), True), # Luminosity of the star from FLAME using G band magnitude, extinction ({\\tt agGspphot}),  parallax and a bolometric correction {\\tt bcFlameSpec}\n    StructField(\u0027lum_flame_spec_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt lumFlameSpec}\n    StructField(\u0027lum_flame_spec_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt lumFlameSpec} \n    StructField(\u0027mass_flame_spec\u0027, FloatType(), True), # Mass of the star from FLAME using stellar models,  {\\tt lumFlameSpec} and {\\tt teffGspspec}\n    StructField(\u0027mass_flame_spec_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt massFlameSpec}\n    StructField(\u0027mass_flame_spec_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt massFlameSpec}\n    StructField(\u0027age_flame_spec\u0027, FloatType(), True), # Age of the star from FLAME using stellar models, see {\\tt massFlameSpec} for details\n    StructField(\u0027age_flame_spec_lower\u0027, FloatType(), True), # Lower confidence level (16%) of {\\tt ageFlameSpec}\n    StructField(\u0027age_flame_spec_upper\u0027, FloatType(), True), # Upper confidence level (84%) of {\\tt ageFlameSpec}\n    StructField(\u0027flags_flame_spec\u0027, StringType(), True), # Flag indicating quality of parameters from FLAME using GSP-Spec parameters\n    StructField(\u0027evolstage_flame_spec\u0027, IntegerType(), True), # Evolutionary stage of the star from FLAME using stellar models, see {\\tt massFlameSpec} for details\n    StructField(\u0027gravredshift_flame_spec\u0027, FloatType(), True), # Gravitational redshift from FLAME using GSP-Spec parameters\n    StructField(\u0027gravredshift_flame_spec_lower\u0027, FloatType(), True), # Lower confidence interval of {\\tt gravredshiftFlameSpec}\n    StructField(\u0027gravredshift_flame_spec_upper\u0027, FloatType(), True), # Upper confidence interval of {\\tt gravredshiftFlameSpec}\n    StructField(\u0027bc_flame_spec\u0027, FloatType(), True), # Bolometric correction applied to derive {\\tt lumFlameSpec} using GSP-Spec parameters\n])\nepoch_photometry_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027n_transits\u0027, ShortType(), True), # Number of Gaia transits\n    StructField(\u0027transit_id\u0027, ArrayType(LongType()), True), # Transit unique identifier\n    StructField(\u0027g_transit_time\u0027, ArrayType(DoubleType()), True), # Transit averaged G band observing time\n    StructField(\u0027g_transit_flux\u0027, ArrayType(DoubleType()), True), # Transit averaged G band flux\n    StructField(\u0027g_transit_flux_error\u0027, ArrayType(DoubleType()), True), # Transit averaged G band flux error\n    StructField(\u0027g_transit_flux_over_error\u0027, ArrayType(FloatType()), True), # Transit averaged G band flux divided by its error\n    StructField(\u0027g_transit_mag\u0027, ArrayType(DoubleType()), True), # Transit averaged G band Vega magnitude\n    StructField(\u0027g_transit_n_obs\u0027, ArrayType(ByteType()), True), # Number of CCD observations contributing to transit averaged G band flux\n    StructField(\u0027bp_obs_time\u0027, ArrayType(DoubleType()), True), # BP CCD transit observing time\n    StructField(\u0027bp_flux\u0027, ArrayType(DoubleType()), True), # BP band flux\n    StructField(\u0027bp_flux_error\u0027, ArrayType(DoubleType()), True), # BP band flux error\n    StructField(\u0027bp_flux_over_error\u0027, ArrayType(FloatType()), True), # BP band flux divided by its error\n    StructField(\u0027bp_mag\u0027, ArrayType(DoubleType()), True), # BP band Vega magnitude\n    StructField(\u0027rp_obs_time\u0027, ArrayType(DoubleType()), True), # RP CCD transit observing time\n    StructField(\u0027rp_flux\u0027, ArrayType(DoubleType()), True), # RP band flux\n    StructField(\u0027rp_flux_error\u0027, ArrayType(DoubleType()), True), # RP band flux error\n    StructField(\u0027rp_flux_over_error\u0027, ArrayType(FloatType()), True), # RP band flux divided by its error\n    StructField(\u0027rp_mag\u0027, ArrayType(DoubleType()), True), # RP band Vega magnitude\n    StructField(\u0027photometry_flag_noisy_data\u0027, ArrayType(BooleanType()), True), # G band flux scatter larger than expected by photometry processing (all CCDs considered)\n    StructField(\u0027photometry_flag_sm_unavailable\u0027, ArrayType(BooleanType()), True), # SM transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af1_unavailable\u0027, ArrayType(BooleanType()), True), # AF1 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af2_unavailable\u0027, ArrayType(BooleanType()), True), # AF2 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af3_unavailable\u0027, ArrayType(BooleanType()), True), # AF3 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af4_unavailable\u0027, ArrayType(BooleanType()), True), # AF4 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af5_unavailable\u0027, ArrayType(BooleanType()), True), # AF5 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af6_unavailable\u0027, ArrayType(BooleanType()), True), # AF6 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af7_unavailable\u0027, ArrayType(BooleanType()), True), # AF7 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af8_unavailable\u0027, ArrayType(BooleanType()), True), # AF8 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_af9_unavailable\u0027, ArrayType(BooleanType()), True), # AF9 transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_bp_unavailable\u0027, ArrayType(BooleanType()), True), # BP transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_rp_unavailable\u0027, ArrayType(BooleanType()), True), # RP transit unavailable by photometry processing\n    StructField(\u0027photometry_flag_sm_reject\u0027, ArrayType(BooleanType()), True), # SM transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af1_reject\u0027, ArrayType(BooleanType()), True), # AF1 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af2_reject\u0027, ArrayType(BooleanType()), True), # AF2 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af3_reject\u0027, ArrayType(BooleanType()), True), # AF3 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af4_reject\u0027, ArrayType(BooleanType()), True), # AF4 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af5_reject\u0027, ArrayType(BooleanType()), True), # AF5 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af6_reject\u0027, ArrayType(BooleanType()), True), # AF6 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af7_reject\u0027, ArrayType(BooleanType()), True), # AF7 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af8_reject\u0027, ArrayType(BooleanType()), True), # AF8 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_af9_reject\u0027, ArrayType(BooleanType()), True), # AF9 transit rejected by photometry processing\n    StructField(\u0027photometry_flag_bp_reject\u0027, ArrayType(BooleanType()), True), # BP transit rejected by photometry processing\n    StructField(\u0027photometry_flag_rp_reject\u0027, ArrayType(BooleanType()), True), # RP transit rejected by photometry processing\n    StructField(\u0027variability_flag_g_reject\u0027, ArrayType(BooleanType()), True), # Average G transit photometry rejected by variability processing\n    StructField(\u0027variability_flag_bp_reject\u0027, ArrayType(BooleanType()), True), # BP transit photometry rejected by variability processing\n    StructField(\u0027variability_flag_rp_reject\u0027, ArrayType(BooleanType()), True), # RP transit photometry rejected by variability processing\n])\ngaia_source_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027designation\u0027, StringType(), True), # Unique source designation (unique across all Data Releases)\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027random_index\u0027, LongType(), True), # Random index for use when selecting subsets\n    StructField(\u0027ref_epoch\u0027, DoubleType(), True), # Reference epoch\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right ascension\n    StructField(\u0027ra_error\u0027, FloatType(), True), # Standard error of right ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027dec_error\u0027, FloatType(), True), # Standard error of declination\n    StructField(\u0027parallax\u0027, DoubleType(), True), # Parallax\n    StructField(\u0027parallax_error\u0027, FloatType(), True), # Standard error of parallax\n    StructField(\u0027parallax_over_error\u0027, FloatType(), True), # Parallax divided by its standard error\n    StructField(\u0027pm\u0027, FloatType(), True), # Total proper motion\n    StructField(\u0027pmra\u0027, DoubleType(), True), # Proper motion in right ascension direction\n    StructField(\u0027pmra_error\u0027, FloatType(), True), # Standard error of proper motion in right ascension direction\n    StructField(\u0027pmdec\u0027, DoubleType(), True), # Proper motion in declination direction\n    StructField(\u0027pmdec_error\u0027, FloatType(), True), # Standard error of proper motion in declination direction\n    StructField(\u0027ra_dec_corr\u0027, FloatType(), True), # Correlation between right ascension and declination\n    StructField(\u0027ra_parallax_corr\u0027, FloatType(), True), # Correlation between right ascension and parallax\t\t\n    StructField(\u0027ra_pmra_corr\u0027, FloatType(), True), # Correlation between right ascension and proper motion in right ascension\n    StructField(\u0027ra_pmdec_corr\u0027, FloatType(), True), # Correlation between right ascension and proper motion in declination\n    StructField(\u0027dec_parallax_corr\u0027, FloatType(), True), # Correlation between declination and parallax\n    StructField(\u0027dec_pmra_corr\u0027, FloatType(), True), # Correlation between declination and proper motion in right ascension\n    StructField(\u0027dec_pmdec_corr\u0027, FloatType(), True), # Correlation between declination and proper motion in declination\n    StructField(\u0027parallax_pmra_corr\u0027, FloatType(), True), # Correlation between parallax and proper motion in right ascension\n    StructField(\u0027parallax_pmdec_corr\u0027, FloatType(), True), # Correlation between parallax and proper motion in declination\n    StructField(\u0027pmra_pmdec_corr\u0027, FloatType(), True), # Correlation between proper motion in right ascension and proper motion in declination\n    StructField(\u0027astrometric_n_obs_al\u0027, ShortType(), True), # Total number of observations in the along-scan (AL) direction\n    StructField(\u0027astrometric_n_obs_ac\u0027, ShortType(), True), # Total number of observations in the across-scan (AC) direction\n    StructField(\u0027astrometric_n_good_obs_al\u0027, ShortType(), True), # Number of good observations in the along-scan (AL) direction\n    StructField(\u0027astrometric_n_bad_obs_al\u0027, ShortType(), True), # Number of bad observations in the along-scan (AL) direction\n    StructField(\u0027astrometric_gof_al\u0027, FloatType(), True), # Goodness of fit statistic of model wrt along-scan observations\n    StructField(\u0027astrometric_chi2_al\u0027, FloatType(), True), # AL chi-square value\n    StructField(\u0027astrometric_excess_noise\u0027, FloatType(), True), # Excess noise of the source\n    StructField(\u0027astrometric_excess_noise_sig\u0027, FloatType(), True), # Significance of excess noise\n    StructField(\u0027astrometric_params_solved\u0027, ByteType(), True), # Which parameters have been solved for?\n    StructField(\u0027astrometric_primary_flag\u0027, BooleanType(), True), # Primary or seconday\n    StructField(\u0027nu_eff_used_in_astrometry\u0027, FloatType(), True), # Effective wavenumber of the source used in the astrometric solution\n    StructField(\u0027pseudocolour\u0027, FloatType(), True), # Astrometrically estimated pseudocolour of the source\n    StructField(\u0027pseudocolour_error\u0027, FloatType(), True), # Standard error of the pseudocolour of the source\n    StructField(\u0027ra_pseudocolour_corr\u0027, FloatType(), True), # Correlation between right ascension and pseudocolour\n    StructField(\u0027dec_pseudocolour_corr\u0027, FloatType(), True), # Correlation between declination and pseudocolour\n    StructField(\u0027parallax_pseudocolour_corr\u0027, FloatType(), True), # Correlation between parallax and pseudocolour\n    StructField(\u0027pmra_pseudocolour_corr\u0027, FloatType(), True), # Correlation between proper motion in right asension and pseudocolour\n    StructField(\u0027pmdec_pseudocolour_corr\u0027, FloatType(), True), # Correlation between proper motion in declination and pseudocolour\n    StructField(\u0027astrometric_matched_transits\u0027, ShortType(), True), # Matched FOV transits used in the AGIS solution\n    StructField(\u0027visibility_periods_used\u0027, ShortType(), True), # Number of visibility periods used in Astrometric solution\n    StructField(\u0027astrometric_sigma5d_max\u0027, FloatType(), True), # The longest semi-major axis of the 5-d error ellipsoid\n    StructField(\u0027matched_transits\u0027, ShortType(), True), # The number of transits matched to this source\n    StructField(\u0027new_matched_transits\u0027, ShortType(), True), # The number of transits newly incorporated into an existing source in the current cycle\n    StructField(\u0027matched_transits_removed\u0027, ShortType(), True), # The number of transits removed from an existing source in the current cycle\n    StructField(\u0027ipd_gof_harmonic_amplitude\u0027, FloatType(), True), # Amplitude of the IPD GoF versus position angle of scan\n    StructField(\u0027ipd_gof_harmonic_phase\u0027, FloatType(), True), # Phase of the IPD GoF versus position angle of scan\n    StructField(\u0027ipd_frac_multi_peak\u0027, ByteType(), True), # Percent of successful-IPD windows with more than one peak\n    StructField(\u0027ipd_frac_odd_win\u0027, ByteType(), True), # Percent of transits with truncated windows or multiple gate\n    StructField(\u0027ruwe\u0027, FloatType(), True), # Renormalised unit weight error\n    StructField(\u0027scan_direction_strength_k1\u0027, FloatType(), True), # Degree of concentration of scan directions across the source\n    StructField(\u0027scan_direction_strength_k2\u0027, FloatType(), True), # Degree of concentration of scan directions across the source\n    StructField(\u0027scan_direction_strength_k3\u0027, FloatType(), True), # Degree of concentration of scan directions across the source\n    StructField(\u0027scan_direction_strength_k4\u0027, FloatType(), True), # Degree of concentration of scan directions across the source\n    StructField(\u0027scan_direction_mean_k1\u0027, FloatType(), True), # Mean position angle of scan directions across the source\n    StructField(\u0027scan_direction_mean_k2\u0027, FloatType(), True), # Mean position angle of scan directions across the source\n    StructField(\u0027scan_direction_mean_k3\u0027, FloatType(), True), # Mean position angle of scan directions across the source\n    StructField(\u0027scan_direction_mean_k4\u0027, FloatType(), True), # Mean position angle of scan directions across the source\n    StructField(\u0027duplicated_source\u0027, BooleanType(), True), # Source with multiple source identifiers\n    StructField(\u0027phot_g_n_obs\u0027, ShortType(), True), # Number of observations contributing to G photometry\n    StructField(\u0027phot_g_mean_flux\u0027, DoubleType(), True), # G-band mean flux\n    StructField(\u0027phot_g_mean_flux_error\u0027, FloatType(), True), # Error on G-band mean flux\n    StructField(\u0027phot_g_mean_flux_over_error\u0027, FloatType(), True), # G-band mean flux divided by its error\n    StructField(\u0027phot_g_mean_mag\u0027, FloatType(), True), # G-band mean magnitude\n    StructField(\u0027phot_bp_n_obs\u0027, ShortType(), True), # Number of observations contributing to BP photometry\n    StructField(\u0027phot_bp_mean_flux\u0027, DoubleType(), True), # Integrated BP mean flux\n    StructField(\u0027phot_bp_mean_flux_error\u0027, FloatType(), True), # Error on the integrated BP mean flux\n    StructField(\u0027phot_bp_mean_flux_over_error\u0027, FloatType(), True), # Integrated BP mean flux divided by its error\n    StructField(\u0027phot_bp_mean_mag\u0027, FloatType(), True), # Integrated BP mean magnitude\n    StructField(\u0027phot_rp_n_obs\u0027, ShortType(), True), # Number of observations contributing to RP photometry\n    StructField(\u0027phot_rp_mean_flux\u0027, DoubleType(), True), # Integrated RP mean flux\n    StructField(\u0027phot_rp_mean_flux_error\u0027, FloatType(), True), # Error on the integrated RP mean flux\n    StructField(\u0027phot_rp_mean_flux_over_error\u0027, FloatType(), True), # Integrated RP mean flux divided by its error\n    StructField(\u0027phot_rp_mean_mag\u0027, FloatType(), True), # Integrated RP mean magnitude\n    StructField(\u0027phot_bp_rp_excess_factor\u0027, FloatType(), True), # BP/RP excess factor\n    StructField(\u0027phot_bp_n_contaminated_transits\u0027, ShortType(), True), # Number of BP contaminated transits\n    StructField(\u0027phot_bp_n_blended_transits\u0027, ShortType(), True), # Number of BP blended transits\n    StructField(\u0027phot_rp_n_contaminated_transits\u0027, ShortType(), True), # Number of RP contaminated transits\n    StructField(\u0027phot_rp_n_blended_transits\u0027, ShortType(), True), # Number of RP blended transits\n    StructField(\u0027phot_proc_mode\u0027, ByteType(), True), # Photometry processing mode\n    StructField(\u0027bp_rp\u0027, FloatType(), True), # BP - RP colour\n    StructField(\u0027bp_g\u0027, FloatType(), True), # BP - G colour\n    StructField(\u0027g_rp\u0027, FloatType(), True), # G - RP colour\n    StructField(\u0027radial_velocity\u0027, FloatType(), True), # Radial velocity \n    StructField(\u0027radial_velocity_error\u0027, FloatType(), True), # Radial velocity error \n    StructField(\u0027rv_method_used\u0027, ByteType(), True), # Method used to obtain the radial velocity\n    StructField(\u0027rv_nb_transits\u0027, ShortType(), True), # Number of transits used to compute the radial velocity \n    StructField(\u0027rv_nb_deblended_transits\u0027, ShortType(), True), # Number of valid transits that have undergone deblending\n    StructField(\u0027rv_visibility_periods_used\u0027, ShortType(), True), # Number of visibility periods used to estimate the radial velocity\n    StructField(\u0027rv_expected_sig_to_noise\u0027, FloatType(), True), # Expected signal to noise ratio in the combination of the spectra used to obtain the radial velocity\n    StructField(\u0027rv_renormalised_gof\u0027, FloatType(), True), # Radial velocity renormalised goodness of fit\n    StructField(\u0027rv_chisq_pvalue\u0027, FloatType(), True), # P-value for constancy based on a chi-squared criterion\n    StructField(\u0027rv_time_duration\u0027, FloatType(), True), # Time coverage of the radial velocity time series\n    StructField(\u0027rv_amplitude_robust\u0027, FloatType(), True), # Total amplitude in the radial velocity time series after outlier removal\n    StructField(\u0027rv_template_teff\u0027, FloatType(), True), # Teff of the template used to compute the radial velocity \n    StructField(\u0027rv_template_logg\u0027, FloatType(), True), # Logg of the template used to compute the radial velocity \n    StructField(\u0027rv_template_fe_h\u0027, FloatType(), True), # [Fe/H] of the template used to compute the radial velocityy\n    StructField(\u0027rv_atm_param_origin\u0027, ShortType(), True), # Origin of the atmospheric parameters associated to the template\n    StructField(\u0027vbroad\u0027, FloatType(), True), # Spectral line broadening parameter\n    StructField(\u0027vbroad_error\u0027, FloatType(), True), # Uncertainty on the spectral line broadening\n    StructField(\u0027vbroad_nb_transits\u0027, ShortType(), True), # Number of transits used to compute vbroad\n    StructField(\u0027grvs_mag\u0027, FloatType(), True), # Integrated Grvs magnitude\n    StructField(\u0027grvs_mag_error\u0027, FloatType(), True), # Grvs magnitude uncertainty\n    StructField(\u0027grvs_mag_nb_transits\u0027, ShortType(), True), # Number of transits used to compute Grvs\n    StructField(\u0027rvs_spec_sig_to_noise\u0027, FloatType(), True), # Signal to noise ratio in the mean RVS spectrum\n    StructField(\u0027phot_variable_flag\u0027, StringType(), True), # Photometric variability flag\n    StructField(\u0027l\u0027, DoubleType(), True), # Galactic longitude\n    StructField(\u0027b\u0027, DoubleType(), True), # Galactic latitude\n    StructField(\u0027ecl_lon\u0027, DoubleType(), True), # Ecliptic longitude\n    StructField(\u0027ecl_lat\u0027, DoubleType(), True), # Ecliptic latitude\n    StructField(\u0027in_qso_candidates\u0027, BooleanType(), True), # Flag indicating the availability of additional information in the QsoCandidates table\n    StructField(\u0027in_galaxy_candidates\u0027, BooleanType(), True), # Flag indicating the availability of additional information in the GalaxyCandidates table\n    StructField(\u0027non_single_star\u0027, ShortType(), True), # Flag indicating the availability of additional information in the various Non-Single Star tables\n    StructField(\u0027has_xp_continuous\u0027, BooleanType(), True), # Flag indicating the availability of mean BP/RP spectrum in continuous representation for this source\n    StructField(\u0027has_xp_sampled\u0027, BooleanType(), True), # Flag indicating the availability of mean BP/RP spectrum in sampled form for this source\n    StructField(\u0027has_rvs\u0027, BooleanType(), True), # Flag indicating the availability of mean RVS spectrum for this source\n    StructField(\u0027has_epoch_photometry\u0027, BooleanType(), True), # Flag indicating the availability of epoch photometry for this source\n    StructField(\u0027has_epoch_rv\u0027, BooleanType(), True), # Flag indicating the availability of epoch radial velocity for this source\n    StructField(\u0027has_mcmc_gspphot\u0027, BooleanType(), True), # Flag indicating the availability of GSP-Phot MCMC samples for this source\n    StructField(\u0027has_mcmc_msc\u0027, BooleanType(), True), # Flag indicating the availability of MSC MCMC samples for this source\n    StructField(\u0027in_andromeda_survey\u0027, BooleanType(), True), # Flag indicating that the source is present in the Gaia Andromeda Photometric Survey (GAPS)\n    StructField(\u0027classprob_dsc_combmod_quasar\u0027, FloatType(), True), # Probability from DSC-Combmod of being a quasar (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_galaxy\u0027, FloatType(), True), # Probability from DSC-Combmod of being a galaxy (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_star\u0027, FloatType(), True), # Probability from DSC-Combmod of being a single star (but not a white dwarf) (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027teff_gspphot\u0027, FloatType(), True), # Effective temperature from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027teff_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027teff_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logg_gspphot\u0027, FloatType(), True), # Surface gravity from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logg_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027logg_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mh_gspphot\u0027, FloatType(), True), # Iron abundance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mh_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027mh_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027distance_gspphot\u0027, FloatType(), True), # Distance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027distance_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of distance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027distance_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of distance from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027azero_gspphot\u0027, FloatType(), True), # Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027azero_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027azero_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ag_gspphot\u0027, FloatType(), True), # Extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ag_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ag_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot\u0027, FloatType(), True), # Reddening $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_lower\u0027, FloatType(), True), # Lower confidence level (16%) of reddening  $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027ebpminrp_gspphot_upper\u0027, FloatType(), True), # Upper confidence level (84%) of reddening  $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra\n    StructField(\u0027libname_gspphot\u0027, StringType(), True), # Name of library that achieves the highest mean log-posterior in MCMC samples and was used to derive GSP-Phot parameters in this table\n])\ngalaxy_candidates_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027vari_best_class_name\u0027, StringType(), True), # Name of best class, see table VariClassifierClassDefinition for details of the class\n    StructField(\u0027vari_best_class_score\u0027, FloatType(), True), # Score of the best class\n    StructField(\u0027classprob_dsc_combmod_galaxy\u0027, FloatType(), True), # Probability from DSC-Combmod of being a galaxy (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_quasar\u0027, FloatType(), True), # Probability from DSC-Combmod of being a quasar (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classlabel_dsc\u0027, StringType(), True), # Class assigned by DSC based on the probability from its Combmod classifier\n    StructField(\u0027classlabel_dsc_joint\u0027, StringType(), True), # Class assigned by DSC based on the probability from its Specmod and Allosmod classifiers\n    StructField(\u0027classlabel_oa\u0027, StringType(), True), # Class assigned by OA the neuron that represents the source\n    StructField(\u0027redshift_ugc\u0027, FloatType(), True), # Redshift from UGC\n    StructField(\u0027redshift_ugc_lower\u0027, FloatType(), True), # Redshift prediction lower limit from UGC\n    StructField(\u0027redshift_ugc_upper\u0027, FloatType(), True), # Redshift prediction upper limit from UGC\n    StructField(\u0027n_transits\u0027, IntegerType(), True), # Number of transits used for the morphological analysis\n    StructField(\u0027posangle_sersic\u0027, DoubleType(), True), # Fitted position angle of the source for the Sersic Profile\n    StructField(\u0027posangle_sersic_error\u0027, DoubleType(), True), # Error on the fitted position angle of the source for the Sersic Profile\n    StructField(\u0027intensity_sersic\u0027, DoubleType(), True), # Fitted intensity of the source for the Sersic Profile\n    StructField(\u0027intensity_sersic_error\u0027, DoubleType(), True), # Error on the fitted intensity of the source at effective radius radiusSersic\n    StructField(\u0027radius_sersic\u0027, DoubleType(), True), # Fitted effective radius of the source for the Sersic Profile\n    StructField(\u0027radius_sersic_error\u0027, DoubleType(), True), # Error on the fitted effective radius of the source for the Sersic Profile\n    StructField(\u0027ellipticity_sersic\u0027, DoubleType(), True), # Fitted ellipticity of source for the Sersic Profile\n    StructField(\u0027ellipticity_sersic_error\u0027, DoubleType(), True), # Error on the fitted ellipticity of the source for the Sersic Profile\n    StructField(\u0027n_sersic\u0027, FloatType(), True), # Fitted Sersic Index for Sersic Profile\n    StructField(\u0027n_sersic_error\u0027, FloatType(), True), # Error on the fitted Sersic Index for Sersic Profile\n    StructField(\u0027l2_sersic\u0027, DoubleType(), True), # L2 norm for the Sersic Profile\n    StructField(\u0027morph_params_corr_vec_sersic\u0027, ArrayType(DoubleType()), True), # Vector form of the upper triangle of the correlation matrix for the fitted parameters for the Sersic Profile\n    StructField(\u0027flags_sersic\u0027, ByteType(), True), # Flag indicative of processing or scientific quality for the morphological parameters fitting for the Sersic Profile\n    StructField(\u0027posangle_de_vaucouleurs\u0027, DoubleType(), True), # Fitted position angle of the source for the de Vaucouleurs Profile\n    StructField(\u0027posangle_de_vaucouleurs_error\u0027, DoubleType(), True), # Error on the fitted position angle of the source for the de Vaucouleurs Profile\n    StructField(\u0027intensity_de_vaucouleurs\u0027, DoubleType(), True), # Fitted intensity of the source for the de Vaucouleurs Profile\n    StructField(\u0027intensity_de_vaucouleurs_error\u0027, DoubleType(), True), # Error on the fitted intensity of the bulge for the de Vaucouleurs Profile\n    StructField(\u0027radius_de_vaucouleurs\u0027, DoubleType(), True), # Fitted effective radius of the source for de Vaucouleurs Profile\n    StructField(\u0027radius_de_vaucouleurs_error\u0027, DoubleType(), True), # Error on the fitted effective radius of the source for the de Vaucouleurs Profile\n    StructField(\u0027ellipticity_de_vaucouleurs\u0027, DoubleType(), True), # Fitted ellipticity of source for the de Vaucouleurs Profile\n    StructField(\u0027ellipticity_de_vaucouleurs_error\u0027, DoubleType(), True), # Error on the fitted ellipticity of the source for the de Vaucouleurs Profile\n    StructField(\u0027l2_de_vaucouleurs\u0027, DoubleType(), True), # L2 norm for the de Vaucouleurs Profile\n    StructField(\u0027morph_params_corr_vec_de_vaucouleurs\u0027, ArrayType(DoubleType()), True), # Vector form of the upper triangle of the correlation matrix for the fitted parameters for the de Vaucouleurs Profile\n    StructField(\u0027flags_de_vaucouleurs\u0027, ByteType(), True), # Flag indicative of processing or scientific quality for the morphological parameters fitting for the de Vaucouleurs Profile\n    StructField(\u0027source_selection_flags\u0027, IntegerType(), True), # Bit indicative of whether the input data from a given module met the source list eligibility criteria for the source of interest\n])\ngalaxy_catalogue_name_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027catalogue_id\u0027, ByteType(), False), # The unique identifier for the catalogue(s) used to select the sources in the morphological analysis\n])\nmcmc_samples_gsp_phot_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027nsamples\u0027, ShortType(), True), # Number of samples in the chain from GSP-Phot\n    StructField(\u0027teff\u0027, ArrayType(FloatType()), True), # MCMC samples for $T_{\\rm eff}$ from GSP-Phot\n    StructField(\u0027azero\u0027, ArrayType(FloatType()), True), # MCMC samples for extinction $A_0$ from GSP-Phot\n    StructField(\u0027logg\u0027, ArrayType(FloatType()), True), # MCMC samples for $\\log g$ from GSP-Phot\n    StructField(\u0027mh\u0027, ArrayType(FloatType()), True), # MCMC samples for the metallicity from GSP-Phot\n    StructField(\u0027ag\u0027, ArrayType(FloatType()), True), # MCMC samples for extinction in G band from GSP-Phot\n    StructField(\u0027mg\u0027, ArrayType(FloatType()), True), # MCMC samples for $M_{\\rm G}$ from GSP-Phot\n    StructField(\u0027distancepc\u0027, ArrayType(FloatType()), True), # MCMC samples for distance from GSP-Phot\n    StructField(\u0027abp\u0027, ArrayType(FloatType()), True), # MCMC samples for extinction in $G_{\\rm BP}$ band from GSP-Phot\n    StructField(\u0027arp\u0027, ArrayType(FloatType()), True), # MCMC samples for extinction in $G_{\\rm RP}$ band from GSP-Phot\n    StructField(\u0027ebpminrp\u0027, ArrayType(FloatType()), True), # MCMC samples for reddening $E(G_{\\rm BP} - G_{\\rm RP})$ from GSP-Phot\n    StructField(\u0027log_pos\u0027, ArrayType(FloatType()), True), # MCMC samples for the log-posterior from GSP-Phot\n    StructField(\u0027log_lik\u0027, ArrayType(FloatType()), True), # MCMC samples for the log-likelihood from GSP-Phot\n    StructField(\u0027radius\u0027, ArrayType(FloatType()), True), # MCMC samples for stellar radius from GSP-Phot\n])\nmcmc_samples_msc_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027nsamples\u0027, ShortType(), True), # Number of samples in the chain from MSC\n    StructField(\u0027teff1\u0027, ArrayType(FloatType()), True), # MCMC samples for $T_{\\rm eff, 1}$ of primary from MSC\n    StructField(\u0027teff2\u0027, ArrayType(FloatType()), True), # MCMC samples for $T_{\\rm eff, 2}$ of secondary from MSC\n    StructField(\u0027logg1\u0027, ArrayType(FloatType()), True), # MCMC samples for $\\log g_1$ of primary from MSC\n    StructField(\u0027logg2\u0027, ArrayType(FloatType()), True), # MCMC samples for $\\log g_2$ of secondary from MSC\n    StructField(\u0027azero\u0027, ArrayType(FloatType()), True), # MCMC samples for extinction $A_0$ from MSC\n    StructField(\u0027mh\u0027, ArrayType(FloatType()), True), # MCMC samples for the metallicity from MSC\n    StructField(\u0027distancepc\u0027, ArrayType(FloatType()), True), # MCMC samples for distance from MSC\n    StructField(\u0027log_pos\u0027, ArrayType(FloatType()), True), # MCMC samples for the log-posterior from MSC\n    StructField(\u0027log_lik\u0027, ArrayType(FloatType()), True), # MCMC samples for the log-likelihood from MSC\n])\nnss_acceleration_astro_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source Identifier\n    StructField(\u0027nss_solution_type\u0027, StringType(), True), # NSS model adopted\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right ascension\n    StructField(\u0027ra_error\u0027, FloatType(), True), # Standard error of right ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027dec_error\u0027, FloatType(), True), # Standard error of declination\n    StructField(\u0027parallax\u0027, DoubleType(), True), # Parallax\n    StructField(\u0027parallax_error\u0027, FloatType(), True), # Standard error of parallax\n    StructField(\u0027pmra\u0027, DoubleType(), True), # Proper motion in right ascension direction\n    StructField(\u0027pmra_error\u0027, FloatType(), True), # Standard error of proper motion in right ascension direction\n    StructField(\u0027pmdec\u0027, DoubleType(), True), # Proper motion in declination direction\n    StructField(\u0027pmdec_error\u0027, FloatType(), True), # Standard error of proper motion in declination direction\n    StructField(\u0027accel_ra\u0027, DoubleType(), True), # Acceleration in RA\n    StructField(\u0027accel_ra_error\u0027, FloatType(), True), # Standard error of Acceleration in RA\n    StructField(\u0027accel_dec\u0027, DoubleType(), True), # Acceleration in DEC\n    StructField(\u0027accel_dec_error\u0027, FloatType(), True), # Standard error of Acceleration in DEC\n    StructField(\u0027deriv_accel_ra\u0027, DoubleType(), True), # Time derivative of the accel. in RA\n    StructField(\u0027deriv_accel_ra_error\u0027, FloatType(), True), # Standard error of Time derivative of the acceleration in RA\n    StructField(\u0027deriv_accel_dec\u0027, DoubleType(), True), # Time derivative of the accel. in DEC\n    StructField(\u0027deriv_accel_dec_error\u0027, FloatType(), True), # Standard error of Time derivative of the acceleration in DEC\n    StructField(\u0027astrometric_n_obs_al\u0027, IntegerType(), True), # Total astrometric CCD observations in AL considered\n    StructField(\u0027astrometric_n_good_obs_al\u0027, IntegerType(), True), # Total astrometric CCD observations in AL actually used\n    StructField(\u0027bit_index\u0027, LongType(), True), # Boolean mask for the fields above in the corrVec matrix \n    StructField(\u0027corr_vec\u0027, ArrayType(FloatType()), True), # Vector form of the upper triangle of the correlation matrix\n    StructField(\u0027obj_func\u0027, FloatType(), True), # Value of the objective function at the solution\n    StructField(\u0027goodness_of_fit\u0027, FloatType(), True), # Goodness of fit in the Hipparcos sense\n    StructField(\u0027significance\u0027, FloatType(), True), # The significance of the solution (i.e. how worth keeping a model is)\n    StructField(\u0027flags\u0027, LongType(), True), # Quality flag for the achieved NSS solution\n])\nnss_non_linear_spectro_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source Identifier\n    StructField(\u0027nss_solution_type\u0027, StringType(), True), # NSS model adopted\n    StructField(\u0027mean_velocity\u0027, DoubleType(), True), # Mean velocity\n    StructField(\u0027mean_velocity_error\u0027, FloatType(), True), # Standard error of Mean velocity\n    StructField(\u0027first_deriv_velocity\u0027, DoubleType(), True), # First order derivative of the velocity\n    StructField(\u0027first_deriv_velocity_error\u0027, FloatType(), True), # Standard error of First order derivative of the velocity\n    StructField(\u0027second_deriv_velocity\u0027, DoubleType(), True), # Second order derivative of the velocity\n    StructField(\u0027second_deriv_velocity_error\u0027, FloatType(), True), # Standard error of Second order derivative of the velocity\n    StructField(\u0027rv_n_obs_primary\u0027, IntegerType(), True), # Total number of radial velocities considered for the primary\n    StructField(\u0027rv_n_good_obs_primary\u0027, IntegerType(), True), # Total number of radial velocities actually used for the primary\n    StructField(\u0027bit_index\u0027, LongType(), True), # Boolean mask for the fields above in the corrVec matrix \n    StructField(\u0027corr_vec\u0027, ArrayType(FloatType()), True), # Vector form of the upper triangle of the correlation matrix\n    StructField(\u0027obj_func\u0027, FloatType(), True), # Value of the objective function at the solution\n    StructField(\u0027goodness_of_fit\u0027, FloatType(), True), # Goodness of fit in the Hipparcos sense\n    StructField(\u0027flags\u0027, LongType(), True), # Quality flag for the achieved NSS solution\n])\nnss_two_body_orbit_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source Identifier\n    StructField(\u0027nss_solution_type\u0027, StringType(), False), # NSS model adopted\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right ascension\n    StructField(\u0027ra_error\u0027, FloatType(), True), # Standard error of right ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027dec_error\u0027, FloatType(), True), # Standard error of declination\n    StructField(\u0027parallax\u0027, DoubleType(), True), # Parallax\n    StructField(\u0027parallax_error\u0027, FloatType(), True), # Standard error of parallax\n    StructField(\u0027pmra\u0027, DoubleType(), True), # Proper motion in right ascension direction\n    StructField(\u0027pmra_error\u0027, FloatType(), True), # Standard error of proper motion in right ascension direction\n    StructField(\u0027pmdec\u0027, DoubleType(), True), # Proper motion in declination direction\n    StructField(\u0027pmdec_error\u0027, FloatType(), True), # Standard error of proper motion in declination direction\n    StructField(\u0027a_thiele_innes\u0027, DoubleType(), True), # Thiele-Innes element A\n    StructField(\u0027a_thiele_innes_error\u0027, FloatType(), True), # Standard error of Thiele-Innes element A\n    StructField(\u0027b_thiele_innes\u0027, DoubleType(), True), # Thiele-Innes element B\n    StructField(\u0027b_thiele_innes_error\u0027, FloatType(), True), # Standard error of Thiele-Innes element B\n    StructField(\u0027f_thiele_innes\u0027, DoubleType(), True), # Thiele-Innes element F\n    StructField(\u0027f_thiele_innes_error\u0027, FloatType(), True), # Standard error of Thiele-Innes element F\n    StructField(\u0027g_thiele_innes\u0027, DoubleType(), True), # Thiele-Innes element G\n    StructField(\u0027g_thiele_innes_error\u0027, FloatType(), True), # Standard error of Thiele-Innes element G\n    StructField(\u0027c_thiele_innes\u0027, DoubleType(), True), # C element of Thiele-Innes \n    StructField(\u0027c_thiele_innes_error\u0027, FloatType(), True), # Standard error of C element of Thiele-Innes \n    StructField(\u0027h_thiele_innes\u0027, DoubleType(), True), # H element of Thiele-Innes \n    StructField(\u0027h_thiele_innes_error\u0027, FloatType(), True), # Standard error of H element of Thiele-Innes \n    StructField(\u0027period\u0027, DoubleType(), True), # Orbital Period\n    StructField(\u0027period_error\u0027, FloatType(), True), # Standard error of Orbital Period\n    StructField(\u0027t_periastron\u0027, DoubleType(), True), # Periastron epoch\n    StructField(\u0027t_periastron_error\u0027, FloatType(), True), # Standard error of Periastron epoch\n    StructField(\u0027eccentricity\u0027, DoubleType(), True), # eccentricity\n    StructField(\u0027eccentricity_error\u0027, FloatType(), True), # Standard error of eccentricity\n    StructField(\u0027center_of_mass_velocity\u0027, DoubleType(), True), # The velocity of the center of mass\n    StructField(\u0027center_of_mass_velocity_error\u0027, FloatType(), True), # Standard error of The velocity of the center of mass\n    StructField(\u0027semi_amplitude_primary\u0027, DoubleType(), True), # Semi-amplitude of the center of mass\n    StructField(\u0027semi_amplitude_primary_error\u0027, FloatType(), True), # Standard error of Semi-amplitude of the center of mass\n    StructField(\u0027semi_amplitude_secondary\u0027, DoubleType(), True), # The semiamplitude of the radial velocity curve for second component\n    StructField(\u0027semi_amplitude_secondary_error\u0027, FloatType(), True), # Standard error of The semiamplitude of the radial velocity curve for second component\n    StructField(\u0027mass_ratio\u0027, DoubleType(), True), # Mass ratio\n    StructField(\u0027mass_ratio_error\u0027, FloatType(), True), # Standard error of Mass ratio\n    StructField(\u0027fill_factor_primary\u0027, DoubleType(), True), # Fill factor of primary\n    StructField(\u0027fill_factor_primary_error\u0027, FloatType(), True), # Standard error of Fill factor of primary\n    StructField(\u0027fill_factor_secondary\u0027, DoubleType(), True), # Fill factor of secondary\n    StructField(\u0027fill_factor_secondary_error\u0027, FloatType(), True), # Standard error of Fill factor of secondary\n    StructField(\u0027inclination\u0027, DoubleType(), True), # Orbital inclination\n    StructField(\u0027inclination_error\u0027, FloatType(), True), # Standard error of Orbital inclination\n    StructField(\u0027arg_periastron\u0027, DoubleType(), True), # Argument of periastron\n    StructField(\u0027arg_periastron_error\u0027, FloatType(), True), # Standard error of Argument of periastron\n    StructField(\u0027temperature_ratio\u0027, DoubleType(), True), # Ratio of the effective temperatures\n    StructField(\u0027temperature_ratio_error\u0027, DoubleType(), True), # Standard error of the ratio of the effective temperatures\n    StructField(\u0027temperature_ratio_definition\u0027, ByteType(), True), # Code defining which fitting scenario did apply to the effective temperature\n    StructField(\u0027astrometric_n_obs_al\u0027, IntegerType(), True), # Total astrometric CCD observations in AL considered\n    StructField(\u0027astrometric_n_good_obs_al\u0027, IntegerType(), True), # Total astrometric CCD observations in AL actually used\n    StructField(\u0027rv_n_obs_primary\u0027, IntegerType(), True), # Total number of radial velocities considered for the primary\n    StructField(\u0027rv_n_good_obs_primary\u0027, IntegerType(), True), # Total number of radial velocities actually used for the primary\n    StructField(\u0027rv_n_obs_secondary\u0027, IntegerType(), True), # Total number of radial velocities considered for the secondary in the case of SB2\n    StructField(\u0027rv_n_good_obs_secondary\u0027, IntegerType(), True), # Total number of radial velocities actually used for the secondary in the case of SB2\n    StructField(\u0027phot_g_n_obs\u0027, IntegerType(), True), # Total number of G photometry measurements considered\n    StructField(\u0027phot_g_n_good_obs\u0027, IntegerType(), True), # Total number of G photometry measurements actually used\n    StructField(\u0027bit_index\u0027, LongType(), True), # boolean mask for the fields above in the corrVec matrix \n    StructField(\u0027corr_vec\u0027, ArrayType(FloatType()), True), # Vector form of the upper triangle of the correlation matrix (column-major ordered)\n    StructField(\u0027obj_func\u0027, FloatType(), True), # value of the objective function at the solution\n    StructField(\u0027goodness_of_fit\u0027, FloatType(), True), # goodness of fit in the Hipparcos sense\n    StructField(\u0027efficiency\u0027, FloatType(), True), # Efficiency of the solution\n    StructField(\u0027significance\u0027, FloatType(), True), # The significance of the solution (i.e. how worth keeping a model is)\n    StructField(\u0027flags\u0027, LongType(), True), # Quality flag for the achieved NSS solution\n    StructField(\u0027conf_spectro_period\u0027, FloatType(), True), # The probability of the period for not being due to (gaussian white) noise. Relevant for SB1, SB1C, SB2 and SB2C models. To be ignored otherwise.\n    StructField(\u0027r_pole_sum\u0027, DoubleType(), True), # Sum of the polar radii of primary and secondary (in units of the semi-major axis)\n    StructField(\u0027r_l1_point_sum\u0027, DoubleType(), True), # L1-pointing radii of primary and secondary (in units of the semi-major axis)\n    StructField(\u0027r_spher_sum\u0027, DoubleType(), True), # Sum of the radii of sphere having the same volume as the primary and secondary (in units of the semi-major axis\n    StructField(\u0027ecl_time_primary\u0027, DoubleType(), True), # Time of mid-eclipse of the primary by the secondary\n    StructField(\u0027ecl_time_secondary\u0027, DoubleType(), True), # Time of mid-eclipse of the secondary by the primary\n    StructField(\u0027ecl_dur_primary\u0027, DoubleType(), True), # Duration of primary eclipse assuming spherical components\n    StructField(\u0027ecl_dur_secondary\u0027, DoubleType(), True), # Duration of secondary eclipse assuming spherical components\n    StructField(\u0027g_luminosity_ratio\u0027, DoubleType(), True), # Ratio of the G-band luminosity of the secondary over the primary\n    StructField(\u0027input_period_error\u0027, FloatType(), True), # Standard error of the period taken from VariEclipsingBinary.frequencyError\n    StructField(\u0027g_rank\u0027, DoubleType(), True), # Rank of the G-band solution\n    StructField(\u0027astrometric_jitter\u0027, DoubleType(), True), # Uncorrelated astrometric jitter term\n])\nnss_vim_fl_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source Identifier\n    StructField(\u0027nss_solution_type\u0027, StringType(), True), # NSS model adopted\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right ascension\n    StructField(\u0027ra_error\u0027, FloatType(), True), # Standard error of right ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027dec_error\u0027, FloatType(), True), # Standard error of declination\n    StructField(\u0027parallax\u0027, DoubleType(), True), # Parallax\n    StructField(\u0027parallax_error\u0027, FloatType(), True), # Standard error of parallax\n    StructField(\u0027pmra\u0027, DoubleType(), True), # Proper motion in right ascension direction\n    StructField(\u0027pmra_error\u0027, FloatType(), True), # Standard error of proper motion in right ascension direction\n    StructField(\u0027pmdec\u0027, DoubleType(), True), # Proper motion in declination direction\n    StructField(\u0027pmdec_error\u0027, FloatType(), True), # Standard error of proper motion in declination direction\n    StructField(\u0027ref_flux_g\u0027, FloatType(), True), # Reference flux in the G band\n    StructField(\u0027vim_d_ra\u0027, DoubleType(), True), # VIM coordinate in RA\n    StructField(\u0027vim_d_ra_error\u0027, FloatType(), True), # Standard error of VIM coordinate in RA\n    StructField(\u0027vim_d_dec\u0027, DoubleType(), True), # VIM coordinate in DEC\n    StructField(\u0027vim_d_dec_error\u0027, FloatType(), True), # Standard error of VIM coordinate in DEC\n    StructField(\u0027astrometric_n_obs_al\u0027, IntegerType(), True), # Total astrometric CCD observations in AL considered\n    StructField(\u0027astrometric_n_good_obs_al\u0027, IntegerType(), True), # Total astrometric CCD observations in AL actually used\n    StructField(\u0027bit_index\u0027, LongType(), True), # Boolean mask for the fields above in the corrVec matrix \n    StructField(\u0027corr_vec\u0027, ArrayType(FloatType()), True), # Vector form of the upper triangle of the correlation matrix\n    StructField(\u0027obj_func\u0027, FloatType(), True), # Value of the objective function at the solution\n    StructField(\u0027goodness_of_fit\u0027, FloatType(), True), # Goodness of fit in the Hipparcos sense\n    StructField(\u0027efficiency\u0027, FloatType(), True), # Efficiency of the solution\n    StructField(\u0027significance\u0027, FloatType(), True), # The significance of the solution (i.e. how worth keeping a model is)\n    StructField(\u0027flags\u0027, LongType(), True), # Quality flag for the achieved NSS solution\n])\noa_neuron_information_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027som_id\u0027, LongType(), False), # Self-Organized Map identifier\n    StructField(\u0027neuron_id\u0027, LongType(), False), # Neuron identifier\n    StructField(\u0027neuron_row_index\u0027, ShortType(), True), # Row index of the neuron in the Self-Organised Map lattice\n    StructField(\u0027neuron_column_index\u0027, ShortType(), True), # Column index of the neuron in the Self-Organised Map lattice\n    StructField(\u0027hits\u0027, IntegerType(), True), # Number of sources populating the neuron\n    StructField(\u0027class_label\u0027, StringType(), True), # Astronomical class estimated for the neuron\n    StructField(\u0027centroid_id\u0027, LongType(), True), # Identifier of the Gaia source that minimizes the classification distance to the neuron\n    StructField(\u0027centroid_distance\u0027, FloatType(), True), # Squared Euclidean distance between the centroid XP spectrum and the neuron XP prototype\n    StructField(\u0027template_distance\u0027, FloatType(), True), # Squared Euclidean distance between the reference XP template and the neuron XP prototype\n    StructField(\u0027g_mag_mean\u0027, FloatType(), True), # Mean $G$ value for the sources that belong to the neuron\n    StructField(\u0027g_mag_std_dev\u0027, FloatType(), True), # Standard deviation of $G$ values for the sources that belong to the neuron\n    StructField(\u0027g_mag_min\u0027, FloatType(), True), # Minimum $G$ value for the sources that belong to the neuron\n    StructField(\u0027g_mag_max\u0027, FloatType(), True), # Maximum $G$ value for the sources that belong to the neuron\n    StructField(\u0027bp_mag_mean\u0027, FloatType(), True), # Mean $G_{\\rm BP}$ value for the sources that belong to the neuron\n    StructField(\u0027bp_mag_std_dev\u0027, FloatType(), True), # Standard deviation of $G_{\\rm BP}$ values for the sources that belong to the neuron \n    StructField(\u0027bp_mag_min\u0027, FloatType(), True), # Minimum value of $G_{\\rm BP}$ for the sources that belong to the neuron \n    StructField(\u0027bp_mag_max\u0027, FloatType(), True), # Maximum value of $G_{\\rm BP}$ for the sources that belong to the neuron \n    StructField(\u0027rp_mag_mean\u0027, FloatType(), True), # Mean $G_{\\rm RP}$ value for the sources that belong to the neuron neuron\n    StructField(\u0027rp_mag_std_dev\u0027, FloatType(), True), # Standard deviation of $G_{\\rm RP}$ values for the sources that belong to the neuron\n    StructField(\u0027rp_mag_min\u0027, FloatType(), True), # Minimum value of $G_{\\rm RP}$ for the sources that belong to the neuron  \n    StructField(\u0027rp_mag_max\u0027, FloatType(), True), # Maximum value of $G_{\\rm RP}$ for the sources that belong to the neuron\n    StructField(\u0027pm_ra_mean\u0027, FloatType(), True), # Mean value of the proper motion in right ascension for the sources that belong to the neuron\n    StructField(\u0027pm_ra_std_dev\u0027, FloatType(), True), # Standard deviation of the proper motion in right ascension for the sources that belong to the neuron\n    StructField(\u0027pm_ra_min\u0027, FloatType(), True), # Minimum value of the proper motion in right ascension for the sources that belong to the neuron\n    StructField(\u0027pm_ra_max\u0027, FloatType(), True), # Maximum value of the proper motion in right ascension for the sources that belong to the neuron\n    StructField(\u0027pm_dec_mean\u0027, FloatType(), True), # Mean value of the proper motion in declination for the sources that belong to the neuron\n    StructField(\u0027pm_dec_std_dev\u0027, FloatType(), True), # Standard deviation of the proper motion in declination for the sources that belong to the neuron\n    StructField(\u0027pm_dec_min\u0027, FloatType(), True), # Minimum value of the proper motion in declination for the sources that belong to the neuron\n    StructField(\u0027pm_dec_max\u0027, FloatType(), True), # Maximum value of the proper motion in declination for the sources that belong to the neuron\n    StructField(\u0027parallax_mean\u0027, FloatType(), True), # Mean parallax value for the sources that belong to the neuron\n    StructField(\u0027parallax_std_dev\u0027, FloatType(), True), # Standard deviation of the parallax values for the sources that belong to the neuron\n    StructField(\u0027parallax_min\u0027, FloatType(), True), # Minimum parallax value for the sources that belong to the neuron \n    StructField(\u0027parallax_max\u0027, FloatType(), True), # Maximum parallax value for the sources that belong to the neuron\n    StructField(\u0027gal_latitude_mean\u0027, FloatType(), True), # Mean galactic latitude for the sources that belong to the neuron\n    StructField(\u0027gal_latitude_std_dev\u0027, FloatType(), True), # Standard deviation of the galactic latitude values for the sources that belong to the neuron \n    StructField(\u0027gal_latitude_min\u0027, FloatType(), True), # Minimum galactic latitude for the sources that belong to the neuron\n    StructField(\u0027gal_latitude_max\u0027, FloatType(), True), # Maximum galactic latitude for the sources that belong to the neuron\n    StructField(\u0027intra_neuron_distance_mean\u0027, FloatType(), True), # Mean value of the squared Euclidean distance between each of the XP sources in the neuron and the neuron prototype\n    StructField(\u0027intra_neuron_distance_std_dev\u0027, FloatType(), True), # Standard deviation of the squared Euclidean distance between each of the XP sources in the neuron and the neuron prototype\n    StructField(\u0027intra_neuron_distance_min\u0027, FloatType(), True), # Minimum squared Euclidean distance between each of the XP sources in the neuron and the neuron prototype\n    StructField(\u0027intra_neuron_distance_max\u0027, FloatType(), True), # Maximum squared Euclidean distance between each of the XP sources in the neuron and the neuron prototype\n    StructField(\u0027inter_neuron_distance_mean\u0027, FloatType(), True), # Mean value of the squared Euclidean distance between the neuron XP prototype and the XP prototypes of its immediate neighbours\n    StructField(\u0027inter_neuron_distance_std_dev\u0027, FloatType(), True), # Standard deviation of the squared Euclidean distance between the neuron XP prototype and the XP prototypes of its immediate neighbours\n    StructField(\u0027inter_neuron_distance_min\u0027, FloatType(), True), # Minimum value of the squared Euclidean distance between the neuron XP prototype and the XP prototypes of its immediate neighbours\n    StructField(\u0027inter_neuron_distance_max\u0027, FloatType(), True), # Maximum value of the squared Euclidean distance between the neuron XP prototype and the XP prototypes of its immediate neighbours\n    StructField(\u0027template_name\u0027, StringType(), True), # Name of the template used to describe the neuron\n    StructField(\u0027distance_percentile25\u0027, FloatType(), True), # 25th percentile value for the intra-neuron distance distribution\n    StructField(\u0027distance_percentile50\u0027, FloatType(), True), # 50th percentile value for the intra-neuron distance distribution \n    StructField(\u0027distance_percentile68\u0027, FloatType(), True), # 68th percentile value for the intra-neuron distance distribution\n    StructField(\u0027distance_percentile75\u0027, FloatType(), True), # 75th percentile value for the intra-neuron distance distribution\n    StructField(\u0027distance_percentile95\u0027, FloatType(), True), # 95th percentile value for the intra-neuron distance distribution\n    StructField(\u0027distance_fwhm\u0027, FloatType(), True), # Full Width at Half Maximum value for the intra-neuron distance distribution\n    StructField(\u0027distance_skew\u0027, FloatType(), True), # Skewness value for the intra-neuron distance distribution \n    StructField(\u0027distance_kurtosis\u0027, FloatType(), True), # Kurtosis value for the intra-neuron distance distribution\n    StructField(\u0027distance_i_q_r\u0027, FloatType(), True), # Inter-Quartile Range value for the intra-neuron distance distribution\n    StructField(\u0027distance_fwhm_norm\u0027, FloatType(), True), # Normalized FWHM value for the intra-neuron distance distribution\n    StructField(\u0027quality_category\u0027, ShortType(), True), # Quality category assigned to the neuron, where 0 corresponds to the most homogeneous neurons and 6 to the most heterogeneous ones\n    StructField(\u0027bp_transits_mean\u0027, FloatType(), True), # Mean value of the number of  BP transits for the sources that belong to the neuron\n    StructField(\u0027bp_transits_std_dev\u0027, FloatType(), True), # Standard deviation of the number of BP transits for the sources that belong to the neuron\n    StructField(\u0027bp_transits_min\u0027, FloatType(), True), # Minimum value of the number of BP transits for the sources that belong to the neuron\n    StructField(\u0027bp_transits_max\u0027, FloatType(), True), # Maximum value of the number of BP transits for the sources that belong to the neuron\n    StructField(\u0027rp_transits_mean\u0027, FloatType(), True), # Mean value of the number of  RP transits for the sources that belong to the neuron\n    StructField(\u0027rp_transits_std_dev\u0027, FloatType(), True), # Standard deviation of the number of RP transits for the sources that belong to the neuron\n    StructField(\u0027rp_transits_min\u0027, FloatType(), True), # Minimum value of the number of RP transits for the sources that belong to the neuron\n    StructField(\u0027rp_transits_max\u0027, FloatType(), True), # Maximum value of the number of RP transits for the sources that belong to the neuron\n    StructField(\u0027ruwe_mean\u0027, FloatType(), True), # Mean value of the renormalised unit weight error for the sources that belong to the neuron\n    StructField(\u0027ruwe_std_dev\u0027, FloatType(), True), # Standard deviation of the renormalised unit weight error for the sources that belong to the neuron\n    StructField(\u0027ruwe_min\u0027, FloatType(), True), # Minimum value of the renormalised unit weight error for the sources that belong to the neuron\n    StructField(\u0027ruwe_max\u0027, FloatType(), True), # Maximum value of the renormalised unit weight error for the sources that belong to the neuron\n    StructField(\u0027bprp_mean_flux_excess_mean\u0027, FloatType(), True), # Mean value of the BP/RP flux excess for the sources that belong to the neuron\n    StructField(\u0027bprp_mean_flux_excess_std_dev\u0027, FloatType(), True), # Standard deviation of the BP/RP flux excess for the sources that belong to the neuron\n    StructField(\u0027bprp_mean_flux_excess_min\u0027, FloatType(), True), # Minimum value of the BP/RP flux excess for the sources that belong to the neuron\n    StructField(\u0027bprp_mean_flux_excess_max\u0027, FloatType(), True), # Maximum value of the BP/RP flux excess for the sources that belong to the neuron\n    StructField(\u0027bprp_colour_mean\u0027, FloatType(), True), # Mean value of the $G_{\\rm BP}-G_{\\rm RP}$ colour for the sources that belong to the neuron\n    StructField(\u0027bprp_colour_std_dev\u0027, FloatType(), True), # Standard deviation of the $G_{\\rm BP}-G_{\\rm RP}$ colour for the sources that belong to the neuron\n    StructField(\u0027bprp_colour_min\u0027, FloatType(), True), # Minimum value of the $G_{\\rm BP}-G_{\\rm RP}$ colour for the sources that belong to the neuron\n    StructField(\u0027bprp_colour_max\u0027, FloatType(), True), # Maximum value of the $G_{\\rm BP}-G_{\\rm RP}$ colour for the sources that belong to the neuron\n])\noa_neuron_xp_spectra_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027neuron_id\u0027, LongType(), False), # Neuron identifier\n    StructField(\u0027neuron_row_index\u0027, ShortType(), True), # Row index of the neuron in the Self-Organised Map lattice\n    StructField(\u0027neuron_column_index\u0027, ShortType(), True), # Column index of the neuron in the Self-Organised Map lattice\n    StructField(\u0027xp_spectrum_prototype_flux\u0027, FloatType(), True), # Normalised flux at wavelength {\\tt xpSpectrumPrototypeWavelength} for the preprocessed XP spectrum that best represents the neuron (prototype) \n    StructField(\u0027xp_spectrum_prototype_wavelength\u0027, FloatType(), True), # Wavelength associated with the XP spectrum flux values \n    StructField(\u0027xp_spectrum_template_flux\u0027, FloatType(), True), # Normalised flux at wavelength {\\tt xpSpectrumPrototypeWavelength} for the preprocessed XP spectrum corresponding to the neuron template  \n])\nqso_candidates_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027astrometric_selection_flag\u0027, BooleanType(), True), # Flag indicating if the source is part of the astrometric selection\n    StructField(\u0027gaia_crf_source\u0027, BooleanType(), True), # Flag indicative of whether the source was used define the Gaia-CRF3\n    StructField(\u0027vari_best_class_name\u0027, StringType(), True), # Name of best class, see table VariClassifierClassDefinition for details of the class\n    StructField(\u0027vari_best_class_score\u0027, FloatType(), True), # Score of the best class\n    StructField(\u0027fractional_variability_g\u0027, FloatType(), True), # Fractional variability in the G band\n    StructField(\u0027structure_function_index\u0027, FloatType(), True), # Index of the first-order structure function in the G band\n    StructField(\u0027structure_function_index_scatter\u0027, DoubleType(), True), # Standard deviation of the index of the structure function\n    StructField(\u0027qso_variability\u0027, FloatType(), True), # Quasar variability metric in the G band\n    StructField(\u0027non_qso_variability\u0027, FloatType(), True), # Non-quasar variability metric in the G band\n    StructField(\u0027vari_agn_membership_score\u0027, DoubleType(), True), # Membership score (0\u003dlowest,1\u003dhighest) of source to be of AGN type\n    StructField(\u0027classprob_dsc_combmod_quasar\u0027, FloatType(), True), # Probability from DSC-Combmod of being a quasar (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classprob_dsc_combmod_galaxy\u0027, FloatType(), True), # Probability from DSC-Combmod of being a galaxy (data used: BP/RP spectrum, photometry, astrometry)\n    StructField(\u0027classlabel_dsc\u0027, StringType(), True), # Class assigned by DSC based on the probability from its Combmod classifier\n    StructField(\u0027classlabel_dsc_joint\u0027, StringType(), True), # Class assigned by DSC based on the probability from its Specmod and Allosmod classifiers\n    StructField(\u0027classlabel_oa\u0027, StringType(), True), # Class assigned by OA the neuron that represents the source\n    StructField(\u0027redshift_qsoc\u0027, FloatType(), True), # Redshift from QSOC\n    StructField(\u0027redshift_qsoc_lower\u0027, FloatType(), True), # Redshift lower confidence level from QSOC\n    StructField(\u0027redshift_qsoc_upper\u0027, FloatType(), True), # Redshift upper confidence level from QSOC\n    StructField(\u0027ccfratio_qsoc\u0027, FloatType(), True), # Value of the cross-correlation function used to derive the redshift from QSOC, relative to the maximum value\n    StructField(\u0027zscore_qsoc\u0027, FloatType(), True), # Redshift zscore from QSOC\n    StructField(\u0027flags_qsoc\u0027, LongType(), True), # Processing flags for the analysis based on BP/RP Spectra from QSOC\n    StructField(\u0027n_transits\u0027, IntegerType(), True), # Number of transits used for the morphological analysis\n    StructField(\u0027intensity_quasar\u0027, DoubleType(), True), # Fitted intensity of the quasar at its center\n    StructField(\u0027intensity_quasar_error\u0027, DoubleType(), True), # Error on the fitted intensity of the quasar at its center\n    StructField(\u0027intensity_hostgalaxy\u0027, DoubleType(), True), # Fitted intensity of the host galaxy at the effective radius\n    StructField(\u0027intensity_hostgalaxy_error\u0027, DoubleType(), True), # Error on the fitted intensity of the host galaxy at effective radius\n    StructField(\u0027radius_hostgalaxy\u0027, DoubleType(), True), # Fitted effective radius of the host galaxy\n    StructField(\u0027radius_hostgalaxy_error\u0027, DoubleType(), True), # Error on the fitted effective radius of the host galaxy\n    StructField(\u0027sersic_index\u0027, FloatType(), True), # Fitted sersic Index\n    StructField(\u0027sersic_index_error\u0027, FloatType(), True), # Error on the fitted sersic Index\n    StructField(\u0027ellipticity_hostgalaxy\u0027, DoubleType(), True), # Fitted ellipticity of the host galaxy\n    StructField(\u0027ellipticity_hostgalaxy_error\u0027, DoubleType(), True), # Error on the fitted ellipticity of the host galaxy\n    StructField(\u0027posangle_hostgalaxy\u0027, DoubleType(), True), # Fitted position angle of the host galaxy\n    StructField(\u0027posangle_hostgalaxy_error\u0027, DoubleType(), True), # Error on the fitted position angle of the host galaxy\n    StructField(\u0027host_galaxy_detected\u0027, BooleanType(), True), # Flag indicating whether a host galaxy has been detected\n    StructField(\u0027l2_norm\u0027, DoubleType(), True), # L2 norm for the fitted Sersic profile\n    StructField(\u0027morph_params_corr_vec\u0027, ArrayType(DoubleType()), True), # Vector form of the upper triangle of the correlation matrix for the fitted morphological parameters\n    StructField(\u0027host_galaxy_flag\u0027, ByteType(), True), # Flag indicative of processing or scientific quality for the morphological parameters fitting\n    StructField(\u0027source_selection_flags\u0027, IntegerType(), True), # Bit indicative of whether the input data from a given module met the source list eligibility criteria for the source of interest\n])\nqso_catalogue_name_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027catalogue_id\u0027, ByteType(), False), # The unique identifier for the catalogue(s) used to select the sources in the morphological analysis\n])\nrvs_mean_spectrum_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right Ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027flux\u0027, ArrayType(FloatType()), True), # array of fluxes\n    StructField(\u0027flux_error\u0027, ArrayType(FloatType()), True), # array of uncertainties in flux\n    StructField(\u0027combined_transits\u0027, ShortType(), True), # number of combined transits\n    StructField(\u0027combined_ccds\u0027, ShortType(), True), # number of combined CCD spectra\n    StructField(\u0027deblended_ccds\u0027, ShortType(), True), # number of deblended CCD spectra \n])\nscience_alerts_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027transit_id\u0027, LongType(), False), # Alerting transit identifier\n    StructField(\u0027name\u0027, StringType(), True), # Name of alert\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n])\nsso_observation_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source identifier\n    StructField(\u0027denomination\u0027, StringType(), True), # standard MPC denomination of the asteroid\n    StructField(\u0027transit_id\u0027, LongType(), True), # Transit Identifier\n    StructField(\u0027observation_id\u0027, LongType(), True), # Observation Identifier\n    StructField(\u0027number_mp\u0027, LongType(), True), # Minor Planet number\n    StructField(\u0027epoch\u0027, DoubleType(), False), # Gaia-centric epoch TCB(Gaia)\n    StructField(\u0027epoch_err\u0027, DoubleType(), True), # Error in Gaiacentric epoch\n    StructField(\u0027epoch_utc\u0027, DoubleType(), True), # Gaia-centric TCB epoch converted to UTC\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right ascension of the source\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination of the source\n    StructField(\u0027ra_error_systematic\u0027, DoubleType(), True), # Standard error of right ascension - systematic\n    StructField(\u0027dec_error_systematic\u0027, DoubleType(), True), # Standard error of declination - systematic\n    StructField(\u0027ra_dec_correlation_systematic\u0027, DoubleType(), True), # Correlation of ra and dec errors - systematic\n    StructField(\u0027ra_error_random\u0027, DoubleType(), True), # Standard error of right ascension - random\n    StructField(\u0027dec_error_random\u0027, DoubleType(), True), # Standard error of declination - random\n    StructField(\u0027ra_dec_correlation_random\u0027, DoubleType(), True), # Correlation of ra and dec errors - random\n    StructField(\u0027g_mag\u0027, DoubleType(), True), # Calibrated G mag\n    StructField(\u0027g_flux\u0027, DoubleType(), True), # Average calibrated G flux for the transit\n    StructField(\u0027g_flux_error\u0027, DoubleType(), True), # Error on the G flux\n    StructField(\u0027x_gaia\u0027, DoubleType(), True), # Barycentric x position of Gaia\n    StructField(\u0027y_gaia\u0027, DoubleType(), True), # Barycentric y position of Gaia\n    StructField(\u0027z_gaia\u0027, DoubleType(), True), # Barycentric z position of Gaia\n    StructField(\u0027vx_gaia\u0027, DoubleType(), True), # Barycentric x velocity of Gaia\n    StructField(\u0027vy_gaia\u0027, DoubleType(), True), # Barycentric y velocity of Gaia\n    StructField(\u0027vz_gaia\u0027, DoubleType(), True), # Barycentric z velocity of Gaia\n    StructField(\u0027x_gaia_geocentric\u0027, DoubleType(), True), # Geocentric x position of Gaia\n    StructField(\u0027y_gaia_geocentric\u0027, DoubleType(), True), # Geocentric y position of Gaia\n    StructField(\u0027z_gaia_geocentric\u0027, DoubleType(), True), # Geocentric z position of Gaia\n    StructField(\u0027vx_gaia_geocentric\u0027, DoubleType(), True), # Geocentric x velocity of Gaia\n    StructField(\u0027vy_gaia_geocentric\u0027, DoubleType(), True), # Geocentric y velocity of Gaia\n    StructField(\u0027vz_gaia_geocentric\u0027, DoubleType(), True), # Geocentric z velocity of Gaia\n    StructField(\u0027position_angle_scan\u0027, DoubleType(), True), # Position angle of the scanning direction \n    StructField(\u0027astrometric_outcome_ccd\u0027, ArrayType(IntegerType()), True), # Result of processing the CCDs\n    StructField(\u0027astrometric_outcome_transit\u0027, IntegerType(), True), # Result of processing the transit\n])\nsso_reflectance_spectrum_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Source identifier\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027number_mp\u0027, LongType(), True), # Minor Planet number\n    StructField(\u0027denomination\u0027, StringType(), True), # standard MPC denomination of the asteroid\n    StructField(\u0027nb_samples\u0027, ShortType(), True), # Nb samples in spectrum\n    StructField(\u0027num_of_spectra\u0027, IntegerType(), True), # number of epoch spectra used to compute the average\n    StructField(\u0027reflectance_spectrum\u0027, FloatType(), True), # Reflectance spectrum\n    StructField(\u0027reflectance_spectrum_err\u0027, FloatType(), True), # Error in reflectance spectrum\n    StructField(\u0027wavelength\u0027, FloatType(), True), # Internally-calibrated wavelength of reflectance spectrum\n    StructField(\u0027reflectance_spectrum_flag\u0027, ByteType(), True), # Reflectance spectrum value flag\n])\nsso_source_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), False), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Source identifier\n    StructField(\u0027num_of_obs\u0027, IntegerType(), True), # number of observations\n    StructField(\u0027number_mp\u0027, LongType(), True), # Minor Planet number\n    StructField(\u0027denomination\u0027, StringType(), True), # standard MPC denomination of the asteroid\n    StructField(\u0027num_of_spectra\u0027, IntegerType(), True), # Number of epoch spectra used to compute the average\n])\ntotal_galactic_extinction_map_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027healpix_id\u0027, LongType(), False), # HEALPix identification\n    StructField(\u0027healpix_level\u0027, ByteType(), True), # HEALPix level used \n    StructField(\u0027a0\u0027, FloatType(), True), # Mean $A_0$ extinction parameter\n    StructField(\u0027a0_uncertainty\u0027, FloatType(), True), # Uncertainty for the mean $A_0$\n    StructField(\u0027a0_min\u0027, FloatType(), True), # Minimum $A_0$ value used for the HEALPix of interest\n    StructField(\u0027a0_max\u0027, FloatType(), True), # Maximum $A_0$ value used for the HEALPix of interest\n    StructField(\u0027num_tracers_used\u0027, IntegerType(), True), # Number of tracers used\n    StructField(\u0027optimum_hpx_flag\u0027, BooleanType(), True), # Flag to indicate whether a given HEALPix level is the optimum (True) or not (False)\n    StructField(\u0027status\u0027, ShortType(), True), # Exit status for TGE\n])\ntotal_galactic_extinction_map_opt_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027healpix_id\u0027, LongType(), False), # HEALPix identification\n    StructField(\u0027a0\u0027, FloatType(), True), # Median A$_0$ extinction parameter\n    StructField(\u0027a0_uncertainty\u0027, FloatType(), True), # Uncertainty for the mean A$_0$\n    StructField(\u0027num_tracers_used\u0027, IntegerType(), True), # Number of tracers used\n    StructField(\u0027status\u0027, ShortType(), True), # Exit status for TGE\n    StructField(\u0027optimum_hpx_level\u0027, ByteType(), True), # Number indicating which HEALPix level was chosen to populate this HEALPix\n])\nvari_agn_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027fractional_variability_g\u0027, FloatType(), True), # Fractional variability in the G band\n    StructField(\u0027structure_function_index\u0027, FloatType(), True), # Index of the first-order structure function in the G band\n    StructField(\u0027structure_function_index_scatter\u0027, FloatType(), True), # Standard deviation of the index of the structure function\n    StructField(\u0027qso_variability\u0027, FloatType(), True), # Quasar variability metric in the G band\n    StructField(\u0027non_qso_variability\u0027, FloatType(), True), # Non-quasar variability metric in the G band\n])\nvari_classifier_class_definition_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027classifier_name\u0027, StringType(), False), # Name of the classifier that is detailed in this entry\n    StructField(\u0027class_name\u0027, StringType(), False), # Name of the published class from this classifier\n    StructField(\u0027class_description\u0027, StringType(), True), # Description of the published class from this classifier\n])\nvari_classifier_definition_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027classifier_name\u0027, StringType(), False), # Name of the classifier that is detailed in this entry\n    StructField(\u0027classifier_description\u0027, StringType(), True), # Description of this classifier\n])\nvari_classifier_result_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027classifier_name\u0027, StringType(), False), # Classifier name used to produce this result, use for lookup in \\texttt{VariClassifierDefinition} table\n    StructField(\u0027best_class_name\u0027, StringType(), True), # Name of best class, see table \\texttt{VariClassifierClassDefinition} for details of the class\n    StructField(\u0027best_class_score\u0027, FloatType(), True), # Score of the best class\n])\nvari_compact_companion_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027period\u0027, DoubleType(), True), # Orbital period\n    StructField(\u0027period_error\u0027, FloatType(), True), # Orbital period error\n    StructField(\u0027t0_g\u0027, DoubleType(), True), # G-band reference time\n    StructField(\u0027t0_g_error\u0027, FloatType(), True), # G-band reference time error\n    StructField(\u0027t0_bp\u0027, DoubleType(), True), # BP-band reference time\n    StructField(\u0027t0_bp_error\u0027, FloatType(), True), # BP-band reference time error\n    StructField(\u0027t0_rp\u0027, DoubleType(), True), # RP-band reference time\n    StructField(\u0027t0_rp_error\u0027, FloatType(), True), # RP-band reference time error\n    StructField(\u0027harmonic_model_params_g\u0027, ArrayType(FloatType()), True), # G-band harmonics\n    StructField(\u0027harmonic_model_params_g_error\u0027, ArrayType(FloatType()), True), # G-band harmonics errors\n    StructField(\u0027harmonic_model_params_bp\u0027, ArrayType(FloatType()), True), # BP-band harmonics\n    StructField(\u0027harmonic_model_params_bp_error\u0027, ArrayType(FloatType()), True), # BP-band harmonics errors\n    StructField(\u0027harmonic_model_params_rp\u0027, ArrayType(FloatType()), True), # RP-band harmonics\n    StructField(\u0027harmonic_model_params_rp_error\u0027, ArrayType(FloatType()), True), # RP-band harmonics errors\n    StructField(\u0027model_mean_g\u0027, FloatType(), True), # Harmonics model mean G-band magnitude\n    StructField(\u0027model_mean_g_error\u0027, FloatType(), True), # Harmonics model mean G-band magnitude error\n    StructField(\u0027model_mean_bp\u0027, FloatType(), True), # Harmonics model mean BP-band magnitude\n    StructField(\u0027model_mean_bp_error\u0027, FloatType(), True), # Harmonics model mean BP-band magnitude error\n    StructField(\u0027model_mean_rp\u0027, FloatType(), True), # Harmonics model mean RP-band magnitude\n    StructField(\u0027model_mean_rp_error\u0027, FloatType(), True), # Harmonics model mean RP-band magnitude error\n    StructField(\u0027mod_min_mass_ratio\u0027, FloatType(), True), # Modified minimum mass ratio\n    StructField(\u0027mod_min_mass_ratio_one_sigma\u0027, FloatType(), True), # 15.9 percentile modified minimum mass ratio\n    StructField(\u0027mod_min_mass_ratio_three_sigma\u0027, FloatType(), True), # 0.135 percentile modified minimum mass ratio\n    StructField(\u0027alpha\u0027, FloatType(), True), # alpha ellipsoidal coefficient\n])\nvari_eclipsing_binary_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027global_ranking\u0027, FloatType(), True), # Number between 0 (worst) and 1 (best)\n    StructField(\u0027reference_time\u0027, DoubleType(), True), # Reference time used for the geometric model fit\n    StructField(\u0027frequency\u0027, DoubleType(), True), # Frequency of geometric model of the eclipsing binary light curve\n    StructField(\u0027frequency_error\u0027, FloatType(), True), # Uncertainty of \\texttt{frequency}\n    StructField(\u0027geom_model_reference_level\u0027, FloatType(), True), # Magnitude reference level of geometric model\n    StructField(\u0027geom_model_reference_level_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelReferenceLevel}\n    StructField(\u0027geom_model_gaussian1_phase\u0027, FloatType(), True), # Phase of the Gaussian 1 component\n    StructField(\u0027geom_model_gaussian1_phase_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelGaussian1Phase}\n    StructField(\u0027geom_model_gaussian1_sigma\u0027, FloatType(), True), # Standard deviation [phase] of Gaussian 1 component\n    StructField(\u0027geom_model_gaussian1_sigma_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelGaussian1Sigma}\n    StructField(\u0027geom_model_gaussian1_depth\u0027, FloatType(), True), # Magnitude depth of Gaussian 1 component\n    StructField(\u0027geom_model_gaussian1_depth_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelGaussian1Depth}\n    StructField(\u0027geom_model_gaussian2_phase\u0027, FloatType(), True), # Phase of Gaussian 2 component\n    StructField(\u0027geom_model_gaussian2_phase_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelGaussian2Phase}\n    StructField(\u0027geom_model_gaussian2_sigma\u0027, FloatType(), True), # Standard deviation [phase] of Gaussian 2 component\n    StructField(\u0027geom_model_gaussian2_sigma_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelGaussian2Sigma}\n    StructField(\u0027geom_model_gaussian2_depth\u0027, FloatType(), True), # Magnitude depth of Gaussian2 component\n    StructField(\u0027geom_model_gaussian2_depth_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelGaussian2Depth}\n    StructField(\u0027geom_model_cosine_half_period_amplitude\u0027, FloatType(), True), # Amplitude of the cosine component with half the period of the geometric model\n    StructField(\u0027geom_model_cosine_half_period_amplitude_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelCosineHalfPeriodAmplitude}\n    StructField(\u0027geom_model_cosine_half_period_phase\u0027, FloatType(), True), # Reference phase of the cosine component with half the period of the geometric model\n    StructField(\u0027geom_model_cosine_half_period_phase_error\u0027, FloatType(), True), # Uncertainty of \\texttt{geomModelCosineHalfPeriodPhase}\n    StructField(\u0027model_type\u0027, StringType(), True), # Type of geometrical model of the light curve\n    StructField(\u0027num_model_parameters\u0027, ByteType(), True), # Number of free parameters of the geometric model\n    StructField(\u0027reduced_chi2\u0027, FloatType(), True), # Reduced Chi2 of the geometrical model fit\n    StructField(\u0027derived_primary_ecl_phase\u0027, FloatType(), True), # Primary eclipse: phase at geometrically deepest point \n    StructField(\u0027derived_primary_ecl_phase_error\u0027, FloatType(), True), # Primary eclipse: uncertainty of \\texttt{derivedPrimaryEclPhase}\n    StructField(\u0027derived_primary_ecl_duration\u0027, FloatType(), True), # Primary eclipse: duration [phase fraction]\n    StructField(\u0027derived_primary_ecl_duration_error\u0027, FloatType(), True), # Primary eclipse: uncertainty of \\texttt{derivedPrimaryEclDuration}\n    StructField(\u0027derived_primary_ecl_depth\u0027, FloatType(), True), # Primary eclipse: depth\n    StructField(\u0027derived_primary_ecl_depth_error\u0027, FloatType(), True), # Primary eclipse: uncertainty of \\texttt{derivedPrimaryEclDepth}\n    StructField(\u0027derived_secondary_ecl_phase\u0027, FloatType(), True), # Secondary eclipse: phase at geometrically second deepest point \n    StructField(\u0027derived_secondary_ecl_phase_error\u0027, FloatType(), True), # Secondary eclipse: uncertainty of \\texttt{derivedSecondaryEclPhase}\n    StructField(\u0027derived_secondary_ecl_duration\u0027, FloatType(), True), # Secondary eclipse: duration [phase fraction]\n    StructField(\u0027derived_secondary_ecl_duration_error\u0027, FloatType(), True), # Secondary eclipse: uncertainty of \\texttt{derivedSecondaryEclDuration}\n    StructField(\u0027derived_secondary_ecl_depth\u0027, FloatType(), True), # Secondary eclipse: depth\n    StructField(\u0027derived_secondary_ecl_depth_error\u0027, FloatType(), True), # Secondary eclipse: uncertainty of \\texttt{derivedSecondaryEclDepth}\n])\nvari_epoch_radial_velocity_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027transit_id\u0027, LongType(), True), # Transit unique identifier\n    StructField(\u0027rv_obs_time\u0027, DoubleType(), True), # Observing time of the transit\n    StructField(\u0027radial_velocity\u0027, DoubleType(), True), # Barycentric radial velocity\n    StructField(\u0027radial_velocity_error\u0027, DoubleType(), True), # Barycentric radial velocity error\n    StructField(\u0027rejected_by_variability\u0027, BooleanType(), True), # Rejected by DPAC variability processing (or variability analysis)\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n])\nvari_long_period_variable_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027frequency\u0027, DoubleType(), True), # Frequency of the LPV\n    StructField(\u0027frequency_error\u0027, FloatType(), True), # Error on the frequency\n    StructField(\u0027amplitude\u0027, FloatType(), True), # Amplitude of the LPV variability\n    StructField(\u0027median_delta_wl_rp\u0027, FloatType(), True), # Median of the pseudo-wavelength separations between the two highest peaks in RP spectra \n    StructField(\u0027is_cstar\u0027, BooleanType(), True), # Flag to mark C-stars\n])\nvari_microlensing_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027paczynski0_g0\u0027, FloatType(), True), # G-band magnitude baseline (level 0)\n    StructField(\u0027paczynski0_g0_error\u0027, FloatType(), True), # Error of G-band magnitude baseline (level 0)\n    StructField(\u0027paczynski0_bp0\u0027, FloatType(), True), # BP-band magnitude baseline (level 0)\n    StructField(\u0027paczynski0_bp0_error\u0027, FloatType(), True), # Error of BP-band magnitude baseline (level 0)\n    StructField(\u0027paczynski0_rp0\u0027, FloatType(), True), # RP-band magnitude baseline (level 0)\n    StructField(\u0027paczynski0_rp0_error\u0027, FloatType(), True), # Error of RP-band magnitude baseline (level 0)\n    StructField(\u0027paczynski0_u0\u0027, DoubleType(), True), # Impact parameter (level 0)\n    StructField(\u0027paczynski0_u0_error\u0027, DoubleType(), True), # Error of the impact parameter (level 0)\n    StructField(\u0027paczynski0_te\u0027, FloatType(), True), # Event timescale (level 0)\n    StructField(\u0027paczynski0_te_error\u0027, FloatType(), True), # Error of event timescale (level 0)\n    StructField(\u0027paczynski0_tmax\u0027, DoubleType(), True), # Time of maximum amplification (level 0)\n    StructField(\u0027paczynski0_tmax_error\u0027, DoubleType(), True), # Error of time of maximum amplification (level 0)\n    StructField(\u0027paczynski0_chi2\u0027, FloatType(), True), # Chi square of level 0 Paczynski fit\n    StructField(\u0027paczynski0_chi2_dof\u0027, FloatType(), True), # Reduced chi square of level 0 Paczynski fit\n    StructField(\u0027paczynski1_g0\u0027, FloatType(), True), # G-band magnitude baseline (level 1)\n    StructField(\u0027paczynski1_g0_error\u0027, FloatType(), True), # Error of G-band magnitude baseline (level 1)\n    StructField(\u0027paczynski1_bp0\u0027, FloatType(), True), # BP-band magnitude baseline (level 1)\n    StructField(\u0027paczynski1_bp0_error\u0027, FloatType(), True), # Error of BP-band magnitude baseline (level 1)\n    StructField(\u0027paczynski1_rp0\u0027, FloatType(), True), # RP-band magnitude baseline (level 1)\n    StructField(\u0027paczynski1_rp0_error\u0027, FloatType(), True), # Error of RP-band magnitude baseline (level 1)\n    StructField(\u0027paczynski1_u0\u0027, DoubleType(), True), # Impact parameter (level 1)\n    StructField(\u0027paczynski1_u0_error\u0027, DoubleType(), True), # Error of the impact parameter (level 1)\n    StructField(\u0027paczynski1_te\u0027, FloatType(), True), # Event timescale (level 1)\n    StructField(\u0027paczynski1_te_error\u0027, FloatType(), True), # Error of event timescale (level 1)\n    StructField(\u0027paczynski1_tmax\u0027, DoubleType(), True), # Time of maximum amplification (level 1)\n    StructField(\u0027paczynski1_tmax_error\u0027, DoubleType(), True), # Error of time of maximum amplification (level 1)\n    StructField(\u0027paczynski1_fs_g\u0027, FloatType(), True), # Blending factor in G-band (level 1)\n    StructField(\u0027paczynski1_fs_g_error\u0027, FloatType(), True), # Error of blending factor in G-band (level 1)\n    StructField(\u0027paczynski1_fs_bp\u0027, FloatType(), True), # Blending factor in BP-band (level 1)\n    StructField(\u0027paczynski1_fs_bp_error\u0027, FloatType(), True), # Error of blending factor in BP-band (level 1)\n    StructField(\u0027paczynski1_fs_rp\u0027, FloatType(), True), # Blending factor in RP-band (level 1)\n    StructField(\u0027paczynski1_fs_rp_error\u0027, FloatType(), True), # Error of blending factor in RP-band (level 1)\n    StructField(\u0027paczynski1_chi2\u0027, FloatType(), True), # Chi square of level 1 Paczynski fit\n    StructField(\u0027paczynski1_chi2_dof\u0027, FloatType(), True), # Reduced chi square of level 1 Paczynski fit\n])\nvari_ms_oscillator_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027frequency1\u0027, DoubleType(), True), # Best frequency\n    StructField(\u0027fap_g_freq1\u0027, FloatType(), True), # False alarm probability corresponding to the best frequency\n    StructField(\u0027amplitude_g_freq1\u0027, FloatType(), True), # Half peak-to-peak amplitude in the G band of the best frequency\n    StructField(\u0027phase_g_freq1\u0027, FloatType(), True), # Phase of the oscillation in the G band corresponding to best frequency\n    StructField(\u0027num_harmonics\u0027, ByteType(), True), # Number of significant harmonics of the best frequency\n    StructField(\u0027amplitude_g_freq1_harm2\u0027, FloatType(), True), # Half peak-to-peak amplitude in the G band of the second harmonic of the best frequency\n    StructField(\u0027phase_g_freq1_harm2\u0027, FloatType(), True), # Phase of the oscillation in the G band corresponding to the second harmonic of the best frequency\n    StructField(\u0027amplitude_g_freq1_harm3\u0027, FloatType(), True), # Half peak-to-peak amplitude in the G band of the third harmonic of the best frequency\n    StructField(\u0027phase_g_freq1_harm3\u0027, FloatType(), True), # Phase of the oscillation in the G band corresponding to the third harmonic of the best frequency\n])\nvari_planetary_transit_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027transit_reference_time\u0027, DoubleType(), True), # Mid-transit reference time\n    StructField(\u0027transit_period\u0027, DoubleType(), True), # Most probable transit period\n    StructField(\u0027transit_depth\u0027, FloatType(), True), # Transit depth\n    StructField(\u0027transit_duration\u0027, FloatType(), True), # Transit duration\n    StructField(\u0027num_in_transit\u0027, ByteType(), True), # Number of in-transit observations\n])\nvari_rad_vel_statistics_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027num_selected_rv\u0027, ShortType(), True), # Total number of radial velocity transits selected for variability analysis\n    StructField(\u0027mean_obs_time_rv\u0027, DoubleType(), True), # Mean observation time for radial velocity transits\n    StructField(\u0027time_duration_rv\u0027, FloatType(), True), # Time duration of the time series for radial velocity transits\n    StructField(\u0027min_rv\u0027, FloatType(), True), # Minimum radial velocity\n    StructField(\u0027max_rv\u0027, FloatType(), True), # Maximum radial velocity\n    StructField(\u0027mean_rv\u0027, FloatType(), True), # Mean radial velocity\n    StructField(\u0027median_rv\u0027, FloatType(), True), # Median radial velocity\n    StructField(\u0027range_rv\u0027, FloatType(), True), # Difference between the highest and lowest radial velocity transits\n    StructField(\u0027std_dev_rv\u0027, FloatType(), True), # Square root of the unweighted radial velocity variance\n    StructField(\u0027skewness_rv\u0027, FloatType(), True), # Standardized unweighted radial velocity skewness\n    StructField(\u0027kurtosis_rv\u0027, FloatType(), True), # Standardized unweighted radial velocity kurtosis\n    StructField(\u0027mad_rv\u0027, FloatType(), True), # Median Absolute Deviation (MAD) for radial velocity transits\n    StructField(\u0027abbe_rv\u0027, FloatType(), True), # Abbe value for radial velocity transits\n    StructField(\u0027iqr_rv\u0027, FloatType(), True), # Interquartile range for radial velocity transits\n])\nvari_short_timescale_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier\n    StructField(\u0027amplitude_estimate\u0027, FloatType(), True), # Amplitude estimate of all per-CCD G-band photometry (95th quantile - 5th quantile)\n    StructField(\u0027number_of_fov_transits\u0027, ShortType(), True), # Number of FoV transits with more than 7 CCD measurements after time series cleaning\n    StructField(\u0027mean_of_fov_abbe_values\u0027, FloatType(), True), # Mean of per-FoV Abbe values derived from per-CCD G-band photometry\n    StructField(\u0027variogram_num_points\u0027, ByteType(), True), # Number of selected timescale(s) derived from the variogram\n    StructField(\u0027variogram_char_timescales\u0027, ArrayType(FloatType()), True), # Characteristic timescale(s) of variability\n    StructField(\u0027variogram_values\u0027, ArrayType(DoubleType()), True), # Variogram values associated with the {\\tt variogramCharTimescales}\n    StructField(\u0027frequency\u0027, DoubleType(), True), # Frequency search result for either G CCD, G FoV, BP or RP photometry\n])\nxp_continuous_mean_spectrum_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027bp_basis_function_id\u0027, ShortType(), True), # Identifier defining the set of basis functions for the BP spectrum representation\n    StructField(\u0027bp_degrees_of_freedom\u0027, ShortType(), True), # Degrees of freedom for the BP spectrum representation\n    StructField(\u0027bp_n_parameters\u0027, ByteType(), True), # Number of parameters for the BP spectrum representation\n    StructField(\u0027bp_n_measurements\u0027, ShortType(), True), # Number of measurements used for the BP spectrum generation\n    StructField(\u0027bp_n_rejected_measurements\u0027, ShortType(), True), # Number of rejected measurements in the BP spectrum generation\n    StructField(\u0027bp_standard_deviation\u0027, FloatType(), True), # Standard deviation for the BP spectrum representation\n    StructField(\u0027bp_chi_squared\u0027, FloatType(), True), # Chi squared for the BP spectrum representation\n    StructField(\u0027bp_coefficients\u0027, ArrayType(DoubleType()), True), # Basis function coefficients for the BP spectrum representation\n    StructField(\u0027bp_coefficient_errors\u0027, ArrayType(FloatType()), True), # Basis function coefficient errors for the BP spectrum representation\n    StructField(\u0027bp_coefficient_correlations\u0027, ArrayType(FloatType()), True), # Correlation matrix for BP coefficients\n    StructField(\u0027bp_n_relevant_bases\u0027, ShortType(), True), # Number of bases that are relevant for the representation of this mean BP spectrum\n    StructField(\u0027bp_relative_shrinking\u0027, FloatType(), True), # Measure of the relative shrinking of the coefficient vector when truncation is applied for the mean BP spectrum\n    StructField(\u0027rp_basis_function_id\u0027, ShortType(), True), # Identifier defining the set of basis functions for the BP spectrum representation\n    StructField(\u0027rp_degrees_of_freedom\u0027, ShortType(), True), # Degrees of freedom for the RP spectrum representation\n    StructField(\u0027rp_n_parameters\u0027, ByteType(), True), # Number of parameters for the RP spectrum representation\n    StructField(\u0027rp_n_measurements\u0027, ShortType(), True), # Number of measurements used for the RP spectrum generation\n    StructField(\u0027rp_n_rejected_measurements\u0027, ShortType(), True), # Number of rejected measurements in the RP spectrum generation\n    StructField(\u0027rp_standard_deviation\u0027, FloatType(), True), # Standard deviation for the RP spectrum representation\n    StructField(\u0027rp_chi_squared\u0027, FloatType(), True), # Chi squared for the RP spectrum representation\n    StructField(\u0027rp_coefficients\u0027, ArrayType(DoubleType()), True), # Basis function coefficients for the RP spectrum representation\n    StructField(\u0027rp_coefficient_errors\u0027, ArrayType(FloatType()), True), # Basis function coefficient errors for the RP spectrum representation\n    StructField(\u0027rp_coefficient_correlations\u0027, ArrayType(FloatType()), True), # Correlation matrix for RP coefficients\n    StructField(\u0027rp_n_relevant_bases\u0027, ShortType(), True), # Number of bases that are relevant for the representation of this mean RP spectrum\n    StructField(\u0027rp_relative_shrinking\u0027, FloatType(), True), # Measure of the relative shrinking of the coefficient vector when truncation is applied for the mean RP spectrum\n])\nxp_merge_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027wavelength\u0027, FloatType(), False), # Wavelength\n    StructField(\u0027bp_weight\u0027, FloatType(), True), # BP flux weight\n    StructField(\u0027rp_weight\u0027, FloatType(), True), # RP flux weight\n])\nxp_sampled_mean_spectrum_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right Ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027flux\u0027, ArrayType(FloatType()), True), # mean BP + RP combined spectrum flux\n    StructField(\u0027flux_error\u0027, ArrayType(FloatType()), True), # mean BP + RP combined spectrum flux error\n])\nxp_sampling_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027band\u0027, StringType(), True), # BP or RP photometric band\n    StructField(\u0027wavelength\u0027, FloatType(), False), # Wavelength\n    StructField(\u0027basis_function\u0027, ShortType(), True), # basis function index\n    StructField(\u0027sampling_coefficient\u0027, DoubleType(), True), # sampling matrix coefficient\n])\nxp_summary_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Unique source identifier (unique within a particular Data Release)\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027bp_n_relevant_bases\u0027, ShortType(), True), # Number of bases that are relevant for the representation of this mean BP spectrum\n    StructField(\u0027bp_relative_shrinking\u0027, FloatType(), True), # Measure of the relative shrinking of the coefficient vector when truncation is applied for the mean BP spectrum\n    StructField(\u0027bp_n_measurements\u0027, ShortType(), True), # Number of measurements used for the BP spectrum generation\n    StructField(\u0027bp_n_rejected_measurements\u0027, ShortType(), True), # Number of rejected measurements in the BP spectrum generation\n    StructField(\u0027bp_standard_deviation\u0027, FloatType(), True), # Standard deviation for the BP spectrum representation\n    StructField(\u0027bp_chi_squared\u0027, FloatType(), True), # Chi squared for the BP spectrum representation\n    StructField(\u0027bp_n_transits\u0027, ShortType(), True), # Number of transits contributing to the mean in BP\n    StructField(\u0027bp_n_contaminated_transits\u0027, ShortType(), True), # Number of contaminated transits in BP\n    StructField(\u0027bp_n_blended_transits\u0027, ShortType(), True), # Number of blended transits in BP\n    StructField(\u0027rp_n_relevant_bases\u0027, ShortType(), True), # Number of bases that are relevant for the representation of this mean RP spectrum\n    StructField(\u0027rp_relative_shrinking\u0027, FloatType(), True), # Measure of the relative shrinking of the coefficient vector when truncation is applied for the mean RP spectrum\n    StructField(\u0027rp_n_measurements\u0027, ShortType(), True), # Number of measurements used for the RP spectrum generation\n    StructField(\u0027rp_n_rejected_measurements\u0027, ShortType(), True), # Number of rejected measurements in the RP spectrum generation\n    StructField(\u0027rp_standard_deviation\u0027, FloatType(), True), # Standard deviation for the RP spectrum representation\n    StructField(\u0027rp_chi_squared\u0027, FloatType(), True), # Chi squared for the RP spectrum representation\n    StructField(\u0027rp_n_transits\u0027, ShortType(), True), # Number of transits contributing to the mean in RP\n    StructField(\u0027rp_n_contaminated_transits\u0027, ShortType(), True), # Number of contaminated transits in RP\n    StructField(\u0027rp_n_blended_transits\u0027, ShortType(), True), # Number of blended transits in RP\n])\ncommanded_scan_law_schema \u003d StructType([\n    StructField(\u0027jd_time\u0027, DoubleType(), True), # Time [Julian Date in TCB at Gaia - 2455197.5]\n    StructField(\u0027bjd_fov1\u0027, DoubleType(), True), # Time [Julian Date in TCB at barycentre for FOV1 - 2455197.5]\n    StructField(\u0027bjd_fov2\u0027, DoubleType(), True), # Time [Julian Date in TCB at barycentre for FOV2 - 2455197.5]\n    StructField(\u0027obmt_time\u0027, LongType(), False), # Time at Gaia (OBMT)\n    StructField(\u0027ra_fov1\u0027, FloatType(), True), # Right Ascension of FOV1 centre\n    StructField(\u0027dec_fov1\u0027, FloatType(), True), # Declination of FOV1 centre\n    StructField(\u0027heal_pix_fov1\u0027, IntegerType(), True), # FOV1 HEALPix level 12\n    StructField(\u0027scan_angle_fov1\u0027, FloatType(), True), # Scan position angle of FOV1\n    StructField(\u0027ra_fov2\u0027, FloatType(), True), # Right ascension of FOV2 centre\n    StructField(\u0027dec_fov2\u0027, FloatType(), True), # Declination of FOV2 centre\n    StructField(\u0027heal_pix_fov2\u0027, IntegerType(), True), # FOV2 HEALPix level 12\n    StructField(\u0027scan_angle_fov2\u0027, FloatType(), True), # Scan position angle of FOV2\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n])\nagn_cross_id_schema \u003d StructType([\n    StructField(\u0027source_name_in_catalogue\u0027, StringType(), True), # Identifier in the external catalogue\n    StructField(\u0027source_id\u0027, LongType(), False), # Gaia source identifier\n    StructField(\u0027catalogue_name\u0027, StringType(), True), # Name of the external catalogue\n])\nframe_rotator_source_schema \u003d StructType([\n    StructField(\u0027source_id\u0027, LongType(), False), # Gaia source identifier\n    StructField(\u0027considered_for_reference_frame_orientation\u0027, BooleanType(), True), # Considered for the reference frame orientation\n    StructField(\u0027used_for_reference_frame_orientation\u0027, BooleanType(), True), # Used for the reference frame orientation\n    StructField(\u0027considered_for_reference_frame_spin\u0027, BooleanType(), True), # Considered for the reference frame spin\n    StructField(\u0027used_for_reference_frame_spin\u0027, BooleanType(), True), # Used for the reference frame spin\n])\ngaia_crf3_xm_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Gaia source identifier\n    StructField(\u0027icrf3sx\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in ICRF3 S/X\n    StructField(\u0027icrf3k\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in ICRF3 K\n    StructField(\u0027icrf3xka\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in ICRF3 X/Ka\n    StructField(\u0027icrf_name\u0027, StringType(), True), # The ICRF name of the source\n    StructField(\u0027iers_name\u0027, StringType(), True), # The IERS name of the source\n    StructField(\u0027ocars\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in OCARS\n    StructField(\u0027ocars_name\u0027, StringType(), True), # The name for this source in OCARS\n    StructField(\u0027aw15\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in allWISE\n    StructField(\u0027aw15_name\u0027, StringType(), True), # The name for this source in allWISE\n    StructField(\u0027r90\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in the catalogue R90\n    StructField(\u0027r90_name\u0027, StringType(), True), # The name for this source in R90\n    StructField(\u0027m65\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in Milliquas v6.5\n    StructField(\u0027m65_name\u0027, StringType(), True), # The name for this source in Milliquas v6.5\n    StructField(\u0027c75\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in the catalogue C75\n    StructField(\u0027c75_name\u0027, StringType(), True), # The name for this source in C75\n    StructField(\u0027dr14q\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in the catalogue SDSS DR14Q\n    StructField(\u0027dr14q_name\u0027, StringType(), True), # The name for this source in SDSS DR14Q\n    StructField(\u0027lqac5\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in LQAC-5\n    StructField(\u0027lqac5_name\u0027, StringType(), True), # The name for this source in LQAC-5\n    StructField(\u0027lamost5\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in the LAMOST QSO catalogue\n    StructField(\u0027lamost5_name\u0027, StringType(), True), # The name for this source in the LAMOST QSO catalogue\n    StructField(\u0027lqrf\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in LQRF\n    StructField(\u0027lqrf_name\u0027, StringType(), True), # The name for this source in LQRF\n    StructField(\u0027cat2qz\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in 2QZ\n    StructField(\u0027cat2qz_name\u0027, StringType(), True), # The name for this source in 2QZ\n    StructField(\u0027bzcat5\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in Roma-BZCAT, v5\n    StructField(\u0027bzcat5_name\u0027, StringType(), True), # The name for this source in Roma-BZCAT, v5\n    StructField(\u0027cat2whspj\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in 2WHSPJ\n    StructField(\u0027cat2whspj_name\u0027, StringType(), True), # The name for this source in 2WHSPJ\n    StructField(\u0027alma19\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in the ALMA calibrator catalogue\n    StructField(\u0027alma19_name\u0027, StringType(), True), # The name for this source in the ALMA calibrator catalogue\n    StructField(\u0027guw\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in Gaia-unWISE\n    StructField(\u0027guw_name\u0027, StringType(), True), # The name for this source in Gaia-unWISE\n    StructField(\u0027b19\u0027, BooleanType(), True), # The flag describing if the Gaia-CRF3 source was found in the Gaia DR2 quasar and galaxy classification catalogue\n    StructField(\u0027b19_name\u0027, StringType(), True), # The name for this source in the Gaia DR2 quasar and galaxy classification catalogue\n])\ngaia_source_simulation_schema \u003d StructType([\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Long Identifier\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right Ascension\n    StructField(\u0027ra_error\u0027, FloatType(), True), # Right Ascension error\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027dec_error\u0027, FloatType(), True), # Declination error\n    StructField(\u0027parallax\u0027, FloatType(), True), # Parallax\n    StructField(\u0027parallax_error\u0027, FloatType(), True), # Parallax error\n    StructField(\u0027pmra\u0027, FloatType(), True), # Proper motion in RA\n    StructField(\u0027pmra_error\u0027, FloatType(), True), # Error in RA proper motion\n    StructField(\u0027pmdec\u0027, FloatType(), True), # Proper motion in dec\n    StructField(\u0027pmdec_error\u0027, FloatType(), True), # Error in dec. proper motion\n    StructField(\u0027n_obs_al\u0027, IntegerType(), True), # Number of AL observations\n    StructField(\u0027n_outliers_al\u0027, IntegerType(), True), # Number of outliers AL observations\n    StructField(\u0027phot_g_mean_flux\u0027, FloatType(), True), # Mean G flux\n    StructField(\u0027phot_g_mean_flux_error\u0027, FloatType(), True), # Mean G flux error\n    StructField(\u0027phot_g_mean_mag\u0027, FloatType(), True), # Mean G magnitude\n    StructField(\u0027phot_bp_mean_flux\u0027, FloatType(), True), # Mean BP flux\n    StructField(\u0027phot_bp_mean_flux_error\u0027, FloatType(), True), # Mean BP flux error\n    StructField(\u0027phot_bp_mean_mag\u0027, FloatType(), True), # Mean BP magnitude\n    StructField(\u0027phot_rp_mean_flux\u0027, FloatType(), True), # Mean RP flux\n    StructField(\u0027phot_rp_mean_flux_error\u0027, FloatType(), True), # Mean RP flux error\n    StructField(\u0027phot_rp_mean_mag\u0027, FloatType(), True), # Mean RP magnitude\n    StructField(\u0027phot_rvs_mean_flux\u0027, FloatType(), True), # Mean RVS flux\n    StructField(\u0027phot_rvs_mean_flux_error\u0027, FloatType(), True), # Mean RVS flux error\n    StructField(\u0027phot_rvs_mean_mag\u0027, FloatType(), True), # Mean RVS magnitude\n    StructField(\u0027radial_velocity\u0027, FloatType(), True), # Radial velocity\n    StructField(\u0027radial_velocity_error\u0027, FloatType(), True), # Radial velocity error\n    StructField(\u0027teff\u0027, FloatType(), True), # Effective temperature\n    StructField(\u0027teff_error\u0027, FloatType(), True), # Effective temperature error\n    StructField(\u0027vsini\u0027, FloatType(), True), # v sin i\n    StructField(\u0027vsini_error\u0027, FloatType(), True), # v sin i error\n    StructField(\u0027a0\u0027, FloatType(), True), # Extinction at 550 nm\n    StructField(\u0027a0_error\u0027, FloatType(), True), # Extinction at 550 nm error\n    StructField(\u0027feh\u0027, FloatType(), True), # Iron abundance\n    StructField(\u0027feh_error\u0027, FloatType(), True), # Iron abundance error\n    StructField(\u0027logg\u0027, FloatType(), True), # Surface gravity\n    StructField(\u0027logg_error\u0027, FloatType(), True), # Surface gravity Error\n])\ngaia_universe_model_schema \u003d StructType([\n    StructField(\u0027source_extended_id\u0027, StringType(), True), # Extended source identifier\n    StructField(\u0027source_id\u0027, LongType(), False), # Long Identifier\n    StructField(\u0027solution_id\u0027, LongType(), True), # Solution Identifier\n    StructField(\u0027ra\u0027, DoubleType(), True), # Right Ascension\n    StructField(\u0027dec\u0027, DoubleType(), True), # Declination\n    StructField(\u0027barycentric_distance\u0027, FloatType(), True), # Barycentric distance to the simulated source\n    StructField(\u0027pmra\u0027, FloatType(), True), # Proper motion along right ascension \n    StructField(\u0027pmdec\u0027, FloatType(), True), # Proper motion along declination\n    StructField(\u0027radial_velocity\u0027, FloatType(), True), # Radial Velocity \n    StructField(\u0027mag_g\u0027, FloatType(), True), # Mean Apparent G magnitude\n    StructField(\u0027mag_bp\u0027, FloatType(), True), # Mean Apparent BP magnitude\n    StructField(\u0027mag_rp\u0027, FloatType(), True), # Mean Apparent RP magnitude\n    StructField(\u0027mag_rvs\u0027, FloatType(), True), # Mean Apparent RVS magnitude\n    StructField(\u0027v_i\u0027, FloatType(), True), # (V-I) colour\n    StructField(\u0027mean_absolute_v\u0027, FloatType(), True), # Mean Absolute V magnitude\n    StructField(\u0027ag\u0027, FloatType(), True), # Absorption in G\n    StructField(\u0027av\u0027, FloatType(), True), # Absorption in V\n    StructField(\u0027teff\u0027, FloatType(), True), # Effective temperature\n    StructField(\u0027spectral_type\u0027, StringType(), True), # spectral class + luminosity class\n    StructField(\u0027logg\u0027, FloatType(), True), # Surface gravity\n    StructField(\u0027feh\u0027, FloatType(), True), # Metallicity\n    StructField(\u0027alphafe\u0027, FloatType(), True), # Alpha elements\n    StructField(\u0027mbol\u0027, FloatType(), True), # Absolute bolometric magnitude\n    StructField(\u0027age\u0027, FloatType(), True), # Age\n    StructField(\u0027mass\u0027, FloatType(), True), # Mass\n    StructField(\u0027radius\u0027, FloatType(), True), # Radius\n    StructField(\u0027vsini\u0027, FloatType(), True), # Rotational velocity\n    StructField(\u0027population\u0027, IntegerType(), True), # Population\n    StructField(\u0027has_photocenter_motion\u0027, BooleanType(), True), # Boolean describing if the photocenter has or not motion\n    StructField(\u0027nc\u0027, IntegerType(), True), # Number of components\n    StructField(\u0027nt\u0027, IntegerType(), True), # Total number of object\n    StructField(\u0027semimajor_axis\u0027, FloatType(), True), # Semi major axis \n    StructField(\u0027eccentricity\u0027, FloatType(), True), # Eccentricity\n    StructField(\u0027inclination\u0027, FloatType(), True), # Inclination\n    StructField(\u0027longitude_ascending_node\u0027, FloatType(), True), # Longitude of ascending node\n    StructField(\u0027orbit_period\u0027, FloatType(), True), # Period of the orbit\n    StructField(\u0027periastron_date\u0027, FloatType(), True), # Date of periastron\n    StructField(\u0027periastron_argument\u0027, FloatType(), True), # Periastron argument\n    StructField(\u0027variability_type\u0027, StringType(), True), # Variability type\n    StructField(\u0027variability_amplitude\u0027, FloatType(), True), # Amplitude of variability\n    StructField(\u0027variability_period\u0027, FloatType(), True), # Period of variability\n    StructField(\u0027variability_phase\u0027, FloatType(), True), # Phase of variability\n    StructField(\u0027r_env_r_star\u0027, FloatType(), True), # Envelope characterisic for Be stars\n])\n\n# base folder for all release products\nrelease_folder \u003d \u0027GDR3\u0027\n\n# dictionary of all tables: key is table name, value \u003d tuple(tuple of schema(s), subfolder containing parquet files)\ntable_dict \u003d {\n    ##\u0027vari_time_series_statistics\u0027,\n    ##\u0027alerts_mixedin_sourceids\u0027,\n    \u0027astrophysical_parameters\u0027 : \n        ([astrophysical_parameters_schema], release_folder + \u0027/GDR3_ASTROPHYSICAL_PARAMETERS\u0027),\n    \u0027astrophysical_parameters_supp\u0027 : \n        ([astrophysical_parameters_supp_schema], release_folder + \u0027/GDR3_ASTROPHYSICAL_PARAMETERS_SUPP\u0027),\n    \u0027epoch_photometry\u0027 : \n        ([epoch_photometry_schema], release_folder + \u0027/GDR3_EPOCH_PHOTOMETRY\u0027),\n    \u0027gaia_source\u0027 : \n        ([gaia_source_schema], release_folder + \u0027/GDR3_GAIASOURCE\u0027),\n    ##\u0027galaxy_candidates\u0027,\n    ##\u0027galaxy_catalogue_name\u0027,\n    #\u0027mcmc_samples_gsp_phot\u0027 : \n    #    ((mcmc_samples_gsp_phot_schema), release_folder + \u0027/GDR3_MCMC_SAMPLES_GSP_PHOT\u0027),\n    #\u0027mcmc_samples_msc\u0027 : \n    #    ((mcmc_samples_msc_schema), release_folder + \u0027/GDR3_MCMC_SAMPLES_MSC\u0027),\n    ##\u0027nss_acceleration_astro\u0027,\n    ##\u0027nss_non_linear_spectro\u0027,\n    ##\u0027nss_two_body_orbit\u0027,\n    ##\u0027nss_vim_fl\u0027,\n    #\u0027oa_neuron_information\u0027 : \n    #    ((oa_neuron_information_schema), release_folder + \u0027/GDR3_OA_NEURON_INFORMATION\u0027),\n    #\u0027oa_neuron_xp_spectra\u0027 : \n    #    ((oa_neuron_xp_spectra_schema), release_folder + \u0027/GDR3_OA_NEURON_XP_SPECTRA\u0027),\n    ##\u0027qso_candidates\u0027,\n    ##\u0027qso_catalogue_name\u0027,\n    \u0027rvs_mean_spectrum\u0027 : \n        ([rvs_mean_spectrum_schema], release_folder + \u0027/GDR3_RVS_MEAN_SPECTRUM\u0027),\n    ##\u0027science_alerts\u0027,\n    ##\u0027sso_observation\u0027,\n    ##\u0027sso_reflectance_spectrum\u0027,\n    ##\u0027sso_source\u0027,\n    #\u0027total_galactic_extinction_map\u0027 : \n    #    ([total_galactic_extinction_map_schema), release_folder + \u0027/GDR3_TOTAL_GALACTIC_EXTINCTION_MAP\u0027),\n    #\u0027total_galactic_extinction_map_opt\u0027 : \n    #    ([total_galactic_extinction_map_opt_schema), release_folder + \u0027/GDR3_TOTAL_GALACTIC_EXTINCTION_MAP_OPT\u0027),\n    ##\u0027vari_agn\u0027,\n    ##\u0027vari_classifier_class_definition\u0027,\n    ##\u0027vari_classifier_definition\u0027,\n    ##\u0027vari_classifier_result\u0027,\n    ##\u0027vari_compact_companion\u0027,\n    ##\u0027vari_eclipsing_binary\u0027,\n    ##\u0027vari_epoch_radial_velocity\u0027,\n    ##\u0027vari_long_period_variable\u0027,\n    ##\u0027vari_microlensing\u0027,\n    ##\u0027vari_ms_oscillator\u0027,\n    ##\u0027vari_planetary_transit\u0027,\n    ##\u0027vari_rad_vel_statistics\u0027,\n    ##\u0027vari_short_timescale\u0027,\n    \u0027xp_continuous_mean_spectrum\u0027 : \n        ([xp_continuous_mean_spectrum_schema], release_folder + \u0027/GDR3_XP_CONTINUOUS_MEAN_SPECTRUM\u0027),\n    \u0027xp_sampled_mean_spectrum\u0027 : \n        ([xp_sampled_mean_spectrum_schema], release_folder + \u0027/GDR3_XP_SAMPLED_MEAN_SPECTRUM\u0027),\n    \u0027xp_summary\u0027 : \n        ([xp_summary_schema], release_folder + \u0027/GDR3_XP_SUMMARY\u0027),\n    ##\u0027commanded_scan_law\u0027,\n    ##\u0027agn_cross_id\u0027,\n    ##\u0027frame_rotator_source\u0027,\n    ##\u0027gaia_crf3_xm\u0027,\n    ##\u0027gaia_source_simulation\u0027 : \n    ##    ([gaia_source_simulation_schema], release_folder + \u0027/GDR3_GAIA_SOURCE_SIMULATION\u0027),\n    ##\u0027gaia_universe_model\u0027 : \n    ##    ([gaia_universe_model_schema], release_folder + \u0027/GDR3_UNIVERSE_MODEL\u0027),\n}\n# ... small tables doubly commented out;\n# tables that should be ingested but that have not been ingested yet owing to ingest issues are singly commented; \n# TODO decide later what to include.\n\n\n\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 12:26:20.452",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1639345849502_181655821",
      "id": "20210521-084938_875368697",
      "dateCreated": "2021-12-12 21:50:49.502",
      "dateStarted": "2022-07-07 12:26:18.888",
      "dateFinished": "2022-07-07 12:26:18.990",
      "status": "FINISHED"
    },
    {
      "title": "TEST SETUP LIBRARY: FUNCTIONS",
      "text": "%pyspark\n\nfrom pyspark.sql.types import *\nfrom pyspark.sql import functions as f\nfrom pyspark.sql import *\n\n\n# number of buckets for our platform\nNUM_BUCKETS \u003d 2048\n\nspark \u003d SparkSession.builder.getOrCreate()\n\n# root data store path: TODO change this to the official one when established.\ndata_store \u003d \"file:////data/gaia/\"  # \"file:////user/nch/PARQUET/REPARTITIONED/\"\n\n# default key by which to bucket and sort: Gaia catalogue source UID \ndefault_key \u003d \"source_id\"\n\n# Save a dataframe to a set of bucketed parquet files, repartitioning beforehand and sorting (by default by source UID) within the buckets:\ndef saveToBinnedParquet(df, outputParquetPath, name, mode \u003d \"error\", buckets \u003d NUM_BUCKETS, bucket_and_sort_key \u003d default_key):\n    \u0027\u0027\u0027\n    Save a data frame to a set of bucketed parquet files, repartitioning beforehand and sorting\n    (by default on DPAC Gaia source UID) within the buckets.\n    \n    Parameters\n    ----------\n    df : DataFrame\n        (mandatory) the data frame to be written to the persistent file store\n    outputParquetPath : str\n        (mandatory) the absolute path name of the folder to contain the files\n    mode : str\n        (optional) the mode for the underlying DataFrame write method (default : error, i.e. no silent failures)\n    buckets : int\n        (optional) the number of buckets (if in doubt leave as the default)\n    bucket_and_sort_key : str\n        (optional) the bucketing and sorting key for the keyed/clustered data (default source_id; you must specify\n        an alternative if the data frame does not have this column present)\n    \u0027\u0027\u0027\n    df \u003d df.repartition(buckets, bucket_and_sort_key)\n    df.write.format(\"parquet\") \\\n            .mode(mode) \\\n            .bucketBy(buckets, bucket_and_sort_key) \\\n            .sortBy(bucket_and_sort_key) \\\n            .option(\"path\", outputParquetPath) \\\n            .saveAsTable(name)\n\ndef reattachParquetFileResourceToSparkContext(table_name, file_path, schema_structures, cluster_key \u003d default_key, sort_key \u003d default_key, buckets \u003d NUM_BUCKETS):\n\t\u0027\u0027\u0027\n\tCreates a Spark (in-memory) meta-record for the table resource specified for querying\n\tthrough the PySpark SQL API.\n\n\tDefault assumption is that the table contains the Gaia source_id attribute and that the files have\n\tbeen previously partitioned, bucketed and sorted on this field in parquet format\n\t- see function saveToBinnedParquet().  If the table name specified already exists in the\n\tcatalogue IT WILL BE REMOVED (but the underlying data, assumed external, will remain).\n\n\tParameters\n\t----------\n\ttable_name : str\n\t\tThe table name to be used as the identifier in SQL queries etc.\n\tfile_path : str\n\t\tThe full disk file system path name to the folder containing the parquet file set.\n\tschema_structures : StructType\n\t\tOne or more schema structures expressed as a StructType object containing a list of\n\t\tStructField(field_name : str, type : data_type : DataType(), nullable : boolean)\n\tcluster_key : str (optional)\n\t    The clustering key (\u003d bucketing and sort key) in the partitioned data set on disk. \n\t    Default is Gaia catalogue source UID (\u003d source_id).\n\tsort_key : str (optional)\n\t    The sorting key within buckets in the partitioned data set on disk. \n\t    Default is Gaia catalogue source UID (\u003d source_id).\n\tbuckets : int (optional)\n\t    Number of buckets into which the data is organised.\n\t\u0027\u0027\u0027\n\n\t# put in the columns and their data types ...\n\ttable_create_statement \u003d \"CREATE TABLE `\" + table_name + \"` (\"\n\tfor schema_structure in schema_structures:\n\t\tfor field in schema_structure:\n\t\t\ttable_create_statement +\u003d \"`\" + field.name + \"` \" + field.dataType.simpleString() + \",\"\n\t# ... zapping that extraneous comma at the end\n\ttable_create_statement \u003d table_create_statement[:-1]\n\n\t# append the organisational details\n\ttable_create_statement +\u003d \") USING parquet OPTIONS (path \u0027\" + file_path + \"\u0027) \"\n\ttable_create_statement +\u003d \"CLUSTERED BY (%s) SORTED BY (%s) INTO %d\" % (\n\t\tcluster_key, sort_key, buckets) + \" BUCKETS\"\n\n\n\t# scrub any existing record - N.B. tables defined in this way are EXTERNAL, so this statement will not scrub\n\t# the underlying file data set. Also if the table doesn\u0027t exist, this will silently do nothing (no exception\n\t# will be thrown).\n\tspark.sql(\"DROP TABLE IF EXISTS \" + table_name)\n\n\t# create the table resource\n\tspark.sql(table_create_statement)\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 12:11:34.345",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "editorHide": true,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657195783233_1176793925",
      "id": "paragraph_1657195783233_1176793925",
      "dateCreated": "2022-07-07 12:09:43.233",
      "dateStarted": "2022-07-07 12:11:30.377",
      "dateFinished": "2022-07-07 12:11:30.387",
      "status": "FINISHED"
    },
    {
      "title": "TEST SETUP LIBRARY: CODE",
      "text": "%pyspark\n\ndef tablesExist(expected_tables):\n\tactual_tables \u003d [i.name for i in spark.catalog.listTables()]\n\tcheck \u003d  all(item in actual_tables for item in expected_tables)\n\treturn check\n\n# check DR3\nif not tablesExist(table_dict.keys()):\n\n\t# ... similarly for Gaia DR3\n\tdatabase \u003d \"gaiadr3\"\n\tspark.sql(\"create database if not exists \" + database)\n\tspark.sql(\"use \" + database)\n\n\t# create the tables against their corresponding file sets and schema            \n\tfor table_key in table_dict.keys():\n\t\tfolder_path \u003d table_dict[table_key][1]\n\t\tschemas \u003d table_dict[table_key][0]\n\t\treattachParquetFileResourceToSparkContext(table_key, data_store + folder_path, schemas)\n\n# finally always leave the PySpark SQL context in the most recent Gaia DR3 database\nspark.sql(\"use gaiadr3\")\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 12:26:27.800",
      "progress": 0,
      "config": {
        "lineNumbers": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "DataFrame[]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d3"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657195890376_1006837222",
      "id": "paragraph_1657195890376_1006837222",
      "dateCreated": "2022-07-07 12:11:30.376",
      "dateStarted": "2022-07-07 12:26:27.806",
      "dateFinished": "2022-07-07 12:26:29.696",
      "status": "FINISHED"
    },
    {
      "title": "CHECK COUNTS",
      "text": "%pyspark\n\nspark.sql(\u0027select count(*) from gaiadr3.gaia_source\u0027).show()\n\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 12:35:24.529",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------+\n|  count(1)|\n+----------+\n|1811709771|\n+----------+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d15"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657196229170_1822930002",
      "id": "paragraph_1657196229170_1822930002",
      "dateCreated": "2022-07-07 12:17:09.170",
      "dateStarted": "2022-07-07 12:35:24.533",
      "dateFinished": "2022-07-07 12:35:39.528",
      "status": "FINISHED"
    },
    {
      "title": "CHECK ROWS",
      "text": "%pyspark\n\nspark.sql(\u0027select * from gaiadr3.xp_continuous_mean_spectrum\u0027).show()\n\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 12:43:44.069",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "datan|        source_id|        solution_id|bp_basis_function_id|bp_degrees_of_freedom|bp_n_parameters|bp_n_measurements|bp_n_rejected_measurements|bp_standard_deviation|bp_chi_squared|     bp_coefficients|bp_coefficient_errors|bp_coefficient_correlations|bp_n_relevant_bases|bp_relative_shrinking|rp_basis_function_id|rp_degrees_of_freedom|rp_n_parameters|rp_n_measurements|rp_n_rejected_measurements|rp_standard_deviation|rp_chi_squared|     rp_coefficients|rp_coefficient_errors|rp_coefficient_correlations|rp_n_relevant_bases|rp_relative_shrinking|\nn|  163689793862144|4545469030156206080|                  56|                 1094|             55|             1149|                        17|            1.0169559|      1131.414|[7099.53538122111...| [5.1235557, 4.497...|       [0.20795903, -0.1...|                  7|           0.99999565|                  57|                 1384|             55|             1439|                        15|            1.0590237|     1552.1993|[6880.09852952244...| [2.8116393, 2.658...|       [-0.095165856, 0....|                  4|           0.99999684|\n| 1367624961835904|4545469030156206081|                  56|                  927|             55|              982|                         8|            1.0530425|     1027.9489|[518.627437003866...| [1.186524, 1.0032...|       [0.23424433, -0.1...|                  4|            0.9999061|                  57|                 1336|             55|             1391|                         2|            1.0366567|     1435.7422|[618.150454321164...| [0.8807, 0.807908...|       [-0.05074797, 0.1...|                  6|           0.99996567|\n| 1868345133681792|4545469030156206081|                  56|                  872|             55|              927|                         4|            1.0511264|      963.4438|[51.8776395603557...| [0.5048551, 0.473...|       [0.101914935, -0....|                  5|           0.99747235|                  57|                 1204|             55|             1259|                         8|            1.0839863|     1414.7317|[45.6233153298558...| [0.41265148, 0.39...|       [-0.061985653, 0....|                  4|            0.9977387|\n| 2109619216864256|4545469030156206081|                  56|                  923|             55|              978|                         8|            1.0606263|     1038.3087|[5223.18513953144...| [5.8422213, 4.763...|       [0.29675213, -0.1...|                  7|            0.9999896|                  57|                 1327|             55|             1382|                         9|            1.0173215|     1373.3694|[6532.64612536947...| [2.6819577, 2.484...|       [-0.061508358, 0....|                  8|            0.9999974|\n| 3064923022666368|4545469030156206081|                  56|                 1103|             55|             1158|                         8|            1.0353364|     1182.3293|[85.6679636565409...| [0.52790195, 0.45...|       [0.2574873, -0.06...|                  3|           0.99937475|                  57|                 1375|             55|             1430|                        21|            1.0187262|     1426.9794|[269.300707466412...| [0.60273117, 0.53...|       [0.13350734, 0.21...|                 13|            0.9999225|\n| 4084793071976320|4545469030156206080|                  56|                  922|             55|              977|                         6|            1.0586277|     1033.2787|[1498.27420782058...| [2.0930557, 1.747...|       [0.3351536, -0.07...|                  6|            0.9999817|                  57|                 1212|             55|             1267|                         7|             1.070279|     1388.3427|[3017.04847651760...| [2.0092216, 1.788...|       [0.07116118, 0.21...|                  8|            0.9999931|\n| 4843005123146496|4545469030156206080|                  56|                  874|             55|              929|                         4|            1.0299591|       927.153|[90.9956124177348...| [0.6302726, 0.541...|       [0.2542283, -0.09...|                  4|            0.9985925|                  57|                 1154|             55|             1209|                        10|            1.0558995|     1286.6221|[183.799720968456...| [0.59081346, 0.54...|       [0.042463448, 0.1...|                  3|            0.9996967|\n| 5109331750667392|4545469030156206080|                  56|                  867|             55|              922|                         9|            1.0498012|     955.50555|[3242.05846598922...| [3.6700099, 3.047...|       [0.12173294, -0.2...|                  9|           0.99999046|                  57|                 1267|             55|             1322|                         7|            1.0558417|     1412.4537|[3384.86487087005...| [2.0872824, 1.892...|       [-0.035929937, 0....|                  4|            0.9999895|\n| 6846830705198720|4545469030156206081|                  56|                  983|             55|             1038|                        15|            1.0543034|     1092.6592|[58.8304260734425...| [0.5393924, 0.480...|       [0.13594434, -0.0...|                  4|            0.9978013|                  57|                 1207|             55|             1262|                        12|            1.0171733|     1248.8124|[280.139367652073...| [0.6679417, 0.590...|       [0.28409177, 0.18...|                 52|           0.99999976|\n| 7141675915657984|4545469030156206081|                  56|                  860|             55|              915|                        12|            1.2001268|     1238.6616|[159.761235271828...| [1.7037405, 1.618...|       [0.601135, 0.3123...|                  5|            0.9974696|                  57|                 1252|             55|             1307|                        22|            1.0333469|      1336.893|[784.633112245283...| [2.6996822, 2.727...|       [0.14476712, -0.0...|                  3|            0.9999142|\n| 7260972927032064|4545469030156206080|                  56|                  985|             55|             1040|                         2|            1.0438409|     1073.2598|[14806.7350490599...| [10.198448, 8.640...|       [0.28660578, -0.1...|                  6|           0.99999493|                  57|                 1148|             55|             1203|                        15|            1.0979433|     1383.8904|[16120.2319852493...| [5.213981, 5.0469...|       [-0.09025063, 0.0...|                 12|            0.9999989|\n| 8936800446367744|4545469030156206081|                  56|                  931|             55|              986|                         5|            1.0449446|     1016.5676|[151.236898738789...| [0.6994017, 0.608...|       [0.1271135, -0.13...|                  3|             0.999701|                  57|                 1161|             55|             1216|                         7|            1.0643623|     1315.2587|[176.202809433568...| [0.5747464, 0.540...|       [-0.0063974345, 0...|                  2|            0.9998087|\n|11292813346593408|4545469030156206080|                  56|                 1046|             55|             1101|                         1|             1.062598|     1181.0538|[3813.81221265904...| [3.8740668, 3.187...|       [0.28032604, -0.1...|                  6|            0.9999936|                  57|                 1324|             55|             1379|                         8|            1.0481249|      1454.501|[4344.45296356062...| [2.2725594, 2.099...|       [-0.063568346, 0....|                 51|           0.99999994|\n|11873458565701888|4545469030156206081|                  56|                 1094|             55|             1149|                         6|           0.99195975|     1076.4786|[181.024581505291...| [0.66008043, 0.55...|       [0.23037814, -0.1...|                 53|           0.99999934|                  57|                 2774|             55|             2829|                        14|            1.0223699|     2899.4958|[291.842500334670...| [0.43405825, 0.39...|       [0.025844159, 0.1...|                  6|           0.99996847|\n|12164794786923648|4545469030156206081|                  56|                  921|             55|              976|                         6|            1.0515878|    1018.47577|[113.053303839255...| [0.62924266, 0.53...|       [0.24838895, -0.1...|                  4|           0.99966335|                  57|                 1143|             55|             1198|                        12|            1.0336369|     1221.1873|[214.407710210193...| [0.60040534, 0.55...|       [0.041941617, 0.1...|                  4|             0.999817|\n|13781003864950656|4545469030156206081|                  56|                  908|             55|              963|                        26|            1.0282675|      960.0594|[62.7612074616747...| [0.5222502, 0.476...|       [0.25420797, 0.01...|                  4|           0.99875665|                  57|                 1498|             55|             1553|                        13|            1.0402851|     1621.1251|[394.126238296215...| [0.71821016, 0.64...|       [0.2624551, 0.156...|                 53|           0.99999887|\n|14556674958579200|4545469030156206081|                  56|                  994|             55|             1049|                         4|            1.0314713|     1057.5494|[161.585812755081...| [0.7187952, 0.608...|       [0.28391966, -0.0...|                  3|           0.99961394|                  57|                 1218|             55|             1273|                         9|            1.0914475|     1450.9519|[255.172316433840...| [0.6730009, 0.626...|       [-0.013895523, 0....|                  4|            0.9998266|\n|14798537452333824|4545469030156206081|                  56|                  974|             55|             1029|                        18|            1.1778505|     1351.2612|[445.045067944699...| [1.2498951, 1.051...|       [0.27296692, -0.1...|                  4|             0.999909|                  57|                 1336|             55|             1391|                        11|            1.3278183|     2355.5037|[755.891749133473...| [1.3029385, 1.154...|       [0.044982366, 0.2...|                  3|           0.99992436|\n|14974081355572224|4545469030156206081|                  56|                  931|             55|              986|                         4|            1.0525678|     1031.4539|[3009.14632490717...| [3.4380908, 2.883...|       [0.38939443, -0.0...|                  7|            0.9999921|                  57|                 1192|             55|             1247|                        20|             1.028117|      1259.973|[4528.03720061014...| [2.3853333, 2.132...|       [2.82696E-4, 0.21...|                  7|            0.9999957|\n|15172680643315456|4545469030156206081|                  56|                 1042|             55|             1097|                         4|            1.0449891|     1137.8662|[111.576872718817...| [0.6066077, 0.517...|       [0.2497803, -0.09...|                  3|           0.99931633|                  57|                 1324|             55|             1379|                         5|            1.0225983|     1384.5164|[213.153426255507...| [0.5660178, 0.524...|       [0.068657, 0.1413...|                  5|             0.999832|\nnonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d29"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657196930671_1142305104",
      "id": "paragraph_1657196930671_1142305104",
      "dateCreated": "2022-07-07 12:28:50.671",
      "dateStarted": "2022-07-07 12:43:44.073",
      "dateFinished": "2022-07-07 12:43:46.375",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n\nspark.sql(\u0027USE gaiadr3\u0027)\n\nspark.catalog.listTables()\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 13:21:13.986",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[Table(name\u003d\u0027astrophysical_parameters\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027astrophysical_parameters_supp\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027epoch_photometry\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027gaia_source\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027rvs_mean_spectrum\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027xp_continuous_mean_spectrum\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027xp_sampled_mean_spectrum\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse), Table(name\u003d\u0027xp_summary\u0027, database\u003d\u0027gaiadr3\u0027, description\u003dNone, tableType\u003d\u0027EXTERNAL\u0027, isTemporary\u003dFalse)]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d30"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d31"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d32"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d33"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d34"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d35"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d36"
            },
            {
              "jobUrl": "http://zeppelin:4041/jobs/job?id\u003d37"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657197396913_1744381331",
      "id": "paragraph_1657197396913_1744381331",
      "dateCreated": "2022-07-07 12:36:36.913",
      "dateStarted": "2022-07-07 13:21:13.991",
      "dateFinished": "2022-07-07 13:21:14.242",
      "status": "FINISHED"
    },
    {
      "text": "%pyspark\n",
      "user": "nch",
      "dateUpdated": "2022-07-07 13:21:13.990",
      "progress": 0,
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1657200073990_735696659",
      "id": "paragraph_1657200073990_735696659",
      "dateCreated": "2022-07-07 13:21:13.990",
      "status": "READY"
    }
  ],
  "name": "SetUp",
  "id": "2GP53P3PZ",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}